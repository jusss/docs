


[周四 8月 15 2019]
*** You have joined channel #haskell                                    [09:48]
*** Topic for #haskell: https://www.haskell.org |
    https://wiki.haskell.org/IRC_channel | Paste code/errors:
    https://gist.github.com/ | Logs:
    http://tunes.org/~nef/logs/haskell/?C=M;O=D |
    https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic:
    #haskell-offtopic | https://downloads.haskell.org
*** #haskell: topic set by glguy, 2019-01-05 23:21:52
*** Users on #haskell: jusss jchia nbloomf ___laika wroathe_ Kundry_Wag xcmw
    mattyw Saulzar dfeuer merijn klntsky MonkeyNOS nineonine cp ggVGc
    rainmanjam Stanley00 revprez_stg rruizt eiGHttt nect yyy- kjak fosterite
    nav2002 ByronT seanparsons iffsid pavonia kleisli_ doublex tv lassulus
    lambda-11235 poljar Sgeo nowhere_man ktonga nullifidian_ ltriant plutoniix
    s00pcan aphprentice__ pfurla kupi ziyourenxiang gienah_ rokhuz hexfive
    qwertytest ziman urodna leothrix guest278776
*** Users on #haskell: jgt dale _dga dansho alx741 Lord_of_Life Guest13728 gxt
    gehmehgeh pera andreas303 xelxebar jb55 Unhammer phreedom m4lvin notzmv
    Tops21 Jesin alicemaz javjarfer[m] NightA Tuplanolla zzz khisanth_
    treehaqr xorander shutdown_-h_now Sheilong Arahael acro pyan Natch eof
    dmwit infandum xff0x marek justanotheruser jlamothe ravenousmoose gentauro
    nicoulaj millerti ralejs subttle pie_ raatiniemi mimi_vx Ckat ystael
    darjeeling_ dddddd miseenplace[m] carlomagno1
*** Users on #haskell: xplat aarvar cgfbee mniip yahb olligobber m0rphism
    jedws catsup maralorn smakarov sektor kuttifunk libertyprime texasmynsted
    MarcelineVQ kungp drewbarbs sdx23 murgaan Foritus Guest4074 saulzar_
    marmalodak day CSP-SOFTWARE conal markus1189 Anthaas_ abhixec otto_s_ i7c
    tessier Vtec234 PragCypher lagothrix theDon xarian erlanger tsaka_ nil
    unclechu vimto thaumavorio reggie_ Bergle_1 drewr inkbottle valdyn
    electricityZZZZ cohn jdt delYsid ozychhi jle`
*** Users on #haskell: monochrom hiroaki aldum cyphase kori peel tabaqui
    vicfred laem polman srnty oeblink robogoat telser bgamari pierreimmo
    Marceline[m] p0lyph3m henriksod wraithm tinwood jophish bertschneider__
    Taneb atk feuerbach_ Cthalupa bvad Tesseraction mccoyc kraem c_wraith
    mountaingoat jameekim pi___ yaroot hodlwave forell m1dnight_ crtschin
    copypasteque jwynn6 cheshircat theNeuron saml_ obfusk__ thunderrd cheers
    dibblego zargoertzel Lowl3v3l underikar ephemera_
*** Users on #haskell: tumdedum rosalux RecursiveG pingiun rann glowcoil
    gabiruh megaTherion sm[m] banjiewen saurik bwe ambrosia_ SegFaultAX
    intelux matheus mikeplus64 Forkk milli arsdragonfly Hotbees ericsagnes
    amiri revprez_anzio rsoeldner Enigmagic bspar sghir_med[m] lexi-lambda
    haroldwu Guest39039 nyuszika7h nahra bydo cyjiao__ PoliticsII ajmcmiddlin
    xyggos mankyKitty verlet64 mujx[m4 potato44[m] d1mur4tdj[m] stepnem cepxuo
    imposs[m] eyenx[m] mmynsted[m] nshepperd
*** Users on #haskell: dongcarl tejok[m] sellout- nybble41[m] Lermex nlofaro
    cpup bradparker georgew yrid[m] kumarbis[m] joenase[m] excel_gate[m]
    Nascha dxtr benwr_ akermu seliopou hifutakiko[m] nikivi scheming_around
    miklcct DTZUZU grumble tnks mkoenig mpickering _ashbreeze_ net4all
    laniusfnv[m] Fairy meck cods Digit cynick Nikotiini zaquest zmlww[m]
    rajivr___ Klumben gilbertw1 quarters xorpse Bigcheese alanz Pete[m]
    Guy[m]1 Lite[m] foxadee[m] GhostofaConsole[ yi[m]
*** Users on #haskell: adaizen[m] alibabzo kerru[m] jesusvega[m] pqwy[m]
    hogarth[m] beatricejensen[m afontain[m] gmips[m] charliebucket[m] kylos[m]
    dustyp[m] matrixyz[m] JoGoSi[m] glowpelt alex[m]14 wrunt[m] jak[m]
    MerlinGttlinger[ pineapple[m] Grgoire[m] MartinKlimi[m] WeiTang[m]
    GNULambda[m] alexfmpe[m] bkl[m] jeeg[m] MonsieurArcher[m dag[m]
    apurvapavaskar Majiir ad5twoknebor[m] spacekitteh[m] atopuzov[m]
    mobile_x[m] josiah_sama sergiotarxz[m] seventh__ buggeas40d[m]
*** Users on #haskell: haskelllisp[m] glguy michaelpj angerman interruptinuse
    gluegadget TimWolla PyroLagus sarahzrf fiddeldibu[m] beaky Adluc zabracks
    nuxdie a3f Randy stux|RC edwel[m] ryzokuken feepo unsymbol morgib dukedave
    nbouscal duncan Jabbslad joel135 mingc elvishjerricco sebhoss sgraf simony
    AfC billstclair DrDuck ephemeron mjuad Remy^ fingerzam rslima___ xnyhps
    heyj datapup_ w1d3m0d3 moldybits steshaw[m] mycroftiv dolio nckx
    jwaksbaum[m] dmiles clog Fubar^ Vq
*** Users on #haskell: opqdonut sqrt2 noexcept hegge APic rzmt sicklorkin
    Rudd0 aesi irclogger_com [Leary] devopsdeluxe SCHAPiE cocreature
    Profpatsch sterni dminuoso bind lkurusa ahri vaibhavsagar xalek[m]
    vikraman tmallard[m] Tom[m]7 reconmaster[m] ovigren[m] mattia[m]
    jochens[m] krhubert[m] jumzi[m] jwerner[m] jhgarner[m] Kenneth[m]
    vorbex[m] kgadek[m] wildtrees[m] sudorebootsudor4 midi[m] sayukimans[m]
    sriehl[m] ldesgoui[m] luisjira[m] nartir[m] josef[m] vkleen jibby[m]1
*** Users on #haskell: intellection3to3 patonw[m] neat72[m] krowlan3[m]
    Vincent[m]2 Jonathan[m]2 corin[m]1 somni[m] rowan[m] M|GNUisnotLinux[
    lmolr[m] imp0s5ible contrun[m] jonreeve[m] ghastfilms[m] gandi[m]
    glothit7ok[m] PotatoRick[m] eckt[m] deikatsuo[m] dxml[m] pothyurf[m]
    godva[m] pschooom[m] dice[m]1 arianvp[m] LasEspuelas asayers[m]1
    adziahel[m] lapav[m] cbg[m] abc123zzz[m] brandon123[m] cosson[m] corin[m]
    JoelMcCracken[m] fulgjon Ericson2314 sujeet siraben sielicki
*** Users on #haskell: jonge[m] stan[m] macerbi[m] maigel[m] simbergm kadoban
    GregKNicholson[m iceychris[m] lierdakil[m] kaychaks[m] fgaz ClownMaster[m]
    EuAndreh[m] hdurer[m] domenkozar[m] giuseppe[m] gmind[m] aloiscochard[m]
    humanwire[m] M0ddba11[m] whoops dequbed jonatan __Myst__ spion Ewout
    teardown haasn dennisb RusAlex vk3wtf glamas hive-mind Nik05 atraii
    tomboy64 abra0 winny ClaudiusMaximus dqd byorgey metalrain erikd albel727
    dTal Chousuke sis7 eyenx ManiacTwister
*** Users on #haskell: perrier-jouet ruffy_ dustinm- laxask sim590
    dopplergange verement orion dazage uberj mnrmnaugh divVerent mceier
    thonkpod riatre jix Twey jlpeters troydm raek higherorder jkachmar cheater
    entel avn Firedancer raoulb kAworu kapilp raoul tdammers enragedjam
    enemeth79 devurandom vin-ivar hiptobecubic theorbtwo sms bolverkr zmlww
    nek0 nesqi xcthulhu xstill ftop devalot mikolaj Ornedan maerwald tms_
    abrar dixie_ Robin_Jadoul amx bbear phaazon Niamkik
*** Users on #haskell: clynamen_ kav sphalerite Ranhir yitz rom1504 Tourist
    SquidDev cartwright aplainzetakind duairc moocow_ AWizzArd micro
    betawaffle andreabedini shadowdaemon srid rizary_ Konehaltia jokester dpn`
    rodlogic jonrh monad_cat hsiktas scav pent eruditass Shun131 coot alexknvl
    sebastianrkg alunduil NemesisD Neuromancer Folkol bartavelle Clint bbear_
    jfredett hackage DDR UserOO7 tomku daissgr pcoutin niklasb_ ctag tazjin
    spamlessj vqrs jzl Jaxan_ casdr_ carter
*** Users on #haskell: tsahyt_ sethetter EduardoBautista gonz_ caasih bjs
    alexelcu iravid spinda alextes jstolarek ixian rotty fionnan rembo10 juri_
    Remavas joehillen defanor Putonlalla Geekingfrog obiwahn sukbeom hvr
    Ferdirand Someguy123 Blkt strangeglyph nkaretnikov aramiscd coius__ Paks
    mulk NinjaTrappeur ZoFLo J_Arcane jrslepak milessabin malthe hpc adadelta
    Ring0` Mon_Ouie yorick Entroacceptor _ht jonge Mo0O noko_ bollu mjlee
    scinawa fliife artem bendo arw remexre SrPx
*** Users on #haskell: liquorice cemerick AndreasK d0liver ebutleriv reyu
    [exa] bandali fryguybo1 e2 michalisko pingu_ mjrosenb Jacoby6000 wadadli
    fantasti` Adeon violeta lowryder edwtjo rubik urdh sea-gull dyl_ noCheese
    gspia dcoutts gregberns paf31_ edmundnoble leah2 MatrixBot3 chirpsalot
    Chobbes Axman6 chin-tastic ap5 infinity0 dan64 systemfault natim87 dave_uy
    earthy wagle phaul hjozwiak infinisil sdrodge teej flebron reorder_ Sose
    nurupo waskell styledash trebuh boj
*** Users on #haskell: datajerk Deadhand bengt_ alp kaol Seich phlym beka
    lachenmayer otulp ByronJohnson Tene sandman13 andyo Cale monokrome
    nibbling_ saidinwot1 xtsee abuss bsima rj1 hiredman mtjmullen jdevlieghere
    brisbin umachan wtw hc statusbot Hijiri vzdraz ion pdxleif dilinger
    dashkal charukiewicz w1gz nivpgir_ theophil893 polux7 xacktm SolarAquarion
    mudri petermw droplet totte mupf recj jrm xante aveltras petercommand
    hongminhee int-e lambdabot habbah ft swalladge
*** Users on #haskell: ycheng tomjaguarpaw christopher jackdk Moyst jesyspa
    tolt nshepperd1 Madars_ cjh` Unode ekleog TMA Tristan-Speccy Jello_Raptor
    amuck tstat implementation aristid VSpike arkeet aib dsal kip srhb Drezil
    fiQ2 thebnq liff bjobjo stylewarning bitonic averell arianvp quaestor Ke
    spoonm DustyDingo fredcy- Ulrar mxf TallerGhostWalt lispy a3Dman cjay-
    Kiruwa qzo topos stilgart lukelau twk- catern no-n jackhill raid lpsmith
    vjoki pierrot bananagram `slikts myme
*** Users on #haskell: affinespaces mitchellsalad linduxed typedrat mstruebing
    nitrix dolanbatar sbrg sud0 rootnode Cathy Netwolf thjread nshepperd2 pong
    azahi rotaerk kqr chindy Ankhers pdgwien madnight dysfigured atomi
    freeside jol TommyC andromeda-galaxy S007 dexterfoo zerokarmaleft PierreM
    heath lugh jvanbure luite dstolfa swater Kamuela jsatk DigitalKiwi comboy
    nekomune teehemkay Arguggi qz statusfailed oats Athas linoge Intensity
    Dykam dmj` wildsebastian amatecha thi
*** Users on #haskell: newhoggy_ nh2 integral edwardk dumptruckman ibloom
    roflik tsani asm89 Franciman sm codedmart agrif marble_visions yumh ski e
    bdw Philonous mikolaj_ winkill thallada _janne daGrevis mrus h30 dxld
    vktec s4msung MindlessDrone zymurgy SlashLife Patternmaster Logio
    cyberlard nyaomi epta tristanC fr33domlover Meanirelli ent CindyLinz srk
    GGMethos canta digia __4matter_ jtcs silverneedle Squarism PlasmaStar
    tehidiot stiell griddle cpape @Sigyn Firedancer_ tA-
*** Users on #haskell: Igloo bcmiller restrictedchoice bitemyapp noan tureba
    hsyl20 zenzike lemald evilmonads AkhILman phadej absence greeny__ deu
    krystianbajno shapr __name__ gothos klugez gargawel_ aidecoe uwap_
    terrorjack__ dgpratt koankeeper Flonk nisstyre mrsbear loc kini wayne
    Annihitek ynyounuo rkrishnan vodkaInferno bs lyxia zxrf graingert adius
    @ChanServ ereu benl23 echoreply Heffalump chivay travv0 simon elcaro
    stefan-__ koz_ sigmundv- Maxdamantus johnstein n3t
*** Users on #haskell: pacak kark Batholith esph wrengr_away stvc aweinstock
    bob_twinkles nemesit|znc steell_ Zemyla lavalike cross JSharp drdo
    kipras`away zv ullbeking jbetz d6e dh freusque apoc andjjj23 Jon rootmos
    Rembane lstdgtfp joeyh m-renaud sclv Nevoic Ekho dfordivam subfacto1
    newhoggy kyagrd__ ocharles Guillaum immae nopf kubrat oleks adamse
    mmaruseacph2 cbarrett lightandlight jetpack_joe pasukon nonzen Sparadox
    energizer_ yushyin M2tias johs so suzu _guios exarkun
*** Users on #haskell: orzo apeyroux_ diginet bcoppens RoguePointer ab9rf AJTJ
    noctux Phyx- haveo runawayfive MasseR dredozubov c-rog Tspoon__ michalrus
    gsingh93 ecx86 Peter_Storm jmsx abbe flogfr hodapp mrd scal PHO connrs_
    Jonno_FTW scivola Eliel locallycompact ammar2 blackdog t36s gambpang
    hexagoxel deni connrs- PtxDK lortabac Reisen exferenceBot lurkless [df]
    Aleksejs coldpress carbolymer exio4 puffnfresh fiddlerwoaroof sivs _flow_
    Deewiant lieven tchakka kosmikus
*** Users on #haskell: barrucadu rodgzilla koala_man eldritch geal luigy jorj
    Willis EvanR crooked d3lxa adarshaj eagleflo Xandaros wz1000 fiatjaf
    pharaun sssilver Kneiva avp _6a68 anderson djanatyn solarus jinblack
    markhuge idupree DwarfMaster davean iron_houzi kloeri joeytwiddle adamCS
    furnost
*** #haskell URL: http://www.haskell.org/
*** #haskell modes: +CLnt
*** #haskell was created on 2006-11-26 14:42:48
*** sektor (~sektor@95.87.234.241) has quit: Ping timeout: 245 seconds
*** electricityZZZZ (~cpu@108-216-157-17.lightspeed.sntcca.sbcglobal.net) has
    quit: Read error: Connection reset by peer
*** jchia (~jchia@58.32.33.75) has quit: Client Quit
*** ddellacosta (~dd@193.148.18.211) has joined channel #haskell
*** jchia (~jchia@45.32.62.73) has joined channel #haskell
*** electricityZZZZ (~cpu@108-216-157-17.lightspeed.sntcca.sbcglobal.net) has
    joined channel #haskell
*** jchia (~jchia@45.32.62.73) has quit: Remote host closed the connection
                                                                        [09:49]
*** jchia (~jchia@45.32.62.73) has joined channel #haskell
*** jchia (~jchia@45.32.62.73) has quit: Remote host closed the connection
                                                                        [09:50]
*** jchia (~jchia@58.32.33.75) has joined channel #haskell              [09:51]
*** nect (~nect@pool-108-25-16-142.atclnj.east.verizon.net) has quit: Remote
    host closed the connection                                          [09:53]
*** tromp (~tromp@2a02:a210:1585:3200:ed87:357a:dba2:2ed5) has joined channel
    #haskell                                                            [09:54]
*** vicfred (~vicfred@189.216.85.255) has quit: Quit: Leaving           [09:58]
*** tromp (~tromp@2a02:a210:1585:3200:ed87:357a:dba2:2ed5) has quit: Ping
    timeout: 250 seconds                                                [09:59]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 245
    seconds                                                             [10:02]
*** dTal_ (~quassel@dragonbox/users/dtal) has joined channel #haskell   [10:05]
*** dTal (~quassel@dragonbox/users/dtal) has quit: Ping timeout: 272 seconds
*** zacts (~zacts@dragora/developer/zacts) has joined channel #haskell  [10:06]
*** pi__ (~pi@dslb-088-077-207-002.088.077.pools.vodafone-ip.de) has joined
    channel #haskell                                                    [10:07]
*** kupi (uid212005@gateway/web/irccloud.com/x-fwldzmxhkkwpenyg) has quit:
    Quit: Connection closed for inactivity                              [10:08]
*** pi___ (~pi@dslb-088-076-069-139.088.076.pools.vodafone-ip.de) has quit:
    Ping timeout: 258 seconds                                           [10:10]
*** mdunnio (~mdunnio@208.59.170.5) has joined channel #haskell         [10:11]
*** ltriant_ (~ltriant@58-7-141-74.dyn.iinet.net.au) has joined channel
    #haskell                                                            [10:13]
*** Azel (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) has joined
    channel #haskell                                                    [10:15]
*** xff0x (~fox@softbank060071124198.bbtec.net) has quit: Quit: xff0x   [10:16]
*** ltriant (~ltriant@210-84-36-143.dyn.iinet.net.au) has quit: Ping timeout:
    272 seconds                                                         [10:17]
*** plutoniix (~q@175.176.222.7) has quit: Quit: Leaving
*** yyy- (~yyy@unaffiliated/tinnotl) has quit: Remote host closed the
    connection                                                          [10:19]
*** vicfred (~vicfred@189.216.85.255) has joined channel #haskell       [10:21]
*** cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has quit: Quit:
    Breaking stuff                                                      [10:22]
*** dsiypl4 (~dsiypl4@105.158.110.143) has joined channel #haskell      [10:23]
* hackage concurrent-dns-cache 0.1.3 - Concurrent DNS cache
  https://hackage.haskell.org/package/concurrent-dns-cache-0.1.3
  (KazuYamamoto)
*** dmitri (~dima14@ppp-58-11-29-139.revip2.asianet.co.th) has joined channel
    #haskell                                                            [10:25]
*** ystael (~ystael@209.6.50.55) has quit: Ping timeout: 245 seconds    [10:26]
*** theDon (~td@94.134.91.18) has quit: Ping timeout: 258 seconds
*** cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has joined channel
    #haskell                                                            [10:27]
*** dsiypl4 (~dsiypl4@105.158.110.143) has quit: Ping timeout: 244 seconds
*** theDon (~td@94.134.91.24) has joined channel #haskell               [10:28]
<rubik> anybody still awake?                                            [10:34]
<rubik> i'm spicking through the typeclassopedia currently
<dmwit> ?where justask                                                  [10:35]
<lambdabot> Just ask your question. If somebody knows, they'll answer. If not,
            they won't, and you'll wait around; it will be no worse than
            having nobody who wants to claim expertise.
<monochrom> I think they're already typing in the question.
<rubik> ok sry
<monochrom> ?where dontanswer                                           [10:36]
<lambdabot> I know nothing about dontanswer.
<monochrom> ?where dontpressenter
<lambdabot> I know nothing about dontpressenter.                        [10:37]
*** urodna (~urodna@unaffiliated/urodna) has quit: Quit: urodna
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has quit: Remote host closed the
    connection                                                          [10:41]
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has joined channel #haskell  [10:42]
*** millerti (~millerti@cpe-66-24-91-119.stny.res.rr.com) has quit: Ping
    timeout: 272 seconds                                                [10:44]
*** nshepperd (~nshepperd@185.212.170.227) has quit: Quit: bye          [10:45]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
*** xcmw (~textual@50-233-83-229-static.hfc.comcastbusiness.net) has quit:
    Quit: Textual IRC Client: www.textualapp.com                        [10:46]
*** zacts (~zacts@dragora/developer/zacts) has quit: Quit: WeeChat 2.4
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has quit: Ping timeout: 245 seconds
*** zacts (~zacts@dragora/developer/zacts) has joined channel #haskell
*** mdunnio (~mdunnio@208.59.170.5) has quit: Quit: My MacBook Air has gone to
    sleep. ZZZzzz…                                                     [10:47]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 248
    seconds                                                             [10:50]
*** neightchan (~natechan@108-233-125-227.lightspeed.sntcca.sbcglobal.net) has
    joined channel #haskell
*** lagothrix (~lagothrix@unaffiliated/lagothrix) has quit: Killed
    (orwell.freenode.net (Nickname regained by services))
*** lagothrix (~lagothrix@unaffiliated/lagothrix) has joined channel #haskell
*** edrx (~Eduardo@177.55.195.41) has joined channel #haskell           [10:51]
*** nav2002 (~nav2002@115.99.134.117) has quit: Ping timeout: 248 seconds
*** dTal (~quassel@dragonbox/users/dtal) has joined channel #haskell    [10:52]
*** dTal_ (~quassel@dragonbox/users/dtal) has quit: Ping timeout: 268 seconds
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has joined
    channel #haskell                                                    [10:54]
*** nbloomf (~nbloomf@2600:1700:83e0:1f40:91b0:45fa:d98:f5bd) has quit: Quit:
    My MacBook has gone to sleep. ZZZzzz…                              [10:55]
*** [Leary] (~leary@122-57-138-132-adsl.sparkbb.co.nz) has quit: Remote host
    closed the connection                                               [10:56]
*** m0rphism (~m0rphism@149.172.82.115) has quit: Ping timeout: 268 seconds
                                                                        [10:58]
*** nineonine (~nineonine@216-19-190-182.dyn.novuscom.net) has quit: Remote
    host closed the connection
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
*** nineonine (~nineonine@demo-vpn.calabrio.com) has joined channel #haskell
                                                                        [10:59]
*** ByronT (~ByronT@141.98.101.133) has quit:                           [11:00]
*** nav2002_ (~nav2002@115.99.1.84) has joined channel #haskell
*** neightchan (~natechan@108-233-125-227.lightspeed.sntcca.sbcglobal.net) has
    quit: Quit: WeeChat 2.4
*** raek (~raek@h-152-171.A163.priv.bahnhof.se) has quit: Ping timeout: 248
    seconds                                                             [11:01]
<Axman6> rubik: did you have a question about the typeclassopeadia?     [11:03]
*** clintbellanger (~clintbell@185.204.1.185) has joined channel #haskell
*** edrx (~Eduardo@177.55.195.41) has left channel #haskell: "Killed buffer"
                                                                        [11:04]
*** wroathe_ (~msgnickse@ip-99-203-48-36.pools.spcsdns.net) has quit: Read
    error: Connection reset by peer                                     [11:11]
*** wroathe (~msgnickse@c-73-94-150-224.hsd1.mn.comcast.net) has joined
    channel #haskell
*** zacts (~zacts@dragora/developer/zacts) has quit: Quit: WeeChat 2.4  [11:14]
*** wroathe (~msgnickse@c-73-94-150-224.hsd1.mn.comcast.net) has quit: Read
    error: Connection reset by peer
*** nbloomf (~nbloomf@2600:1700:83e0:1f40:91b0:45fa:d98:f5bd) has joined
    channel #haskell                                                    [11:16]
*** wroathe (~msgnickse@2603:3016:1706:a3e1:8828:81e1:e2ae:a316) has joined
    channel #haskell                                                    [11:17]
*** bernardvje7 (~leonard@58.234.102.191) has joined channel #haskell   [11:18]
*** wroathe (~msgnickse@2603:3016:1706:a3e1:8828:81e1:e2ae:a316) has quit:
    Read error: Connection reset by peer
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    quit: Ping timeout: 258 seconds                                     [11:19]
*** dddddd (~dddddd@unaffiliated/dddddd) has quit: Remote host closed the
    connection
*** otto_s (~user@p4FF27B99.dip0.t-ipconnect.de) has joined channel #haskell
                                                                        [11:20]
*** antsmartian (~antsmarti@171.60.244.222) has joined channel #haskell
                                                                        [11:22]
*** orion (~orion@unaffiliated/orion) has quit: Quit: ""
*** otto_s_ (~user@p4FF27CF2.dip0.t-ipconnect.de) has quit: Ping timeout: 258
    seconds                                                             [11:23]
*** wroathe (~msgnickse@c-73-94-150-224.hsd1.mn.comcast.net) has joined
    channel #haskell
*** fphilipe_ (~phil@2a02:168:f6c3:0:2451:dfca:b776:d2d) has joined channel
    #haskell
*** bernardvje7 (~leonard@58.234.102.191) has left channel #haskell: #haskell
                                                                        [11:25]
*** fphilipe_ (~phil@2a02:168:f6c3:0:2451:dfca:b776:d2d) has quit: Ping
    timeout: 264 seconds                                                [11:30]
*** xff0x (~fox@210.57.57.162) has joined channel #haskell
*** libertyprime (~libertypr@101.98.42.91) has quit: Quit: leaving
*** lastmanstanding (~arjoonn@111.92.50.135) has joined channel #haskell
                                                                        [11:31]
*** jeffry (~clare@112.185.232.208) has joined channel #haskell         [11:32]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 245
    seconds
*** Tops21 (~Tobias@dyndsl-095-033-113-017.ewe-ip-backbone.de) has quit: Read
    error: Connection reset by peer                                     [11:34]
*** Saukk (~Saukk@2001:998:e4:4a03:1c59:9bb5:b94c:3) has joined channel
    #haskell                                                            [11:35]
*** jeffry (~clare@112.185.232.208) has left channel #haskell: #haskell
                                                                        [11:37]
*** fosterite (~fosterite@2601:445:447f:dd14:45d3:bf6c:26fc:8e3f) has quit:
    Remote host closed the connection                                   [11:38]
*** nbloomf (~nbloomf@2600:1700:83e0:1f40:91b0:45fa:d98:f5bd) has quit: Quit:
    My MacBook has gone to sleep. ZZZzzz…                              [11:42]
*** tromp (~tromp@2a02:a210:1585:3200:ed87:357a:dba2:2ed5) has joined channel
    #haskell
*** zacts (~zacts@dragora/developer/zacts) has joined channel #haskell  [11:46]
*** robogoat (~robogoat@163.172.136.88) has quit: Ping timeout: 245 seconds
                                                                        [11:47]
*** tromp (~tromp@2a02:a210:1585:3200:ed87:357a:dba2:2ed5) has quit: Ping
    timeout: 264 seconds
*** robogoat (~robogoat@163.172.136.88) has joined channel #haskell
*** cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has quit: Quit:
    Breaking stuff                                                      [11:48]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
                                                                        [11:49]
*** chalkmonster (~chalkmons@unaffiliated/chalkmonster) has joined channel
    #haskell                                                            [11:51]
<___laika> let me know if i have this right: haskell's Functor is,
           necessarily, an endofunctor for the category Hask. for Category y
           and Category z, a given haskell Functor could also be a "non
           endofunctor" mapping y to z, or an endofunctor for the arbitrary
           Category y, mapping y to y. does this make sense?
*** chalkmonster (~chalkmons@unaffiliated/chalkmonster) has quit: Client Quit
                                                                        [11:52]
*** cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has joined channel
    #haskell
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 245
    seconds                                                             [11:53]
*** rprije (~rprije@14-201-51-211.tpgi.com.au) has joined channel #haskell
                                                                        [11:54]
*** mattyw (~mattyw@17.88.160.14) has quit: Ping timeout: 244 seconds   [11:57]
<___laika> or rather, for all a, Functor a is an endofunctor in Hask
*** mattyw (~mattyw@17.88.160.14) has joined channel #haskell
*** dmitri (~dima14@ppp-58-11-29-139.revip2.asianet.co.th) has quit: Quit:
    This computer has gone to sleep                                     [12:01]
*** plutoniix (~q@175.176.222.7) has joined channel #haskell
*** mattyw (~mattyw@17.88.160.14) has quit: Ping timeout: 245 seconds   [12:02]
*** retropikzel (~Retropikz@dsl-trebng21-58c188-106.dhcp.inet.fi) has joined
    channel #haskell                                                    [12:04]
<EvanR> for all Functor f, f is an endofunctor on Hask                  [12:05]
<EvanR> handwaving for the sake of something what Hask is               [12:06]
<EvanR> just saying f is the type ctor, Functor f is the evidence that f is a
        functor                                                         [12:08]
*** justsomeguy (~justsomeg@unaffiliated/--/x-3805311) has joined channel
    #haskell                                                            [12:10]
*** nowhereman (~pierre@lns-bzn-40-82-251-135-32.adsl.proxad.net) has joined
    channel #haskell                                                    [12:12]
*** nowhere_man (~pierre@2a01:e35:2fb8:7200:7df1:aa60:3c95:97c4) has quit:
    Ping timeout: 252 seconds
*** mattyw (~mattyw@17.88.160.14) has joined channel #haskell
*** keepLearning512 (~keepLearn@106.51.235.188) has joined channel #haskell
*** seventh__ (seventh__@2a01:7e00::f03c:91ff:fee8:ac76) has quit: Changing
    host                                                                [12:13]
*** seventh__ (seventh__@unaffiliated/seventh--/x-9387472) has joined channel
    #haskell
*** Saukk (~Saukk@2001:998:e4:4a03:1c59:9bb5:b94c:3) has quit: Remote host
    closed the connection                                               [12:16]
*** mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit: Ping
    timeout: 245 seconds                                                [12:17]
*** mattyw (~mattyw@17.88.160.14) has quit: Ping timeout: 244 seconds   [12:19]
*** pera (~pera@unaffiliated/pera) has quit: Ping timeout: 272 seconds
*** mattyw (~mattyw@17.88.160.14) has joined channel #haskell
*** leungbk (~user@2605:e000:1315:706:881c:4294:c914:b97a) has joined channel
    #haskell                                                            [12:20]
*** jakobhillerstrom (~jakobhill@188.151.20.98) has joined channel #haskell
<jle`> ___laika: any functor represented by the Functor typeclass is from
       category Hask to category Hask                                   [12:22]
<jle`> we can represent other sorts of functors in a programming language, but
       specifically the Functor typeclass represents a functor from Hask to
       Hask
<___laika> that makes sense
*** keepLearning512 (~keepLearn@106.51.235.188) has quit: Remote host closed
    the connection
<jle`> the Functor typeclass from the base library, in Data.Functor
*** mountaingoat (~mountaing@unaffiliated/mountaingoat) has joined channel
    #haskell                                                            [12:23]
<___laika> yes :) some of the category theory is just starting to stick...
<___laika> just a lil
*** jakobhillerstrom (~jakobhill@188.151.20.98) has quit: Ping timeout: 245
    seconds                                                             [12:24]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
                                                                        [12:28]
*** wroathe_ (~msgnickse@ip-99-203-48-36.pools.cgn.spcsdns.net) has joined
    channel #haskell                                                    [12:29]
*** leungbk (~user@2605:e000:1315:706:881c:4294:c914:b97a) has quit: Remote
    host closed the connection                                          [12:30]
*** wroathe (~msgnickse@c-73-94-150-224.hsd1.mn.comcast.net) has quit: Ping
    timeout: 244 seconds
*** wroathe_ (~msgnickse@ip-99-203-48-36.pools.cgn.spcsdns.net) has quit: Read
    error: Connection reset by peer                                     [12:31]
*** day__ (~Unknown@unaffiliated/day) has joined channel #haskell       [12:32]
*** ironhaven (~nick-1154@2601:442:4400:58f0:b1ce:1007:3f79:2731) has joined
    channel #haskell
*** nshepperd (~nshepperd@185.212.170.227) has joined channel #haskell
*** ht_ (~Thunderbi@2a02:a210:9501:ad80:24de:3d8e:270b:9263) has joined
    channel #haskell                                                    [12:34]
*** day (~Unknown@unaffiliated/day) has quit: Ping timeout: 246 seconds
                                                                        [12:35]
*** day__ (~Unknown@unaffiliated/day) is now known as day
*** nav2002_ (~nav2002@115.99.1.84) has quit: Quit: Going offline, see ya!
    (www.adiirc.com)
*** wroathe (~msgnickse@c-68-54-25-135.hsd1.mn.comcast.net) has joined channel
    #haskell
*** dmitri (~dima14@ppp-58-11-29-139.revip2.asianet.co.th) has joined channel
    #haskell                                                            [12:37]
*** dfeuer_ (~dfeuer@wikimedia/Dfeuer) has joined channel #haskell      [12:39]
*** dfeuer (~dfeuer@wikimedia/Dfeuer) has quit: Ping timeout: 272 seconds
                                                                        [12:40]
*** rainmanj_ (~rainmanja@97-120-26-121.ptld.qwest.net) has joined channel
    #haskell                                                            [12:43]
*** rainmanjam (~rainmanja@2601:1c0:6600:7479:9d81:b661:fb2c:1a94) has quit:
    Ping timeout: 264 seconds                                           [12:47]
*** ironhaven (~nick-1154@2601:442:4400:58f0:b1ce:1007:3f79:2731) has quit:
    Read error: Connection reset by peer                                [12:49]
*** ralejs (~ralejs@2620:10d:c092:180::1:b631) has quit: Remote host closed
    the connection                                                      [13:01]
*** ralejs (~ralejs@2620:10d:c092:180::1:b631) has joined channel #haskell
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 258
    seconds                                                             [13:02]
*** dale (~dale@unaffiliated/dale) has quit: Quit: My computer has gone to
    sleep                                                               [13:06]
*** ab9rf (~ab9rf@2001:558:6033:16d:ccf:57fa:8f1e:b620) has quit: Ping
    timeout: 264 seconds                                                [13:07]
*** subttle (~anonymous@unaffiliated/subttle) has quit: Quit: leaving   [13:09]
<dmitri> Hey folks, can anyone help with problems installing ghcup?
<dmitri> getting this error: Failed to create temporary directory       [13:10]
<dmitri> "ghcup --cache install" failed!
<dmitri> trying to follow https://www.haskell.org/ghcup/#
*** antsmartian (~antsmarti@171.60.244.222) has quit: Remote host closed the
    connection
*** raek (~raek@h-152-171.A163.priv.bahnhof.se) has joined channel #haskell
                                                                        [13:11]
*** ht_ (~Thunderbi@2a02:a210:9501:ad80:24de:3d8e:270b:9263) has quit: Remote
    host closed the connection
*** Guest13728 (~jao@pdpc/supporter/professional/jao) has quit: Remote host
    closed the connection                                               [13:12]
*** ralejs (~ralejs@2620:10d:c092:180::1:b631) has quit: Remote host closed
    the connection                                                      [13:14]
*** ralejs (~ralejs@2620:10d:c092:180::1:b631) has joined channel #haskell
                                                                        [13:15]
*** dima1440 (3a0b1d8b@gateway/web/cgi-irc/kiwiirc.com/ip.58.11.29.139) has
    joined channel #haskell                                             [13:17]
*** fphilipe_ (~phil@2a02:168:f6c3:0:2451:dfca:b776:d2d) has joined channel
    #haskell                                                            [13:20]
*** ltriant_ (~ltriant@58-7-141-74.dyn.iinet.net.au) has quit: Quit: leaving
                                                                        [13:22]
*** zacts (~zacts@dragora/developer/zacts) has quit: Quit: WeeChat 2.4  [13:23]
*** ggVGc (~ggVGc@unaffiliated/walt) has quit: Ping timeout: 272 seconds
                                                                        [13:24]
*** fphilipe_ (~phil@2a02:168:f6c3:0:2451:dfca:b776:d2d) has quit: Ping
    timeout: 264 seconds                                                [13:25]
* hackage antiope-s3 7.3.0 - Please see the README on Github at
  <https://github.com/arbor/antiope#readme>
  https://hackage.haskell.org/package/antiope-s3-7.3.0 (arbornetworks)  [13:27]
*** rainmanj_ (~rainmanja@97-120-26-121.ptld.qwest.net) has quit: Read error:
    Connection reset by peer
* hackage antiope-athena 7.3.0, antiope-sqs 7.3.0, antiope-messages 7.3.0,
  antiope-swf 7.3.0, antiope-contract 7.3.0, antiope-sns 7.3.0,
  antiope-dynamodb 7.3.0, antiope-core 7.3.0, antiope-optparse-applicative
  7.3.0 (arbornetworks)                                                 [13:28]
*** rainmanjam (~rainmanja@97-120-26-121.ptld.qwest.net) has joined channel
    #haskell
*** mattyw (~mattyw@17.88.160.14) has quit: Quit: leaving               [13:29]
*** tromp (~tromp@2a02:a210:1585:3200:ed87:357a:dba2:2ed5) has joined channel
    #haskell                                                            [13:30]
*** danvet (~Daniel@2a02:168:569e:0:3106:d637:d723:e855) has joined channel
    #haskell                                                            [13:32]
*** dima1440 (3a0b1d8b@gateway/web/cgi-irc/kiwiirc.com/ip.58.11.29.139) has
    quit: Remote host closed the connection                             [13:33]
*** acidjnk (~acid@i577BCA73.versanet.de) has joined channel #haskell   [13:34]
*** acidjnk (~acid@i577BCA73.versanet.de) has left channel #haskell: #haskell
*** acidjnk (~acid@i577BCA73.versanet.de) has joined channel #haskell
<cocreature> dmitri: can you show more of the output you’re getting? maybe
             just put all of it in a github gist or some other pastebin site
*** tromp (~tromp@2a02:a210:1585:3200:ed87:357a:dba2:2ed5) has quit: Ping
    timeout: 264 seconds                                                [13:36]
*** ddellacosta (~dd@193.148.18.211) has quit: Ping timeout: 245 seconds
                                                                        [13:37]
*** Sheilong (uid293653@gateway/web/irccloud.com/x-zlxwvwtwtxeofsko) has quit: 
                                                                        [13:38]
*** dima14 (3a0b1d8b@ppp-58-11-29-139.revip2.asianet.co.th) has joined channel
    #haskell                                                            [13:39]
*** dfeuer_ (~dfeuer@wikimedia/Dfeuer) has quit: Ping timeout: 268 seconds
                                                                        [13:42]
<dmitri> @cocreature> please see errors here:
         https://gist.github.com/dmitriz/a128155631b40704cdd5ac6b0aba36a0
                                                                        [13:43]
<lambdabot> Unknown command, try @list
*** fphilipe_ (~phil@2a02:168:f6c3:0:2451:dfca:b776:d2d) has joined channel
    #haskell
*** rainmanj_ (~rainmanja@c-73-25-81-6.hsd1.or.comcast.net) has joined channel
    #haskell                                                            [13:44]
*** rainmanjam (~rainmanja@97-120-26-121.ptld.qwest.net) has quit: Read error:
    No route to host
<cocreature> dmitri: That’s macos’ mktemp being different from the gnu
             mktemp, see
             https://unix.stackexchange.com/questions/30091/fix-or-alternative-for-mktemp-in-os-x
*** rainmanjam (~rainmanja@97-120-26-121.ptld.qwest.net) has joined channel
    #haskell                                                            [13:45]
<cocreature> The easiest fix is probably to patch the ghcup script and replace
             "mktemp -d" with "mktemp -d -t tmpdir"
<cocreature> Alternatively, get a gnu mktemp from somewhere and put it in PATH
                                                                        [13:47]
<cocreature> probably worth reporting on the ghcup issue tracker if there is
             not already an issue                                       [13:48]
<dmitri> Ah thanks! How nice of them to make it different for MacOS :)
*** rainmanj_ (~rainmanja@c-73-25-81-6.hsd1.or.comcast.net) has quit: Ping
    timeout: 245 seconds
*** p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has quit: Ping
    timeout: 252 seconds                                                [13:54]
*** cur8or (~cur8or@2c0f:fbe1::6c34:11c0:b08b:db55) has joined channel
    #haskell
*** ab9rf (~ab9rf@2001:558:6033:16d:ccf:57fa:8f1e:b620) has joined channel
    #haskell                                                            [13:55]
*** p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has joined
    channel #haskell                                                    [13:56]
*** errst (~errst@213.43.167.100) has joined channel #haskell
<dima14> @cocreature The patch had worked, thanks again!                [13:57]
<lambdabot> Unknown command, try @list
<Axman6> dima14: we don't use @ on IRC :)
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
                                                                        [13:58]
<dima14> Axman6: I see, thanks                                          [13:59]
*** xorander (~xorander@50.216.161.66.ded-dsl.fuse.net) has quit: Remote host
    closed the connection
*** clintbellanger (~clintbell@185.204.1.185) has quit:                 [14:00]
<dima14> I am really trying to install this better REPL:
         https://github.com/litxio/ptghci                               [14:01]
<dima14> But my "stack" is too old, which of course I have only found out by
         googling the error                                             [14:02]
*** p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has quit: Ping
    timeout: 250 seconds                                                [14:05]
*** p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has joined
    channel #haskell                                                    [14:06]
*** erlanger (uid181036@gateway/web/irccloud.com/x-ylaspgmeubeinuqr) has quit:
    Quit: Connection closed for inactivity                              [14:08]
*** sagax (~sagax_nb@213.138.71.146) has joined channel #haskell        [14:09]
*** freeman42x[m] (~freeman42@2a02:8084:e80:9580:d5cf:e36d:8a43:ec3) has
    joined channel #haskell                                             [14:10]
*** slomo (~slomo@unaffiliated/slomo) has joined channel #haskell
*** linarcx (~linarcx@151.241.55.125) has joined channel #haskell       [14:11]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Remote host closed the connection                                   [14:12]
<dminuoso> Is this a buggy diagnostic? How does GHC come to the conclusion
           that the "Actual type" of exceptions is ⌜[E.Handler IO (Either
           ServerError a0)]⌝
           https://gist.github.com/dminuoso/3e50d3f8cb179b659562d4580485142e 
                                                                        [14:14]
<dminuoso> exceptions should fail to type check.
*** cur8or (~cur8or@2c0f:fbe1::6c34:11c0:b08b:db55) has quit: Quit: My MacBook
    has gone to sleep. ZZZzzz…                                         [14:15]
<dminuoso> It doesn't have any actual type.                             [14:16]
*** Pausenbrot (~Pausenbro@dslb-094-220-029-240.094.220.pools.vodafone-ip.de)
    has joined channel #haskell
*** dmitri (~dima14@ppp-58-11-29-139.revip2.asianet.co.th) has quit: Quit:
    This computer has gone to sleep                                     [14:17]
<Cale> dminuoso: When there's more than one type mismatch, it can be hard to
       say which thing gets blamed                                      [14:18]
<Cale> If you add a type signature to exceptions, it should give you a better
       error.
<Cale> It determined the actual type by looking at the first element of the
       list
<dminuoso> Cale: So GHCs inference is fast and lose and doesn't fully infer
           the type, instead making a quick guess and later checking whether
           it was right?                                                [14:19]
<Cale> It would also have complained about the second element -- you might
       even also have that error message somewhere in your GHC output?
<dminuoso> Cale: No it didnt, it stopped right there.
<Cale> What happens if you swap the elements of the list?               [14:20]
<dminuoso> Cale: Then I get the expected diagnostic on ⌜exceptions⌝     [14:21]
<jle`> dminuoso: this looks like a property of Hindley Milner
*** dima14 (3a0b1d8b@ppp-58-11-29-139.revip2.asianet.co.th) has quit: Ping
    timeout: 260 seconds
<Cale> Yeah, it's probably just a property of the order in which the
       expression is being traversed during typechecking
<Cale> It's finding the outermost type error                            [14:22]
<jle`> it tries to guess at a type by filling in holes (nondeterminstically),
       and as soon as it finds a contradiction, it poots out
<dminuoso> jle`: Ohh wow, actually that makes sense. I forgot how lists are
           defined. :)
*** phreedom (~quassel@gateway/tor-sasl/phreedom) has quit: Remote host closed
    the connection
*** phreedom (~quassel@gateway/tor-sasl/phreedom) has joined channel #haskell
<dminuoso> Since that list is actually (E.Handler prpgSrvErr : xs) it can use
           the type of : and the app rule to infer its type.
<Cale> yes
*** polman (~ananevtem@128-71-14-65.broadband.corbina.ru) has quit: Ping
    timeout: 245 seconds                                                [14:23]
<Cale> and then the type that it infers from that is already a problem
<Cale> without having to consider xs
<dminuoso> Right
*** polman (~ananevtem@2.95.169.132) has joined channel #haskell
<dminuoso> Thank you both. :)                                           [14:24]
<Cale> Maybe it ought to be more aggressive and try to recover and typecheck
       exceptions on its own, but... there are certain concessions that are
       currently made
*** dave_uy (~david@108.61.193.26) has quit: Quit: The Lounge -
    https://thelounge.chat
*** dmitri (~dima14@ppp-58-11-29-139.revip2.asianet.co.th) has joined channel
    #haskell                                                            [14:25]
*** dave_uy (~david@108.61.193.26) has joined channel #haskell
*** dima14 (3a0b1d8b@ppp-58-11-29-139.revip2.asianet.co.th) has joined channel
    #haskell                                                            [14:26]
*** doublex (~doublex@2601:542:c480:6ee0:1de2:ae8f:a7bf:82ab) has quit: Ping
    timeout: 250 seconds
*** nineonine (~nineonine@demo-vpn.calabrio.com) has quit: Remote host closed
    the connection
*** vlatkoB (~IRC_clien@unaffiliated/vlatkob) has joined channel #haskell
                                                                        [14:29]
*** dramforever (~dramforev@unaffiliated/dramforever) has joined channel
    #haskell
*** freeman42x[m] (~freeman42@2a02:8084:e80:9580:d5cf:e36d:8a43:ec3) has quit:
    Ping timeout: 252 seconds
*** pleia21 (~pleia2@89.249.74.218) has joined channel #haskell         [14:31]
*** vlatkoB_ (~IRC_clien@unaffiliated/vlatkob) has joined channel #haskell
*** freeman42x[m] (~freeman42@80.233.35.64) has joined channel #haskell
                                                                        [14:32]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 268
    seconds                                                             [14:33]
*** vlatkoB (~IRC_clien@unaffiliated/vlatkob) has quit: Ping timeout: 245
    seconds                                                             [14:35]
*** Pausenbrot (~Pausenbro@dslb-094-220-029-240.094.220.pools.vodafone-ip.de)
    has quit: Quit: .oO(ZZZzz)                                          [14:39]
*** lambda-11235 (~lambda-11@207.183.239.54) has quit: Quit: Bye        [14:41]
*** Nta1e (~Nta1e@h42.n1.ips.mtn.co.ug) has joined channel #haskell     [14:44]
*** ggole (~ggole@2001:8003:8119:7200:8585:5c8:c758:e5d3) has joined channel
    #haskell
*** shafox (~shafox@49.205.220.105) has joined channel #haskell         [14:45]
*** ralejs (~ralejs@2620:10d:c092:180::1:b631) has quit: Ping timeout: 264
    seconds                                                             [14:48]
*** encod3 (~encod3@89.20.162.146.static.ef-service.nl) has joined channel
    #haskell                                                            [14:54]
*** dramforever (~dramforev@unaffiliated/dramforever) has quit: Remote host
    closed the connection
*** dramforever (~dramforev@unaffiliated/dramforever) has joined channel
    #haskell
*** reactormonk (~tass@ip5f5bf76f.dynamic.kabel-deutschland.de) has joined
    channel #haskell                                                    [14:55]
*** chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499) has joined channel
    #haskell
*** andyo (~andyo@63.228.117.97) has quit: Quit: ZNC 1.7.2 - https://znc.in
                                                                        [14:56]
*** tromp (~tromp@2a02:a210:1585:3200:6804:a0ad:732:165a) has joined channel
    #haskell                                                            [14:57]
*** olligobber (olligobber@gateway/vpn/privateinternetaccess/olligobber) has
    quit: Ping timeout: 245 seconds
*** freeman42x[m]2 (~freeman42@193.189.67.82) has joined channel #haskell
                                                                        [14:58]
*** freeman42x[m] (~freeman42@80.233.35.64) has quit: Read error: Connection
    reset by peer
*** gxt (~gxt@gateway/tor-sasl/gxt) has quit: Ping timeout: 260 seconds
                                                                        [15:01]
*** tromp (~tromp@2a02:a210:1585:3200:6804:a0ad:732:165a) has quit: Ping
    timeout: 252 seconds                                                [15:02]
*** tromp (~tromp@2a02:a210:1585:3200:6804:a0ad:732:165a) has joined channel
    #haskell                                                            [15:03]
*** andyo (~andyo@63.228.117.97) has joined channel #haskell            [15:06]
<dmitri> @list
<lambdabot> What module?  Try @listmodules for some ideas.
<dmitri> @listmodules                                                   [15:07]
<lambdabot> activity base bf check compose dice dict djinn dummy elite eval
            filter free fresh haddock help hoogle instances irc karma
            localtime metar more oeis offlineRC pl pointful poll pretty quote
            search
<lambdabot> slap source spell system tell ticker todo topic type undo unlambda
            unmtl version where
<Axman6> dmitri: please do that in pm
<Axman6> use /msg lambdabot @lostmodules
<Axman6> (there can be a lot of output once you start exploring lambdabot's
         functionality :)
<dmitri> Axman6: thanks and sorry, didn't expect it going out
*** fphilipe_ (~phil@2a02:168:f6c3:0:2451:dfca:b776:d2d) has quit: Ping
    timeout: 252 seconds
*** olligobber (olligobber@gateway/vpn/privateinternetaccess/olligobber) has
    joined channel #haskell                                             [15:10]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 245 seconds
*** machinedgod (~machinedg@134.41.46.111) has joined channel #haskell  [15:11]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has joined
    channel #haskell                                                    [15:12]
*** pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit: Ping timeout: 252
    seconds                                                             [15:13]
*** nullifidian_ (~nullifidi@unaffiliated/nullifidian) has quit: Read error:
    Connection reset by peer                                            [15:15]
*** nullifidian__ (~nullifidi@unaffiliated/nullifidian) has joined channel
    #haskell
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has joined channel #haskell
                                                                        [15:17]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Ping timeout: 264 seconds                                           [15:18]
*** ilikeheaps (~sushi@176.120.120.135.telemedia.pl) has joined channel
    #haskell                                                            [15:22]
<EvanR> lambdabot: the lost modules                                     [15:23]
*** sektor (~sektor@95.87.234.241) has joined channel #haskell          [15:24]
*** ralejs (~ralejs@148.252.129.228) has joined channel #haskell
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
                                                                        [15:29]
*** fphilipe_ (~phil@46-127-142-222.dynamic.hispeed.ch) has joined channel
    #haskell                                                            [15:30]
*** mariatsji (~mariatsji@vpn-managed.schibsted.no) has joined channel
    #haskell                                                            [15:31]
*** comerijn (~merijn@145.100.116.8) has joined channel #haskell
*** cur8or_ (~cur8or@72canterbury.cybersmart.co.za) has joined channel
    #haskell                                                            [15:32]
*** doublex (~doublex@c-73-117-89-215.hsd1.oh.comcast.net) has joined channel
    #haskell
*** electricityZZZZ (~cpu@108-216-157-17.lightspeed.sntcca.sbcglobal.net) has
    quit: Ping timeout: 245 seconds
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has quit: Ping timeout: 272
    seconds
*** Lears (~leary@122-57-138-132-adsl.sparkbb.co.nz) has joined channel
    #haskell                                                            [15:33]
*** shiradz (~shiradz@197.255.156.29) has joined channel #haskell       [15:34]
*** tromp (~tromp@2a02:a210:1585:3200:6804:a0ad:732:165a) has quit: Remote
    host closed the connection
*** electricityZZZZ (~cpu@108-216-157-17.lightspeed.sntcca.sbcglobal.net) has
    joined channel #haskell
*** chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499) has quit: Quit:
    Leaving                                                             [15:35]
*** ralejs (~ralejs@148.252.129.228) has quit: Quit: My MacBook has gone to
    sleep. ZZZzzz…                                                     [15:37]
<jusss> can we get bind through >=> and return?                         [15:42]
<dminuoso> Is there some sort of dual of Applicative that gives me ⌜(<+>) ::
           ... => m a -> m b -> m (Either a b)⌝ as a sort of exclusive choice
           where only one succeed may and must succeed?                 [15:43]
<dminuoso> jusss: Yes.
<dminuoso> jusss: I invite you to try and figure it out yourself.
<jusss> dminuoso: it's not beyound my knowlege now?                     [15:44]
<[exa]> dminuoso: does the alternative-style choice count? (fmap Left a <|>
        fmap Right b)
<[exa]> oh noes that doesn't work                                       [15:45]
<dminuoso> [exa]: Nope.
*** gxt (~gxt@gateway/tor-sasl/gxt) has joined channel #haskell
<jle`> jusss: you can probably actually just do it using type tetris :)
<jle`> playing around until the types match
<dminuoso> jusss: Im convinced you have the necessary tools. It might take a
           while, but try to solve it on your own without hint or help. :)_
                                                                        [15:46]
<jusss> dminuoso: jle` ok
<jle`> dminuoso: selectable functors maybe?
*** DavidEichmann (~david@213.31.79.26) has joined channel #haskell
<jle`> not sure if that is what you are looking for
<jle`> but the type signature looks familiar
<dminuoso> jle`: I was just sitting here with two parsers for
           optparse-applicative, and was wondering whether there was a sort of
           "must supply either, but not both" combinator.               [15:47]
*** kuttifunk (~Thunderbi@ppp-188-174-13-155.dynamic.mnet-online.de) has quit:
    Quit: kuttifunk
<dminuoso> I pondered about it and tried to generalize the idea.
<jusss> wait a sec, how I can get the type define of a function in GHCi?
<jusss> :i ?
<[exa]> :t
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 245 seconds
<dminuoso> jle`: What I found interesting was that it reminded me of the
           definition of Monoidal.                                      [15:48]
<jle`> that sounds like something you can define for parser combinators using
       only applicative/alternative though
<dminuoso> jle`: Well yeah, I can handcraft this - thats not the point. :)
*** tromp (~tromp@2a02:a210:1585:3200:6804:a0ad:732:165a) has joined channel
    #haskell                                                            [15:49]
<dminuoso> jle`: In my mind I thought about ⌜(><) :: Monoidal f => f a -> f b
           -> f (a, b)⌝ and realized hey, what if there was something similar
           but with Coproduct rather than Product in the result.
*** plutoniix (~q@175.176.222.7) has quit: Quit: Leaving                [15:50]
<[exa]> :t \a b -> (a *> fmap Left a) <|> (b *> fmap Right b)           [15:51]
<lambdabot> Alternative f => f a -> f b -> f (Either a b)
<dminuoso> [exa]: If we use Alternative, there has to be some newtype wrapper
           at the very least.                                           [15:52]
<dminuoso> [exa]: Reason is, if the left side succeeds the right might not be
           tried depending on the instance.
<dminuoso> So it'd have left bias
<[exa]> oh so, I get it now
*** ralejs (~ralejs@185.69.144.234) has joined channel #haskell         [15:55]
*** cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has quit: Ping
    timeout: 258 seconds
*** cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has joined channel
    #haskell                                                            [15:58]
<dminuoso> jle`: Yeah, selective functors seem to capture it.
<dminuoso> jle`: It seems like ⌜<+>⌝ would be to ⌜select⌝ as ⌜><⌝ is to ⌜<*>⌝
                                                                        [15:59]
<dminuoso> At first glance
*** reactormonk (~tass@ip5f5bf76f.dynamic.kabel-deutschland.de) has quit: Ping
    timeout: 246 seconds
*** linarcx (~linarcx@151.241.55.125) has quit: Read error: Connection reset
    by peer
*** linarcx (~linarcx@151.241.55.125) has joined channel #haskell       [16:00]
*** Azel_ (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) has joined
    channel #haskell                                                    [16:02]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 244
    seconds                                                             [16:03]
*** machinedgod (~machinedg@134.41.46.111) has quit: Ping timeout: 244 seconds
*** _tnull (~tnull@gateway/tor-sasl/tnull/x-89080035) has joined channel
    #haskell                                                            [16:04]
<dmitri> Having problem with `stack install` that is trying to install
         ghc-8.6.4, while I already have 8.6.5  installed, is there any way to
         make `stack` use it instead?                                   [16:06]
*** ralejs (~ralejs@185.69.144.234) has quit: Read error: Connection reset by
    peer
*** Azel (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) has quit: Ping
    timeout: 272 seconds
*** Azel_ (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) is now known as
    Azel
*** justsomeguy (~justsomeg@unaffiliated/--/x-3805311) has quit:        [16:08]
*** danielemarsella[ (danielemar@gateway/shell/matrix.org/x-tpwystpuwtshzdkm)
    has joined channel #haskell
<comerijn> dmitri: Probably, but that's pretty much against stack's
           workflow. The entire idea is to have a fixed snapshot (including
           GHC version) and build with that, and then upgrading your snapshot
           when you want to move to newer versions
*** Mrbuck (~Mrbuck@ec2-34-202-96-244.compute-1.amazonaws.com) has joined
    channel #haskell                                                    [16:09]
*** involans (~involans@cpc108959-cmbg20-2-0-cust162.5-4.cable.virginm.net)
    has joined channel #haskell
*** comerijn (~merijn@145.100.116.8) is now known as merijn
*** _dga (~dga@81.2.168.250) has quit: Ping timeout: 245 seconds
*** plutoniix (~q@175.176.222.7) has joined channel #haskell
*** _dga (~dga@81.2.168.250) has joined channel #haskell                [16:10]
<dmitri> comerijn: so I am expected to install the older version? 215MB?
*** Azel (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) has quit: Ping
    timeout: 248 seconds                                                [16:11]
<dminuoso> dmitri: No, stack will do it for you.
<dmitri> that is exactly the problem :(
<dminuoso> dmitri: What is?                                             [16:12]
<dmitri> it is another 215MB
<dmitri> for the older version that is only patch away
<merijn> dmitri: If you want a single system wide GHC, you probably don't want
         stack...
<dminuoso> dmitri: If you want something more minimalistic, stack might not be
           for.
<dminuoso> *be for you
<dminuoso> dmitri: You could just use raw ⌜cabal v2-*⌝ and manage your GHC
           with ghcup.                                                  [16:13]
<dmitri> ok, I don't really need it, all I want is to install this better
         REPL: https://github.com/litxio/ptghci
<dminuoso> dmitri: You can build that with cabal too
<dmitri> which requires me to run `stack install`                       [16:14]
<dminuoso> dmitri: No, you can just run "cabal v2-build" :)
*** kritzefitz (~kritzefit@2003:5b:203b:100:6e0b:84ff:feb4:9eaf) has joined
    channel #haskell
<dmitri> getting: `cabal: unrecognised command: v2-build (try --help)
<dmitri> `
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell
<davean> your cabal must be really old
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell
<dmitri> likely :(
*** ktonga (~quassel@gen-119-17-171-125.ptr4.otw.net.au) has quit: Ping
    timeout: 245 seconds                                                [16:15]
<davean> as they said above, ghcup would solve getting both ghc and cabal
<dminuoso> dmitri: You can just grab a new one, its just a single binary?
<dminuoso> dmitri: If your cabal is so old that it doesnt recognize v2-*, you
           really should get a newer version. :)
*** kritzefitz (~kritzefit@2003:5b:203b:100:6e0b:84ff:feb4:9eaf) has quit:
    Client Quit
<davean> Get a modern GHC, get a modern cabal, ditch stack
<dmitri> what is the easiest way to get the new cabal?                  [16:16]
<dminuoso> dmitri: ghcup
<dminuoso> dmitri: Let it manage your GHC and cabal for you.
*** cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has quit: Ping
    timeout: 258 seconds
<dminuoso> dmitri: https://github.com/haskell/ghcup#usage
<merijn> Or just "cabal install cabal-install" :p                       [16:17]
*** thc202 (~thc202@unaffiliated/thc202) has joined channel #haskell
<dminuoso> merijn: wow what does that even do 
<dmitri> dminuoso: thank you, trying now
<dminuoso> merijn: This would require shadowing the installation path of your
           old cabal with the cabal bin path, wouldnt it?
<merijn> dminuoso: It installs cabal-install?
<merijn> dminuoso: By default cabal is in ~/.cabal/bin and that's where
         cabal-installs binaries so it'd just overwrite                 [16:18]
<merijn> dminuoso: Like...this has worked for over a decade
<dminuoso> merijn: I find that.. amusing. :)
<dminuoso> Okay I see
<merijn> dminuoso: v2-install doesn't overwrite unless prompted, so you need a
         flag to install, but v1-install on old versions will just work
<dminuoso> merijn: I see. I dont use v1 much anymore.                   [16:19]
<maerwald> dminuoso: github is btw now a mirror
<merijn> Neither do I, but v2-install will just prompt you "hey you need this
         flag"
*** Azel (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) has joined
    channel #haskell
<dminuoso> maerwald: I instinctively avoided the gitlab repo since I wanted
           the website to work when they clicked on it.                 [16:20]
<maerwald> hehe
<dminuoso> merijn: can you even use v2-install outside a project?>
<maerwald> yes
<merijn> dminuoso: eh...yes? That's the default
<dminuoso> Uh. Where do things get installed to?
<merijn> dminuoso: What does "inside a project" even mean for isntallation
                                                                        [16:21]
<dminuoso> Or is there some sort of global profile?
<dminuoso> merijn: Mmm, I guess so.
*** Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit: Ping
    timeout: 245 seconds
<merijn> dminuoso: Why would you need a project file? There's only a global
         store anyway
<dminuoso> merijn: I wasnt aware you could manage a global profile
*** boxscape (5387d646@gateway/web/cgi-irc/kiwiirc.com/ip.83.135.214.70) has
    joined channel #haskell
<dminuoso> I thought you only had project specific profiles
*** Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined
    channel #haskell                                                    [16:22]
<merijn> dminuoso: What do you mean by "profile"?
<dminuoso> merijn: Im not sure what cabal calls it. So in nix you have the
           concept of a profile which is basically an environment in which you
           can see packages that are currently "activated" so to speak.
                                                                        [16:23]
<merijn> dminuoso: libraries just get installed in the store (which is not
         very useful by itself) and executables get symlink into
         --symlink-bindir (which defaults to ~/.cabal/bin) and warns if there
         is already a symlink
<dminuoso> (Which consists mainly of symlinks from the global nix store inside
           some profile ⌜~/.nix-profile⌝
*** is_null (~jpic@pdpc/supporter/professional/is-null) has joined channel
    #haskell                                                            [16:24]
<merijn> There are also global profiles you can activate, but I forget how
         they work, tbh. Ask hvr :p
<dmitri> dminuoso: And even more problems with cabal :(
         https://gist.github.com/dmitriz/9a88a725c21225c868064f827044e140
                                                                        [16:25]
*** yitz (~yitz@unaffiliated/yitz) has quit: Ping timeout: 245 seconds
<dminuoso> dmitri: You need to run ⌜cabal v2-update⌝ once, probably :)
*** cpup (~cpup@24-151-32-148.dhcp.nwtn.ct.charter.com) has joined channel
    #haskell                                                            [16:26]
<dmitri> I did and it is again trying to download: Downloading the latest
         package list from hackage.haskell.org
<merijn> dminuoso: The backtrace is saying python3 isn't in his pkgconfig
<dmitri> but the UX is much worse: no information whatsoever
<dmitri> at least stack informed me about the version
<dminuoso> merijn: Its also saying that no package list exists.         [16:27]
<dmitri> and the ETA
<merijn> dminuoso: oh, right
<dmitri> yes, I've also tried `cabal update`, see the gist
<dminuoso> dmitri: You need to run that first, then cabal v2-build      [16:28]
<maerwald> isn't it cabal v2-update?
<merijn> maerwald: iirc either works
*** involans (~involans@cpc108959-cmbg20-2-0-cust162.5-4.cable.virginm.net)
    has quit: Quit: involans                                            [16:29]
<dminuoso> dmitri: Essentially "cabal [v2-]update" is akin to say "apt-get
           update" which grabs a new package list, such that cabal knows whats
           available in what version and so on.
<dmitri> dminuoso: still the same problem: how to get my latest version
         recognised?
<dmitri> I just need to build that package
<dminuoso> dmitri: Ahh I see.
<dmitri> btw, I had even tried to install that other one                [16:30]
<dmitri> but it is 215MB and got dropped in the middle :(
<dminuoso> dmitri: Can you share the full output you are getting?
<dmitri> https://gist.github.com/dmitriz/9a88a725c21225c868064f827044e140
                                                                        [16:31]
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection
<dminuoso> dmitri: Did you run "cabal v2-build" *after* update?
*** jchia (~jchia@58.32.33.75) has quit: Ping timeout: 246 seconds      [16:32]
*** jakobhillerstrom (~jakobhill@h-74-117.A137.corp.bahnhof.se) has joined
    channel #haskell
<dmitri> yes, after, before there were more errors
<dminuoso> dmitri: Can you try "cabal v2-update" rather than "cabal update",
           and then try another "cabal v2-build" ?
<dminuoso> dmitri: It's working for me, so it really should work for you too.
                                                                        [16:33]
*** reactormonk (~tass@185.85.220.200) has joined channel #haskell
<dmitri> It is "working" for me too, in the sense that it proceeds to download
         that unspecified version :(                                    [16:34]
*** Azel (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) has quit: Ping
    timeout: 272 seconds
<dminuoso> dmitri: "download that unspecified version" ?
<dmitri> Downloading the latest package list from hackage.haskell.org
<dminuoso> dmitri: That updates cabal such that cabal knows about the current
           package list on hackage, our package repository.             [16:35]
<dmitri> at least stack gave some details
<dminuoso> dmitri: Without that, cabal doesnt know what packages/versions
           exist, how to get them, etc.
*** tsaka_ (~torstein@p200300F2EBC2FD001387C473872CC3E9.dip0.t-ipconnect.de)
    has quit: Ping timeout: 250 seconds
<dmitri> cabal cannot find my ghc?                                      [16:36]
<dmitri> why?
<maerwald> it can't?
<dminuoso> dmitri: What operating system are you on?
<dmitri> OSX 10.8.5                                                     [16:37]
<dmitri> You mean it needs "latest package list from hackage.haskell.org"?
*** involans (~involans@cpc108959-cmbg20-2-0-cust162.5-4.cable.virginm.net)
    has joined channel #haskell
<dminuoso> dmitri: Do you have some ghc installed right now?            [16:38]
<dmitri> yes
<dmitri> the latest :)
<maerwald> how                                                          [16:39]
<dmitri> with ghcup
<maerwald> did you follow the post-install instructions?
<dmitri> yes, everything worked fine
<maerwald> ghc --version
<maerwald> so you are sourcing the env file in your .bashrc?            [16:40]
<dmitri> The Glorious Glasgow Haskell Compilation System, version 8.6.5
<maerwald> then cabal should be able to find your ghc
<dmitri> I am on zsh, but the path seems working
<dmitri> possibly my version is not identified as "the latest"          [16:43]
<dmitri> and `cabal v2-update` runs `Downloading the latest package list from
         hackage.haskell.org` in what seems to run for indefinite time :(
                                                                        [16:44]
<dmitri> frustrating :(
<dminuoso> 10:36:08       dmitri | cabal cannot find my ghc?            [16:45]
<dminuoso> dmitri: cabal just requires that the ghc binary be on the PATH in
           its environment.
*** justanotheruser (justanothe@gateway/vpn/nordvpn/justanotheruser) has quit:
    Ping timeout: 268 seconds
<dmitri> yes, it is in `~/.ghcup/bin/ghc`                               [16:46]
<dmitri> and it is in my path
<dminuoso> dmitri: Why did you ask that question, mind me?
*** p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has quit: Ping
    timeout: 250 seconds                                                [16:47]
<dminuoso> dmitri: Is it still trying to download the latest package list, by
           the way?
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 246 seconds
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell
<dminuoso> I think the current package list is about 80MiB in size.     [16:48]
<dmitri> dminuoso: yes, that download is still ongoing, which question?
*** p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has joined
    channel #haskell
<dmitri> oh no :(
<dmitri> why does it need all 80MB on my drive?
<dmitri> no wait, it stopped                                            [16:49]
<dminuoso> dmitri: It's the full package list for all packages on hackage.
                                                                        [16:50]
<dminuoso> dmitri: cabal needs it to function.
<dminuoso> dmitri: Without that package list, cabal couldnt create build
           plans, and so on
<dminuoso> (Well its not strictly true, but its true enough for most people)
<dmitri> so that is done, and the warning is gone, but now I am getting the
         same errors :(
<dminuoso> dmitri: Can you run "cabal v2-build -v3" and gist the output?
                                                                        [16:51]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell
<merijn> $10 says *still* no python3 in pkgconfig, because that was in the
         first error and no amount of updating package lists is going to fix
         that
*** ralejs (~ralejs@2620:10d:c092:200::1:ac63) has joined channel #haskell
*** Major_Biscuit (~Major_Bis@93-142-28.internethome.cytanet.com.cy) has
    joined channel #haskell                                             [16:52]
<dminuoso> Oh heh.
<dminuoso> True.
<dmitri> that prints a 64K file of logs
*** Major_Biscuit (~Major_Bis@93-142-28.internethome.cytanet.com.cy) has quit:
    Client Quit
*** Major_Biscuit (~Major_Bis@93-142-28.internethome.cytanet.com.cy) has
    joined channel #haskell
<dminuoso> dmitri: Im sorry, the last few bits I led you onto the wrong trail,
           that was my wrongdoing. merijn is absolutely right.
<dmitri> maybe this error: `[__0] rejecting: ptghci-0.1.0.0 (conflict:
         pkg-config package python3-any, not                            [16:53]
<dmitri> found in the pkg-config database)
<dminuoso> dmitri: But for what its worth, updating cabal you had to do
           anyway. :)
<dmitri> *still* no python3 in pkgconfig?                               [16:54]
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection
*** dm9 (~weechat@p200300DCB71732004A5D60FFFE655171.dip0.t-ipconnect.de) has
    joined channel #haskell                                             [16:55]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 272 seconds                                           [16:56]
<dmitri> merijn: any way I can add my python3 there? so frustrating it is not
         recognised                                                     [16:57]
*** chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499) has joined channel
    #haskell
*** involans (~involans@cpc108959-cmbg20-2-0-cust162.5-4.cable.virginm.net)
    has quit: Quit: involans
<merijn> Do you have pkg-config installed at all (it's not by default on
         macOS) and the next question would be: do you have python3 installed,
         because that's also not on macOS by default                    [16:58]
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell                                                    [16:59]
*** pleia21 (~pleia2@89.249.74.218) has quit:                           [17:00]
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell
*** keep_learning_M (~keep_lear@150.203.68.113) has joined channel #haskell
*** nullifidian__ (~nullifidi@unaffiliated/nullifidian) is now known as
    nullifidian
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection                                          [17:02]
*** sQVe (~sQVe@unaffiliated/sqve) has joined channel #haskell
*** Azel (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) has joined
    channel #haskell
*** mathepauker (~mathepauk@185.204.1.185) has joined channel #haskell  [17:03]
*** asheshambasta
    (~user@ptr-e1lysaxtoafxrhyztxz.18120a2.ip6.access.telenet.be) has joined
    channel #haskell                                                    [17:04]
*** dansho (~dansho4@71-84-161-204.dhcp.astr.or.charter.com) has quit: Ping
    timeout: 268 seconds
*** yitz (~yitz@unaffiliated/yitz) has joined channel #haskell
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell                                                            [17:05]
<dmitri> merijn: yes, both installed manually with macports
*** justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined
    channel #haskell                                                    [17:06]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 258 seconds
<dmitri> pkg-config --version
<dmitri> 0.29.2
<dmitri> please see here:
         https://gist.github.com/dmitriz/9a88a725c21225c868064f827044e140#gistcomment-2999178
                                                                        [17:07]
*** jchia (~jchia@58.32.33.75) has joined channel #haskell              [17:12]
*** Mrbuck (~Mrbuck@ec2-34-202-96-244.compute-1.amazonaws.com) has quit: Quit:
    .                                                                   [17:13]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell                                                    [17:14]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has joined
    channel #haskell                                                    [17:15]
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection                                          [17:16]
*** involans (~involans@cpc108959-cmbg20-2-0-cust162.5-4.cable.virginm.net)
    has joined channel #haskell
<jusss> I don't know how to do it...                                    [17:18]
<jusss> get bind through >=> and return
<pong> :t (>=>)                                                         [17:19]
<lambdabot> Monad m => (a -> m b) -> (b -> m c) -> a -> m c
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 272 seconds
<jusss> :t return
<lambdabot> Monad m => a -> m a
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Ping timeout: 264 seconds
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell                                                            [17:20]
<Taneb> :t (>>=)
<lambdabot> Monad m => m a -> (a -> m b) -> m b
<jusss> and?
<Taneb> (it's helpful to be able to see what the shape of the answer should
        be, to me)                                                      [17:21]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell                                                    [17:22]
*** cur8or_ (~cur8or@72canterbury.cybersmart.co.za) has quit: Quit: My MacBook
    has gone to sleep. ZZZzzz…
*** eyenx (~eyenx@unaffiliated/eye/x-1653358) has quit: Ping timeout: 245
    seconds
<merijn> :t \x f -> (const x >=> f) ()                                  [17:23]
<lambdabot> Monad m => m b -> (b -> m c) -> m c
<merijn> Actually                                                       [17:24]
<merijn> :t \x f -> (id >=> f) x
<lambdabot> Monad m => m b -> (b -> m c) -> m c
<jusss> merijn: how we can get that throught the type inference?        [17:25]
<merijn> jusss: What do you mean by that?                               [17:26]
<boxscape> can you get return from (>=>)? I think no?
*** plutoniix (~q@175.176.222.7) has quit: Quit: Leaving                [17:27]
<merijn> boxscape: No
<boxscape> okay
<jusss> merijn: how we get >>='s type throught >=> and return
<merijn> jusss: You don't                                               [17:28]
*** ubert (~ub@ip5b40e0e2.dynamic.kabel-deutschland.de) has joined channel
    #haskell
<merijn> You need something else, you can create >>= from just >=> and return
<jusss> x >>= f = (id >=> f) x  ?                                       [17:29]
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection                                          [17:30]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 272 seconds
<merijn> jusss: For example
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell                                                            [17:32]
*** _tnull (~tnull@gateway/tor-sasl/tnull/x-89080035) has quit: Quit: _tnull
<jusss> "<merijn> :t \x f -> (id >=> f) x  <lambdabot> Monad m => m b -> (b ->
        m c) -> m c"
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 245
    seconds
<jusss> "<Taneb> :t (>>=) <lambdabot> Monad m => m a -> (a -> m b) -> m b"
                                                                        [17:33]
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
* hackage log4hs 0.0.5.0 - A python logging style log library
  https://hackage.haskell.org/package/log4hs-0.0.5.0 (gqk007)           [17:34]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
<jusss> g >>= f = g (f x) x;    
<jusss> g >>= f = f (g x) x
<merijn> That's not the right type
<merijn> :t \g f -> f (g x) x                                           [17:35]
<lambdabot> (Expr -> t1) -> (t1 -> Expr -> t2) -> t2
<merijn> Wait, x isn't even a variable there
<jusss> g >>= f = (id >=> f) g
*** _tnull (~tnull@gateway/tor-sasl/tnull/x-89080035) has joined channel
    #haskell                                                            [17:36]
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell   [17:37]
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    joined channel #haskell
<jusss> wait, id can pass to >=> ?  <lambdabot> Monad m => (a -> m b) -> (b ->
        m c) -> a -> m c                                                [17:38]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has joined channel #haskell
<jusss> :t id                                                           [17:39]
<lambdabot> a -> a
<jusss> id is a->a not a-> m b
*** tristah (~tristah@193.126.180.139) has joined channel #haskell
<boxscape> :t id :: (a -> m b) -> (a -> m b)
<lambdabot> forall k a (m :: k -> *) (b :: k). (a -> m b) -> a -> m b
<boxscape> oh that type ended up looking a bit more messy than I expected
*** plutoniix (~q@175.176.222.7) has joined channel #haskell            [17:40]
<boxscape> (also I think it's not actually the type id has in this case)
<merijn> jusss: "id :: a -> a" so if I apply id to a value with type "m b"
         it's type becomes?
<jusss> m b?                                                            [17:41]
<merijn> boxscape: That's also the wrong type in that code :p
<boxscape> yeah as I said :P
<merijn> :t id `asAppliedTo` (undefined :: IO Int)
<lambdabot> IO Int -> IO Int
<dramforever> > x + y
<boxscape> oh I didn't know about that function
<jusss> f >=> g = g(f y x) y  if we put id to f or g, but id will take two
        parameters
<lambdabot>  x + y
<merijn> :t id >=> return
<lambdabot> Monad m => m c -> m c
<merijn> :t id >=> (undefined :: Int -> IO Bool)                        [17:42]
<lambdabot> IO Int -> IO Bool
<jusss> :t id >=> id
<lambdabot> Monad m => m (m c) -> m c
<merijn> That's the same as join, aka
<merijn> :t (>>= id)
<lambdabot> Monad m => m (m b) -> m b                                   [17:43]
<merijn> jusss: Type variables are just place holders
<merijn> :t id
<lambdabot> a -> a
<merijn> :t (>=>)
<lambdabot> Monad m => (a -> m b) -> (b -> m c) -> a -> m c
<merijn> Let's say "id :: x -> x" for simplicity                        [17:44]
* hackage elliptic-curve 0.2.2 - Elliptic curve library
  https://hackage.haskell.org/package/elliptic-curve-0.2.2 (sdiehl)
<jusss> I don't understand, f >=> g that f and g suppose to be binary
        functions, not unary
*** lemmih (~lemmih@202.133.195.149) has joined channel #haskell
<merijn> jusss: Why are f and g supposed to be binary?
<jusss> but id is an unary funciton,
<jusss> merijn: f >=> g = g(f y x) y
<merijn> jusss: 1) all function in haskell are unary, 2) even if we pretend
         there are "binary functions" then the arguments of >=> still wouldn't
         b binary functions
<merijn> jusss: I don't know where you got that code from               [17:45]
<jusss> merijn: and that's wrong?
<merijn> jusss: It doesn't parse, because 'x' is not in scope
<tdammers> :t (>=>)
<lambdabot> Monad m => (a -> m b) -> (b -> m c) -> a -> m c
<tdammers> first and second arguments are both unary
<jusss> merijn: so what's the function defination of >=> ?              [17:46]
<tdammers> @source (>=>)
<lambdabot> Unknown command, try @list
<tdammers> @src (>=>)
<lambdabot> Source not found. I feel much better now.
<tdammers> brrr
<jusss> one shape which is properly for its type signature
<boxscape> :t \x -> f x >>= g
<lambdabot> (Monad m, Show a, Show t, FromExpr (m b), FromExpr (m a)) => t ->
            m b
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection
<simon> isn't there another name for (.) . (.)?                         [17:47]
<boxscape> oops forgot to include the arguments
<merijn> boxscape: f and g are not in scope
<boxscape> f >=> g   = \x -> f x >>= g
<tdammers>
           https://hackage.haskell.org/package/base-4.12.0.0/docs/src/Control.Monad.html#%3E%3D%3E
           <- if you want to know, but for the learning experience, you might
           want to implement >=> yourself, in terms of the Monad methods
<merijn> simon: "Semantic Editor Combinators"?
<simon> merijn, sorry, I meant, was there a library that gives this its own
        identifier?
<simon> merijn, and thanks for that word :)
<jusss> merijn: what's the one function definition of >=> ?             [17:48]
<simon> merijn, I recall that maybe it was (.:)                         [17:49]
*** vicfred (~vicfred@189.216.85.255) has quit: Quit: Leaving
<merijn> simon: Some people use .: but honestly, you shouldn't
<merijn> jusss: boxscape already gave it
<merijn> (or one of the possible ones)
*** catsup (d@ps38852.dreamhostps.com) has quit: Remote host closed the
    connection
<jusss> add:: Int -> Int      add x = x + x  or add x = x + 1 both are add ::
        Int -> Int                                                      [17:50]
*** catsup (~d@ps38852.dreamhostps.com) has joined channel #haskell
*** catsup (~d@ps38852.dreamhostps.com) has quit: Remote host closed the
    connection
<jusss> merijn: you mean "<boxscape> f >=> g   = \x -> f x >>= g" ? 
<boxscape> simon this looks like a library
           https://hackage.haskell.org/package/composition-1.0.2.1/docs/Data-Composition.html
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
*** catsup (d@ps38852.dreamhostps.com) has joined channel #haskell      [17:51]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
<jusss> then where I got this shape f >=> g = g(f y x) y ???
<MarcelineVQ> simon: also https://hackage.haskell.org/package/data-aviary
<MarcelineVQ> simon: note its readme though                             [17:52]
<boxscape>  > Removed the "useful" combinators (to emphasize that Data.Aviary
           is not a utility library).
<boxscape> lol, ok
<boxscape> jusss I would imagine that you know better than any of us where you
           got that from                                                [17:53]
<jusss> boxscape: from internet                                         [17:54]
<boxscape> alright
<jusss> boxscape: and it's wrong?                                       [17:55]
<boxscape> yes
*** kuribas (~user@ptr-25vy0i7b7itcueb4awh.18120a2.ip6.access.telenet.be) has
    joined channel #haskell
<jusss> holy 
<boxscape> I mean it's not even wrong, it doesn't mean anything, because x and
           y aren't defined
<dminuoso> jusss: I told you to not look for hints or solutions. ;)     [17:56]
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell
<jusss> dminuoso: I don't know how to do type inference through two function's
        type to get another
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell                                                    [17:57]
<jusss> if we don't have function definition in the value level, only have
        type signature in the type level, can we get another's type signature
        through those two known type signatures?
<dminuoso> jusss: Do you have a simple example?                         [17:58]
*** oleks (~oleks@188.166.34.97) has quit: Remote host closed the connection
                                                                        [17:59]
<jusss> dminuoso: we have known >=> and return's type signatures, can we get
        >>='s signature throught operating >=> and return's type signatures?
                                                                        [18:00]
<jusss> >=>  return and >>= are values                                  [18:01]
<dminuoso> jusss: Widen your horzion, you are free to use any function at your
           disposal.
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
<dminuoso> jusss: Dont limit yourself to using only ⌜>=>⌝ and ⌜return⌝  [18:02]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
*** seanparsons (~sean@cpc89550-gill19-2-0-cust24.20-1.cable.virginm.net) has
    quit: Quit: ZNC 1.7.3 - https://znc.in
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 268 seconds
*** seanparsons (~sean@cpc89550-gill19-2-0-cust24.20-1.cable.virginm.net) has
    joined channel #haskell                                             [18:03]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Remote
    host closed the connection
<dminuoso> jusss: You can also just construct functions out of nothing  [18:04]
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has joined channel
    #haskell
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell
<jusss> dminuoso: totally confused
*** eiGHttt (~eiGHttt@115.231.100.106) has quit: Ping timeout: 245 seconds
<dminuoso> % :t (>=>)
<yahb> dminuoso: Monad m => (a -> m b) -> (b -> m c) -> a -> m c
<jusss> I have no idea about anything now
<dminuoso> % :t (>>=)
<yahb> dminuoso: Monad m => m a -> (a -> m b) -> m b
*** keep_learning_M (~keep_lear@150.203.68.113) has quit: Quit: This computer
    has gone to sleep                                                   [18:07]
<dminuoso> jusss: Start by writing: ⌜f :: Monad m => m a -> (a -> m b) -> m b;
           f a b = undefined⌝ - now implement f.
*** slomo (~slomo@unaffiliated/slomo) has quit: Quit: Leaving
<dminuoso> jusss: And constantly remind yourself of what the type of say "a"
           or "b" is in that.
<dminuoso> Or, to avoid potential confusion, name the parameters perhaps "s"
           and "t"
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection                                                          [18:08]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 245 seconds
<jusss> dminuoso: ok, I will try it
<jusss> it may take several mins                                        [18:09]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has quit: Ping timeout: 245
    seconds
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    quit: Ping timeout: 245 seconds
*** huxing_ (~huxing@2400:8902::f03c:91ff:fe7f:5980) has joined channel
    #haskell
<dminuoso> jusss: Of course you are not allowed to use (>>=), that'd be a
           silly thing to do.
<dminuoso> jusss: That's the rule of the game.
<dminuoso> You are also not allowed to use join.
*** huxing_ (~huxing@2400:8902::f03c:91ff:fe7f:5980) has quit: Remote host
    closed the connection
*** Lycurgus (~niemand@98.4.103.219) has joined channel #haskell
*** cur8or_ (~cur8or@72canterbury.cybersmart.co.za) has joined channel
    #haskell                                                            [18:10]
<jusss> dminuoso: but that m how I can use a value to express it
<jusss> 'cause m has no value
*** chreekat (~Thunderbi@unaffiliated/chreekat) has joined channel #haskell
<dminuoso> jusss: You dont need to be able to express it.
<jusss> ok
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    joined channel #haskell
<dminuoso> jusss: "m" is basically some type you dont have control over, the
           caller of your function picks it.
*** huxing__ (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell                                                    [18:11]
<dminuoso> jusss: Remember how I told you, that you as the consumer of a
           polymorphic function, get to decide what the type variables are
           going to be?
<dramforever> Maybe try writing (>=>) using (>>=) first, then figure out how
              to 'reverse' that?
<dminuoso> Now you are the implementor, the roles have been switched.   [18:12]
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has quit: Ping
    timeout: 244 seconds
*** oish (~charlie@host81-130-206-144.in-addr.btopenworld.com) has joined
    channel #haskell                                                    [18:14]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has joined channel #haskell
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    quit: Ping timeout: 244 seconds                                     [18:16]
*** cur8or_ (~cur8or@72canterbury.cybersmart.co.za) has quit: Ping timeout:
    268 seconds
*** bolichep (~bolichep@2802:8000:2707:5100:f8f1:13e5:d45b:872) has joined
    channel #haskell                                                    [18:17]
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    joined channel #haskell                                             [18:18]
*** antsmartian (~antsmarti@171.60.196.164) has joined channel #haskell
                                                                        [18:19]
*** _tnull (~tnull@gateway/tor-sasl/tnull/x-89080035) has quit: Quit: _tnull
                                                                        [18:22]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell
*** chreekat (~Thunderbi@unaffiliated/chreekat) has quit: Remote host closed
    the connection                                                      [18:23]
*** xff0x (~fox@210.57.57.162) has quit: Quit: xff0x                    [18:24]
*** linarcx (~linarcx@151.241.55.125) has quit: Read error: Connection reset
    by peer
*** linarcx (~linarcx@151.241.55.125) has joined channel #haskell
*** Wuzzy (~Wuzzy@p5790EDDD.dip0.t-ipconnect.de) has joined channel #haskell
                                                                        [18:25]
*** sword865 (uid208942@gateway/web/irccloud.com/x-hgfoowyqlethqrlb) has
    joined channel #haskell                                             [18:28]
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
                                                                        [18:29]
*** Major_Biscuit (~Major_Bis@93-142-28.internethome.cytanet.com.cy) has quit:
    Ping timeout: 268 seconds                                           [18:30]
*** Stanley00 (~Stanley00@unaffiliated/stanley00) has quit: Remote host closed
    the connection
*** linarcx (~linarcx@151.241.55.125) has quit: Read error: Connection reset
    by peer                                                             [18:31]
*** Gurkenglas (~Gurkengla@unaffiliated/gurkenglas) has joined channel
    #haskell
*** linarcx (~linarcx@151.241.55.125) has joined channel #haskell
*** ravenous_
    (~ravenousm@ptr-cud5aqekwsjnpq19k5w.18120a2.ip6.access.telenet.be) has
    joined channel #haskell                                             [18:32]
*** Major_Biscuit (~Major_Bis@93-142-28.internethome.cytanet.com.cy) has
    joined channel #haskell
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 248 seconds                                           [18:35]
*** merijn (~merijn@145.100.116.8) has quit: Ping timeout: 245 seconds
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell                                                    [18:36]
* hackage pairing 0.5.0 - Bilinear pairings
  https://hackage.haskell.org/package/pairing-0.5.0 (sdiehl)            [18:37]
*** dddddd (~dddddd@unaffiliated/dddddd) has joined channel #haskell
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    quit: Ping timeout: 268 seconds                                     [18:39]
*** hexfive (~hexfive@50.35.93.105) has quit: Quit: WeeChat 2.3         [18:40]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 245 seconds
*** Stanley00 (~Stanley00@unaffiliated/stanley00) has joined channel #haskell
*** grupier (be7321b9@190.115.33.185) has joined channel #haskell
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell                                                    [18:42]
*** Major_Biscuit (~Major_Bis@93-142-28.internethome.cytanet.com.cy) has quit:
    Ping timeout: 245 seconds                                           [18:46]
*** libertyprime (~libertypr@101.98.42.91) has joined channel #haskell  [18:50]
*** Anthaas_ (~Anthaas@unaffiliated/anthaas) has quit: Ping timeout: 248
    seconds                                                             [18:52]
*** Anthaas (~Anthaas@unaffiliated/anthaas) has joined channel #haskell
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell
*** t7 (~tommo@2a00:23c5:1284:fc00:99d2:50f4:7192:88f6) has joined channel
    #haskell                                                            [18:53]
*** t7 (~tommo@2a00:23c5:1284:fc00:99d2:50f4:7192:88f6) has quit: Client Quit
*** dm9 (~weechat@p200300DCB71732004A5D60FFFE655171.dip0.t-ipconnect.de) has
    quit: Quit: WeeChat 2.5                                             [18:54]
*** t7 (~tommo@2a00:23c5:1284:fc00:758d:cd21:d0b9:a842) has joined channel
    #haskell
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 248 seconds
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Ping
    timeout: 258 seconds                                                [18:56]
*** pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined channel #haskell
                                                                        [18:57]
*** pavonia (~user@unaffiliated/siracusa) has quit: Quit: Bye!          [18:59]
<jusss> dminuoso: let's assume s :: y a, t :: a -> y b and y :: m so  a = s y;
        y b = t a = t (s y); f s t y = t (s y) y = b ?                  [19:00]
<jusss> something's wrong
*** _tnull (~tnull@gateway/tor-sasl/tnull/x-89080035) has joined channel
    #haskell
*** _tnull (~tnull@gateway/tor-sasl/tnull/x-89080035) has quit: Remote host
    closed the connection
*** _tnull (~tnull@gateway/tor-sasl/tnull/x-89080035) has joined channel
    #haskell                                                            [19:01]
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 248
    seconds                                                             [19:02]
*** m0rphism (~m0rphism@149.172.82.115) has joined channel #haskell     [19:03]
*** merijn (~merijn@145.100.116.8) has joined channel #haskell          [19:06]
*** Azel (~Thunderbi@ppp-115-87-132-29.revip4.asianet.co.th) has quit: Ping
    timeout: 258 seconds                                                [19:07]
*** plutoniix (~q@175.176.222.7) has quit: Quit: Leaving                [19:08]
*** nullifidian_ (~nullifidi@unaffiliated/nullifidian) has joined channel
    #haskell                                                            [19:09]
*** freeman42x[m]2 (~freeman42@193.189.67.82) has quit: Read error: Connection
    reset by peer
*** merijn (~merijn@145.100.116.8) has quit: Client Quit                [19:10]
*** merijn (~merijn@145.100.116.8) has joined channel #haskell
*** antsmartian (~antsmarti@171.60.196.164) has quit: Remote host closed the
    connection
<kuribas> why doesn't NonEmpty have a foldMap using semigroup?          [19:11]
*** nullifidian (~nullifidi@unaffiliated/nullifidian) has quit: Ping timeout:
    245 seconds                                                         [19:12]
<kuribas> and fold?                                                     [19:13]
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    joined channel #haskell                                             [19:14]
<merijn> kuribas: Because those functions are from Foldable
<Taneb> kuribas: there's one in the semigroupoids library
        http://hoogle.jeeves.myrtle/file/nix/store/ga5ya9i6fgb3dnm6h5cl37m9drcf8ax5-semigroupoids-5.2.2-doc/share/doc/semigroupoids-5.2.2/html/Data-Semigroup-Foldable.html#t:Foldable1
<merijn> kuribas: And Foldable constrains them to Monoid
<Taneb> No that's a local link
<Taneb>
        http://hackage.haskell.org/package/semigroupoids-5.3.2/docs/Data-Semigroup-Foldable.html
<Taneb> ereu: 
<Taneb> (sorry, can't type today)
<merijn> kuribas: Also, Semigroup already has sconcat                   [19:15]
<merijn> :t sconcat
<jusss> dminuoso: sorry, I have to go, see you later
<lambdabot> error:
<lambdabot>     • Variable not in scope: sconcat
<lambdabot>     • Perhaps you meant one of these:
*** jusss (~user@unaffiliated/jusss) has quit: Quit: ERC (IRC client for Emacs
    26.1)

[周五 8月 16 2019]
*** You have joined channel #haskell                                    [09:08]
*** Topic for #haskell: https://www.haskell.org |
    https://wiki.haskell.org/IRC_channel | Paste code/errors:
    https://gist.github.com/ | Logs:
    http://tunes.org/~nef/logs/haskell/?C=M;O=D |
    https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic:
    #haskell-offtopic | https://downloads.haskell.org
*** #haskell: topic set by glguy, 2019-01-05 23:21:52
*** Users on #haskell: jusss nineonine heatsink reube max__ merijn logzet_
    eiGHttt rprije ddellacosta ericsagnes rsoeldner marmalodak Kundry_Wag
    nbloomf fosterite Jeanne-Kamikaze travis_ Lowl3v3l _ashbreeze_ csharpsteen
    jsomedon ensyde_ drewbarbs ktonga poljar1 plutoniix jao fphilipe Jesin
    pfurla sagax Neo---- p0lyph3m freeman42x machinedgod ltriant khisanth_
    SCHAPiE ClaudiusMaximus nullifidian_ ziyourenxiang s00pcan seliopou
    leothrix mwelt Saulzar ___laika kleisli doublex boj
*** Users on #haskell: ralejs xkapastel bbear rruizt vicfred gxt cohn
    shutdown_-h_now erikd dopplerg- drewr rembo10 Lord_of_Life abhixec johnw
    polman greymalkin CSP-SOFTWARE aarvar ysangkok jix Tesseraction
    guest278776 cpup yitz whald dansho alicemaz tabaqui replay sim590 lihram
    ilikeheaps Sgeo_ dale darjeeling_ Sheilong zariuq giraffe cjwelborn Bish
    relrod kuttifunk PtxDK solonarv carlomagno xff0x mmfood urodna chin-tastic
    justanotheruser Stanley00 revprez_1nzio pie_ Anthaas
*** Users on #haskell: seanparsons catsup lemmih jchia is_null _dga
    danielemarsella[ Lears olligobber andyo shafox dave_uy phreedom ab9rf
    rainmanjam raek nshepperd day mountaingoat nowhereman robogoat otto_s dTal
    lagothrix theDon pi__ klntsky MonkeyNOS cp revprez_stg kjak tv lassulus
    gienah_ qwertytest ziman alx741 gehmehgeh andreas303 xelxebar jb55
    Unhammer m4lvin notzmv javjarfer[m] NightA Tuplanolla zzz treehaqr Arahael
    acro pyan Natch eof dmwit infandum marek jlamothe
*** Users on #haskell: ravenousmoose gentauro nicoulaj raatiniemi mimi_vx Ckat
    miseenplace[m] xplat cgfbee mniip yahb jedws maralorn smakarov
    texasmynsted MarcelineVQ sdx23 Foritus Guest4074 markus1189 i7c tessier
    Vtec234 PragCypher xarian nil unclechu vimto thaumavorio reggie_ Bergle_1
    valdyn jdt delYsid ozychhi jle` monochrom hiroaki aldum cyphase kori peel
    laem srnty oeblink telser bgamari pierreimmo wraithm tinwood jophish
    bertschneider__ Taneb atk feuerbach_ Cthalupa bvad
*** Users on #haskell: mccoyc kraem c_wraith jameekim yaroot hodlwave forell
    m1dnight_ crtschin copypasteque jwynn6 cheshircat theNeuron saml_ obfusk__
    cheers dibblego underikar ephemera_ tumdedum rosalux RecursiveG pingiun
    rann glowcoil gabiruh megaTherion sm[m] banjiewen saurik bwe ambrosia_
    SegFaultAX intelux matheus mikeplus64 Forkk milli arsdragonfly Hotbees
    amiri Enigmagic bspar sghir_med[m] lexi-lambda haroldwu Guest39039
    nyuszika7h nahra bydo cyjiao__ PoliticsII
*** Users on #haskell: ajmcmiddlin xyggos mankyKitty verlet64 mujx[m4
    potato44[m] d1mur4tdj[m] stepnem cepxuo imposs[m] eyenx[m] mmynsted[m]
    dongcarl tejok[m] sellout- nybble41[m] Lermex nlofaro bradparker georgew
    yrid[m] kumarbis[m] joenase[m] excel_gate[m] Nascha dxtr benwr_ akermu
    hifutakiko[m] nikivi scheming_around miklcct DTZUZU grumble tnks mkoenig
    mpickering net4all laniusfnv[m] Fairy meck cods Digit cynick Nikotiini
    zaquest zmlww[m] rajivr___ Klumben gilbertw1 quarters
*** Users on #haskell: xorpse Bigcheese alanz Pete[m] Guy[m]1 Lite[m]
    foxadee[m] GhostofaConsole[ yi[m] adaizen[m] alibabzo kerru[m]
    jesusvega[m] pqwy[m] hogarth[m] beatricejensen[m afontain[m] gmips[m]
    charliebucket[m] kylos[m] dustyp[m] matrixyz[m] JoGoSi[m] glowpelt
    alex[m]14 wrunt[m] jak[m] MerlinGttlinger[ pineapple[m] Grgoire[m]
    MartinKlimi[m] WeiTang[m] GNULambda[m] alexfmpe[m] bkl[m] jeeg[m]
    MonsieurArcher[m dag[m] apurvapavaskar Majiir ad5twoknebor[m]
    spacekitteh[m]
*** Users on #haskell: atopuzov[m] mobile_x[m] josiah_sama sergiotarxz[m]
    seventh__ buggeas40d[m] haskelllisp[m] glguy michaelpj angerman
    interruptinuse gluegadget TimWolla PyroLagus sarahzrf fiddeldibu[m] beaky
    Adluc zabracks nuxdie a3f Randy stux|RC edwel[m] ryzokuken feepo unsymbol
    morgib dukedave nbouscal duncan Jabbslad joel135 mingc elvishjerricco
    sebhoss sgraf simony AfC billstclair DrDuck ephemeron mjuad Remy^
    fingerzam rslima___ xnyhps heyj datapup_ w1d3m0d3 moldybits
*** Users on #haskell: steshaw[m] mycroftiv dolio nckx jwaksbaum[m] dmiles
    clog Fubar^ Vq opqdonut sqrt2 noexcept hegge APic rzmt sicklorkin Rudd0
    aesi irclogger_com devopsdeluxe cocreature Profpatsch sterni dminuoso bind
    lkurusa ahri vaibhavsagar xalek[m] vikraman tmallard[m] Tom[m]7
    reconmaster[m] ovigren[m] mattia[m] jochens[m] krhubert[m] jumzi[m]
    jwerner[m] jhgarner[m] Kenneth[m] vorbex[m] kgadek[m] wildtrees[m]
    sudorebootsudor4 midi[m] sayukimans[m] sriehl[m] ldesgoui[m]
*** Users on #haskell: luisjira[m] nartir[m] josef[m] vkleen jibby[m]1
    intellection3to3 patonw[m] neat72[m] krowlan3[m] Vincent[m]2 Jonathan[m]2
    corin[m]1 somni[m] rowan[m] M|GNUisnotLinux[ lmolr[m] imp0s5ible
    contrun[m] jonreeve[m] ghastfilms[m] gandi[m] glothit7ok[m] PotatoRick[m]
    eckt[m] deikatsuo[m] dxml[m] pothyurf[m] godva[m] pschooom[m] dice[m]1
    arianvp[m] LasEspuelas asayers[m]1 adziahel[m] lapav[m] cbg[m]
    abc123zzz[m] brandon123[m] cosson[m] corin[m] JoelMcCracken[m]
*** Users on #haskell: fulgjon Ericson2314 sujeet siraben sielicki jonge[m]
    stan[m] macerbi[m] maigel[m] simbergm kadoban GregKNicholson[m
    iceychris[m] lierdakil[m] kaychaks[m] fgaz ClownMaster[m] EuAndreh[m]
    hdurer[m] domenkozar[m] giuseppe[m] gmind[m] aloiscochard[m] humanwire[m]
    M0ddba11[m] whoops dequbed jonatan __Myst__ spion Ewout teardown haasn
    dennisb RusAlex vk3wtf glamas hive-mind Nik05 atraii tomboy64 abra0 winny
    dqd metalrain albel727 Chousuke sis7 ManiacTwister
*** Users on #haskell: perrier-jouet ruffy_ dustinm- laxask verement dazage
    uberj divVerent mceier thonkpod riatre Twey jlpeters troydm higherorder
    jkachmar cheater entel avn Firedancer raoulb kAworu kapilp raoul tdammers
    enragedjam enemeth79 devurandom vin-ivar hiptobecubic theorbtwo sms
    bolverkr zmlww nek0 nesqi xcthulhu xstill ftop devalot mikolaj Ornedan
    maerwald tms_ abrar dixie_ Robin_Jadoul amx phaazon Niamkik clynamen_ kav
    sphalerite Ranhir rom1504 Tourist SquidDev
*** Users on #haskell: cartwright aplainzetakind duairc moocow_ AWizzArd micro
    betawaffle andreabedini shadowdaemon srid rizary_ Konehaltia jokester dpn`
    rodlogic jonrh monad_cat hsiktas scav pent eruditass Shun131 coot alexknvl
    sebastianrkg alunduil NemesisD Neuromancer Folkol bartavelle Clint bbear_
    jfredett hackage DDR UserOO7 tomku daissgr pcoutin niklasb_ ctag tazjin
    spamlessj vqrs jzl Jaxan_ casdr_ carter tsahyt_ sethetter EduardoBautista
    gonz_ caasih bjs alexelcu iravid
*** Users on #haskell: spinda alextes jstolarek ixian rotty fionnan juri_
    Remavas joehillen defanor Putonlalla Geekingfrog obiwahn sukbeom hvr
    Ferdirand Someguy123 Blkt strangeglyph nkaretnikov aramiscd coius__ Paks
    mulk NinjaTrappeur ZoFLo J_Arcane jrslepak milessabin malthe hpc adadelta
    Ring0` Mon_Ouie yorick Entroacceptor _ht jonge Mo0O noko_ bollu mjlee
    scinawa fliife artem bendo arw remexre SrPx liquorice cemerick AndreasK
    d0liver ebutleriv reyu [exa] bandali fryguybo1 e2
*** Users on #haskell: michalisko pingu_ mjrosenb Jacoby6000 wadadli fantasti`
    Adeon violeta lowryder edwtjo rubik urdh sea-gull dyl_ noCheese gspia
    dcoutts gregberns paf31_ edmundnoble leah2 MatrixBot3 chirpsalot Chobbes
    Axman6 ap5 infinity0 dan64 systemfault natim87 earthy wagle phaul hjozwiak
    infinisil sdrodge teej flebron reorder_ Sose nurupo waskell styledash
    trebuh datajerk Deadhand bengt_ alp kaol Seich phlym beka lachenmayer
    otulp ByronJohnson Tene sandman13 Cale
*** Users on #haskell: monokrome nibbling_ saidinwot1 xtsee abuss bsima rj1
    hiredman mtjmullen jdevlieghere brisbin umachan wtw hc statusbot Hijiri
    vzdraz ion pdxleif dilinger dashkal charukiewicz w1gz nivpgir_ theophil893
    polux7 xacktm SolarAquarion mudri petermw droplet totte mupf recj jrm
    xante aveltras petercommand hongminhee int-e lambdabot habbah ft swalladge
    ycheng tomjaguarpaw christopher jackdk Moyst jesyspa tolt nshepperd1
    Madars_ cjh` Unode ekleog TMA Tristan-Speccy
*** Users on #haskell: Jello_Raptor amuck tstat implementation aristid VSpike
    arkeet aib dsal kip srhb Drezil fiQ2 thebnq liff bjobjo stylewarning
    bitonic averell arianvp quaestor Ke spoonm DustyDingo fredcy- Ulrar mxf
    TallerGhostWalt lispy a3Dman cjay- Kiruwa qzo topos stilgart lukelau twk-
    catern no-n jackhill raid lpsmith vjoki pierrot bananagram `slikts myme
    affinespaces mitchellsalad linduxed typedrat mstruebing nitrix dolanbatar
    sbrg sud0 rootnode Cathy Netwolf thjread
*** Users on #haskell: nshepperd2 pong azahi rotaerk kqr chindy Ankhers
    pdgwien madnight dysfigured atomi freeside jol TommyC andromeda-galaxy
    S007 dexterfoo zerokarmaleft PierreM heath lugh jvanbure luite dstolfa
    swater Kamuela jsatk DigitalKiwi comboy nekomune teehemkay Arguggi qz
    statusfailed oats Athas linoge Intensity Dykam dmj` wildsebastian amatecha
    thi newhoggy_ nh2 integral edwardk dumptruckman ibloom roflik tsani asm89
    Franciman sm codedmart agrif marble_visions yumh
*** Users on #haskell: ski e bdw Philonous mikolaj_ winkill thallada _janne
    daGrevis mrus h30 dxld vktec s4msung MindlessDrone zymurgy SlashLife
    Patternmaster Logio cyberlard nyaomi epta tristanC fr33domlover Meanirelli
    ent CindyLinz srk GGMethos canta digia __4matter_ jtcs silverneedle
    Squarism PlasmaStar tehidiot stiell griddle cpape @Sigyn Firedancer_ tA-
    Igloo bcmiller restrictedchoice bitemyapp noan tureba hsyl20 zenzike
    lemald evilmonads AkhILman phadej absence greeny__
*** Users on #haskell: deu krystianbajno shapr __name__ gothos klugez
    gargawel_ aidecoe uwap_ terrorjack__ dgpratt koankeeper Flonk nisstyre
    mrsbear loc kini wayne Annihitek ynyounuo rkrishnan vodkaInferno bs lyxia
    zxrf graingert adius @ChanServ ereu benl23 echoreply Heffalump chivay
    travv0 simon elcaro stefan-__ koz_ sigmundv- Maxdamantus johnstein n3t
    pacak kark Batholith esph wrengr stvc aweinstock bob_twinkles nemesit|znc
    steell_ Zemyla lavalike cross JSharp drdo kipras`away
*** Users on #haskell: zv ullbeking jbetz d6e dh freusque apoc andjjj23 Jon
    rootmos Rembane lstdgtfp joeyh m-renaud sclv Nevoic Ekho dfordivam
    subfacto1 newhoggy kyagrd__ ocharles Guillaum immae nopf kubrat adamse
    mmaruseacph2 cbarrett lightandlight jetpack_joe pasukon nonzen Sparadox
    energizer_ yushyin M2tias johs so suzu _guios exarkun orzo apeyroux_
    diginet bcoppens RoguePointer AJTJ noctux Phyx- haveo runawayfive MasseR
    dredozubov c-rog Tspoon__ michalrus gsingh93 ecx86
*** Users on #haskell: Peter_Storm jmsx abbe flogfr hodapp mrd scal PHO
    connrs_ Jonno_FTW scivola Eliel locallycompact ammar2 blackdog t36s
    gambpang hexagoxel deni connrs- lortabac Reisen exferenceBot lurkless [df]
    Aleksejs coldpress carbolymer exio4 puffnfresh fiddlerwoaroof sivs _flow_
    Deewiant lieven tchakka kosmikus barrucadu rodgzilla koala_man eldritch
    geal luigy EvanR crooked d3lxa adarshaj eagleflo Xandaros wz1000 fiatjaf
    pharaun sssilver Kneiva avp _6a68 anderson
*** Users on #haskell: djanatyn solarus jinblack markhuge idupree DwarfMaster
    davean iron_houzi kloeri joeytwiddle adamCS furnost
*** #haskell URL: http://www.haskell.org/
*** #haskell modes: +CLnt
*** #haskell was created on 2006-11-26 14:42:48
*** nbloomf (~nbloomf@104-183-67-6.lightspeed.fyvlar.sbcglobal.net) has quit:
    Quit: My MacBook has gone to sleep. ZZZzzz…
<jusss> dminuoso: hi                                                    [09:09]
*** max__ (~max@2600:1700:3ab0:4e40:9114:5960:e4a4:6e76) has quit: Ping
    timeout: 264 seconds                                                [09:10]
*** nbloomf (~nbloomf@2600:1700:83e0:1f40:ac4c:9f19:5965:7439) has joined
    channel #haskell
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Ping timeout: 250 seconds
*** reube (~colver@112.160.37.178) has left channel #haskell: #haskell
*** pavonia (~user@unaffiliated/siracusa) has joined channel #haskell   [09:12]
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has joined channel
    #haskell
*** jkachmar (uid226591@gateway/web/irccloud.com/x-matjowyndonurxhy) has quit:
    Quit: Connection closed for inactivity
*** mnrmnaugh (~mnrmnaugh@unaffiliated/mnrmnaugh) has joined channel #haskell
                                                                        [09:13]
*** max00 (~max@23-115-45-16.lightspeed.tpkaks.sbcglobal.net) has joined
    channel #haskell                                                    [09:15]
*** replay (~textual@pdpc/supporter/student/replay) has quit: Quit: Textual
    IRC Client: www.textualapp.com
<freeman42x> anything else I need to do to access a package in cabal new-repl
             besides adding it to build depends?
             https://i.imgur.com/wvYYVyI.png                            [09:16]
*** nbloomf (~nbloomf@2600:1700:83e0:1f40:ac4c:9f19:5965:7439) has quit: Quit:
    My MacBook has gone to sleep. ZZZzzz…
*** wrengr (~wrengr@144.44.83.34.bc.googleusercontent.com) is now known as
    wrengr_away
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has joined
    channel #haskell                                                    [09:17]
* hackage wu-wei 0.1.0.2 - Unimportant Unix adminstration tool
  https://hackage.haskell.org/package/wu-wei-0.1.0.2 (fuzz)             [09:18]
*** rainmanj_ (~rainmanja@2601:1c0:6600:7479:b526:192e:8337:c799) has joined
    channel #haskell                                                    [09:19]
*** nbloomf (~nbloomf@104-183-67-6.lightspeed.fyvlar.sbcglobal.net) has joined
    channel #haskell                                                    [09:20]
*** turab (~turab@2001:18e8:2:28b7:f000::87e) has joined channel #haskell
*** rainmanjam (~rainmanja@97-120-26-121.ptld.qwest.net) has quit: Ping
    timeout: 245 seconds                                                [09:21]
*** machinedgod (~machinedg@134.41.46.111) has quit: Ping timeout: 272 seconds
                                                                        [09:22]
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has quit:
    Ping timeout: 250 seconds
*** dmitri (~dima14@cm-171-100-77-208.revip10.asianet.co.th) has joined
    channel #haskell                                                    [09:24]
<alx741> freeman42x: did you restart `cabal new-repl` after adding that
         dependency in the cabal file?
<freeman42x> alx741, I did
*** sword865 (uid208942@gateway/web/irccloud.com/x-hcxklgiyfvssalcg) has
    joined channel #haskell                                             [09:25]
*** catsup (d@ps38852.dreamhostps.com) has quit: Ping timeout: 272 seconds
<freeman42x> and I can't import Control.Lens.Combinators
<alx741> how about killing the repl, running `cabal new-build` and then
         staring the repl again?                                        [09:28]
*** bolichep (~bolichep@2802:8000:2707:5100:f8f1:13e5:d45b:872) has joined
    channel #haskell                                                    [09:29]
<freeman42x> alx741, the solution was to use: cabal new-repl exe:example
             --flags="build-examples"                                   [09:30]
*** Frobozz (~Frobozz@unaffiliated/frobozz) has joined channel #haskell
                                                                        [09:32]
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
                                                                        [09:33]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 246
    seconds                                                             [09:34]
*** catsup_ (d@ps38852.dreamhostps.com) has joined channel #haskell     [09:35]
*** catsup (d@ps38852.dreamhostps.com) has joined channel #haskell
*** buddicl7 (~dalis@61.245.231.134) has joined channel #haskell
*** xff0x (~fox@softbank060071124198.bbtec.net) has quit: Quit: xff0x   [09:37]
<jusss> base on >>=:: m a -> (a -> m b) -> m b, let's assume f :: m a, g ::
        a-> m b, and x :: m, so we can get >>= f g x == b == g ( f x ) x,   is
        there anything wrong here?
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 246
    seconds                                                             [09:39]

[周五 8月 16 2019]
*** You have joined channel #haskell                                    [09:41]
*** Topic for #haskell: https://www.haskell.org |
    https://wiki.haskell.org/IRC_channel | Paste code/errors:
    https://gist.github.com/ | Logs:
    http://tunes.org/~nef/logs/haskell/?C=M;O=D |
    https://www.reddit.com/r/haskell | Admin: #haskell-ops | Offtopic:
    #haskell-offtopic | https://downloads.haskell.org
*** #haskell: topic set by glguy, 2019-01-05 23:21:52
*** Users on #haskell: jusss Sgeo__ catsup catsup_ Frobozz bolichep sword865
    dmitri turab nbloomf rainmanj_ max00 mnrmnaugh jgt pavonia nineonine
    logzet_ eiGHttt rprije ddellacosta ericsagnes rsoeldner marmalodak
    Kundry_Wag fosterite Jeanne-Kamikaze travis_ Lowl3v3l _ashbreeze_
    csharpsteen jsomedon ensyde_ drewbarbs ktonga poljar1 plutoniix jao
    fphilipe Jesin pfurla sagax Neo---- p0lyph3m freeman42x ltriant khisanth_
    SCHAPiE ClaudiusMaximus nullifidian_ ziyourenxiang s00pcan
*** Users on #haskell: seliopou leothrix mwelt Saulzar ___laika kleisli
    doublex boj ralejs xkapastel bbear rruizt vicfred gxt cohn shutdown_-h_now
    erikd dopplerg- drewr rembo10 Lord_of_Life abhixec johnw polman greymalkin
    CSP-SOFTWARE aarvar ysangkok jix Tesseraction guest278776 cpup yitz whald
    dansho alicemaz tabaqui sim590 lihram ilikeheaps Sgeo_ dale darjeeling_
    Sheilong zariuq giraffe cjwelborn Bish relrod kuttifunk PtxDK solonarv
    carlomagno mmfood urodna chin-tastic
*** Users on #haskell: justanotheruser Stanley00 revprez_1nzio pie_ Anthaas
    seanparsons lemmih jchia is_null _dga danielemarsella[ Lears olligobber
    andyo shafox dave_uy phreedom ab9rf raek nshepperd day mountaingoat
    nowhereman robogoat otto_s dTal lagothrix theDon pi__ klntsky MonkeyNOS cp
    revprez_stg kjak tv lassulus gienah_ qwertytest ziman alx741 gehmehgeh
    andreas303 xelxebar jb55 Unhammer m4lvin notzmv javjarfer[m] NightA
    Tuplanolla zzz treehaqr Arahael acro pyan Natch eof
*** Users on #haskell: dmwit infandum marek jlamothe ravenousmoose gentauro
    nicoulaj raatiniemi mimi_vx Ckat miseenplace[m] xplat cgfbee mniip yahb
    jedws maralorn smakarov texasmynsted MarcelineVQ sdx23 Foritus Guest4074
    markus1189 i7c tessier Vtec234 PragCypher xarian nil unclechu vimto
    thaumavorio reggie_ Bergle_1 valdyn jdt delYsid ozychhi jle` monochrom
    hiroaki aldum cyphase kori peel laem srnty oeblink telser bgamari
    pierreimmo wraithm tinwood jophish bertschneider__ Taneb atk
*** Users on #haskell: feuerbach_ Cthalupa bvad mccoyc kraem c_wraith jameekim
    yaroot hodlwave forell m1dnight_ crtschin copypasteque jwynn6 cheshircat
    theNeuron saml_ obfusk__ cheers dibblego underikar ephemera_ tumdedum
    rosalux RecursiveG pingiun rann glowcoil gabiruh megaTherion sm[m]
    banjiewen saurik bwe ambrosia_ SegFaultAX intelux matheus mikeplus64 Forkk
    milli arsdragonfly Hotbees amiri Enigmagic bspar sghir_med[m] lexi-lambda
    haroldwu Guest39039 nyuszika7h nahra bydo
*** Users on #haskell: cyjiao__ PoliticsII ajmcmiddlin xyggos mankyKitty
    verlet64 mujx[m4 potato44[m] d1mur4tdj[m] stepnem cepxuo imposs[m]
    eyenx[m] mmynsted[m] dongcarl tejok[m] sellout- nybble41[m] Lermex nlofaro
    bradparker georgew yrid[m] kumarbis[m] joenase[m] excel_gate[m] Nascha
    dxtr benwr_ akermu hifutakiko[m] nikivi scheming_around miklcct DTZUZU
    grumble tnks mkoenig mpickering net4all laniusfnv[m] Fairy meck cods Digit
    cynick Nikotiini zaquest zmlww[m] rajivr___ Klumben
*** Users on #haskell: gilbertw1 quarters xorpse Bigcheese alanz Pete[m]
    Guy[m]1 Lite[m] foxadee[m] GhostofaConsole[ yi[m] adaizen[m] alibabzo
    kerru[m] jesusvega[m] pqwy[m] hogarth[m] beatricejensen[m afontain[m]
    gmips[m] charliebucket[m] kylos[m] dustyp[m] matrixyz[m] JoGoSi[m]
    glowpelt alex[m]14 wrunt[m] jak[m] MerlinGttlinger[ pineapple[m]
    Grgoire[m] MartinKlimi[m] WeiTang[m] GNULambda[m] alexfmpe[m] bkl[m]
    jeeg[m] MonsieurArcher[m dag[m] apurvapavaskar Majiir ad5twoknebor[m]
*** Users on #haskell: spacekitteh[m] atopuzov[m] mobile_x[m] josiah_sama
    sergiotarxz[m] seventh__ buggeas40d[m] haskelllisp[m] glguy michaelpj
    angerman interruptinuse gluegadget TimWolla PyroLagus sarahzrf
    fiddeldibu[m] beaky Adluc zabracks nuxdie a3f Randy stux|RC edwel[m]
    ryzokuken feepo unsymbol morgib dukedave nbouscal duncan Jabbslad joel135
    mingc elvishjerricco sebhoss sgraf simony AfC billstclair DrDuck ephemeron
    mjuad Remy^ fingerzam rslima___ xnyhps heyj datapup_ w1d3m0d3
*** Users on #haskell: moldybits steshaw[m] mycroftiv dolio nckx jwaksbaum[m]
    dmiles clog Fubar^ Vq opqdonut sqrt2 noexcept hegge APic rzmt sicklorkin
    Rudd0 aesi irclogger_com devopsdeluxe cocreature Profpatsch sterni
    dminuoso bind lkurusa ahri vaibhavsagar xalek[m] vikraman tmallard[m]
    Tom[m]7 reconmaster[m] ovigren[m] mattia[m] jochens[m] krhubert[m]
    jumzi[m] jwerner[m] jhgarner[m] Kenneth[m] vorbex[m] kgadek[m]
    wildtrees[m] sudorebootsudor4 midi[m] sayukimans[m] sriehl[m]
*** Users on #haskell: ldesgoui[m] luisjira[m] nartir[m] josef[m] vkleen
    jibby[m]1 intellection3to3 patonw[m] neat72[m] krowlan3[m] Vincent[m]2
    Jonathan[m]2 corin[m]1 somni[m] rowan[m] M|GNUisnotLinux[ lmolr[m]
    imp0s5ible contrun[m] jonreeve[m] ghastfilms[m] gandi[m] glothit7ok[m]
    PotatoRick[m] eckt[m] deikatsuo[m] dxml[m] pothyurf[m] godva[m]
    pschooom[m] dice[m]1 arianvp[m] LasEspuelas asayers[m]1 adziahel[m]
    lapav[m] cbg[m] abc123zzz[m] brandon123[m] cosson[m] corin[m]
*** Users on #haskell: JoelMcCracken[m] fulgjon Ericson2314 sujeet siraben
    sielicki jonge[m] stan[m] macerbi[m] maigel[m] simbergm kadoban
    GregKNicholson[m iceychris[m] lierdakil[m] kaychaks[m] fgaz ClownMaster[m]
    EuAndreh[m] hdurer[m] domenkozar[m] giuseppe[m] gmind[m] aloiscochard[m]
    humanwire[m] M0ddba11[m] whoops dequbed jonatan __Myst__ spion Ewout
    teardown haasn dennisb RusAlex vk3wtf glamas hive-mind Nik05 atraii
    tomboy64 abra0 winny dqd metalrain albel727 Chousuke sis7
*** Users on #haskell: ManiacTwister perrier-jouet ruffy_ dustinm- laxask
    verement dazage uberj divVerent mceier thonkpod riatre Twey jlpeters
    troydm higherorder cheater entel avn Firedancer raoulb kAworu kapilp raoul
    tdammers enragedjam enemeth79 devurandom vin-ivar hiptobecubic theorbtwo
    sms bolverkr zmlww nek0 nesqi xcthulhu xstill ftop devalot mikolaj Ornedan
    maerwald tms_ abrar dixie_ Robin_Jadoul amx phaazon Niamkik clynamen_ kav
    sphalerite Ranhir rom1504 Tourist SquidDev
*** Users on #haskell: cartwright aplainzetakind duairc moocow_ AWizzArd micro
    betawaffle andreabedini shadowdaemon srid rizary_ Konehaltia jokester dpn`
    rodlogic jonrh monad_cat hsiktas scav pent eruditass Shun131 coot alexknvl
    sebastianrkg alunduil NemesisD Neuromancer Folkol bartavelle Clint bbear_
    jfredett hackage DDR UserOO7 tomku daissgr pcoutin niklasb_ ctag tazjin
    spamlessj vqrs jzl Jaxan_ casdr_ carter tsahyt_ sethetter EduardoBautista
    gonz_ caasih bjs alexelcu iravid
*** Users on #haskell: spinda alextes jstolarek ixian rotty fionnan juri_
    Remavas joehillen defanor Putonlalla Geekingfrog obiwahn sukbeom hvr
    Ferdirand Someguy123 Blkt strangeglyph nkaretnikov aramiscd coius__ Paks
    mulk NinjaTrappeur ZoFLo J_Arcane jrslepak milessabin malthe hpc adadelta
    Ring0` Mon_Ouie yorick Entroacceptor _ht jonge Mo0O noko_ bollu mjlee
    scinawa fliife artem bendo arw remexre SrPx liquorice cemerick AndreasK
    d0liver ebutleriv reyu [exa] bandali fryguybo1 e2
*** Users on #haskell: michalisko pingu_ mjrosenb Jacoby6000 wadadli fantasti`
    Adeon violeta lowryder edwtjo rubik urdh sea-gull dyl_ noCheese gspia
    dcoutts gregberns paf31_ edmundnoble leah2 MatrixBot3 chirpsalot Chobbes
    Axman6 ap5 infinity0 dan64 systemfault natim87 earthy wagle phaul hjozwiak
    infinisil sdrodge teej flebron reorder_ Sose nurupo waskell styledash
    trebuh datajerk Deadhand bengt_ alp kaol Seich phlym beka lachenmayer
    otulp ByronJohnson Tene sandman13 Cale monokrome
*** Users on #haskell: nibbling_ saidinwot1 xtsee abuss bsima rj1 hiredman
    mtjmullen jdevlieghere brisbin umachan wtw hc statusbot Hijiri vzdraz ion
    pdxleif dilinger dashkal charukiewicz w1gz nivpgir_ theophil893 polux7
    xacktm SolarAquarion mudri petermw droplet totte mupf recj jrm xante
    aveltras petercommand hongminhee int-e lambdabot habbah ft swalladge
    ycheng tomjaguarpaw christopher jackdk Moyst jesyspa tolt nshepperd1
    Madars_ cjh` Unode ekleog TMA Tristan-Speccy Jello_Raptor
*** Users on #haskell: amuck tstat implementation aristid VSpike arkeet aib
    dsal kip srhb Drezil fiQ2 thebnq liff bjobjo stylewarning bitonic averell
    arianvp quaestor Ke spoonm DustyDingo fredcy- Ulrar mxf TallerGhostWalt
    lispy a3Dman cjay- Kiruwa qzo topos stilgart lukelau twk- catern no-n
    jackhill raid lpsmith vjoki pierrot bananagram `slikts myme affinespaces
    mitchellsalad linduxed typedrat mstruebing nitrix dolanbatar sbrg sud0
    rootnode Cathy Netwolf thjread nshepperd2 pong
*** Users on #haskell: azahi rotaerk kqr chindy Ankhers pdgwien madnight
    dysfigured atomi freeside jol TommyC andromeda-galaxy S007 dexterfoo
    zerokarmaleft PierreM heath lugh jvanbure luite dstolfa swater Kamuela
    jsatk DigitalKiwi comboy nekomune teehemkay Arguggi qz statusfailed oats
    Athas linoge Intensity Dykam dmj` wildsebastian amatecha thi newhoggy_ nh2
    integral edwardk dumptruckman ibloom roflik tsani asm89 Franciman sm
    codedmart agrif marble_visions yumh ski e bdw Philonous
*** Users on #haskell: mikolaj_ winkill thallada _janne daGrevis mrus h30 dxld
    vktec s4msung MindlessDrone zymurgy SlashLife Patternmaster Logio
    cyberlard nyaomi epta tristanC fr33domlover Meanirelli ent CindyLinz srk
    GGMethos canta digia __4matter_ jtcs silverneedle Squarism PlasmaStar
    tehidiot stiell griddle cpape @Sigyn Firedancer_ tA- Igloo bcmiller
    restrictedchoice bitemyapp noan tureba hsyl20 zenzike lemald evilmonads
    AkhILman phadej absence greeny__ deu krystianbajno shapr
*** Users on #haskell: __name__ gothos klugez gargawel_ aidecoe uwap_
    terrorjack__ dgpratt koankeeper Flonk nisstyre mrsbear loc kini wayne
    Annihitek ynyounuo rkrishnan vodkaInferno bs lyxia zxrf graingert adius
    @ChanServ ereu benl23 echoreply Heffalump chivay travv0 simon elcaro
    stefan-__ koz_ sigmundv- Maxdamantus johnstein n3t pacak kark Batholith
    esph wrengr_away stvc aweinstock bob_twinkles nemesit|znc steell_ Zemyla
    lavalike cross JSharp drdo kipras`away zv ullbeking jbetz
*** Users on #haskell: d6e dh freusque apoc andjjj23 Jon rootmos Rembane
    lstdgtfp joeyh m-renaud sclv Nevoic Ekho dfordivam subfacto1 newhoggy
    kyagrd__ ocharles Guillaum immae nopf kubrat adamse mmaruseacph2 cbarrett
    lightandlight jetpack_joe pasukon nonzen Sparadox energizer_ yushyin
    M2tias johs so suzu _guios exarkun orzo apeyroux_ diginet bcoppens
    RoguePointer AJTJ noctux Phyx- haveo runawayfive furnost adamCS
    joeytwiddle kloeri iron_houzi davean DwarfMaster idupree markhuge
*** Users on #haskell: jinblack solarus djanatyn anderson _6a68 avp Kneiva
    sssilver pharaun fiatjaf wz1000 Xandaros eagleflo adarshaj d3lxa crooked
    EvanR luigy geal eldritch koala_man rodgzilla barrucadu kosmikus tchakka
    lieven Deewiant _flow_ sivs fiddlerwoaroof puffnfresh exio4 carbolymer
    coldpress Aleksejs [df] lurkless exferenceBot Reisen lortabac connrs- deni
    hexagoxel gambpang t36s blackdog ammar2 locallycompact Eliel scivola
    Jonno_FTW connrs_ PHO scal mrd hodapp flogfr abbe
*** Users on #haskell: jmsx Peter_Storm ecx86 gsingh93 michalrus Tspoon__
    c-rog dredozubov MasseR
*** Sgeo_ (~Sgeo@ool-18b98455.dyn.optonline.net) has quit: Ping timeout: 246
    seconds
<dmwit> Or one might choose `m` to be `Maybe` and `a` to be `CrazyType`, so
        that `m a` means `Maybe CrazyType`.
*** #haskell URL: http://www.haskell.org/
*** #haskell modes: +CLnt
*** #haskell was created on 2006-11-26 14:42:48
*** tydeu (4bbd8d92@cpe-75-189-141-146.nc.res.rr.com) has joined channel
    #haskell                                                            [09:42]
*** isovector1_ (~isovector@173.239.198.35) has joined channel #haskell
*** catsup_ (d@ps38852.dreamhostps.com) has quit: Remote host closed the
    connection
*** catsup (d@ps38852.dreamhostps.com) has quit: Remote host closed the
    connection
*** ensyde_ (~ensyde@2600:1702:2e30:1a40:110b:e586:192d:9fef) has quit: Quit:
    Leaving
*** ensyde (~ensyde@2600:1702:2e30:1a40:110b:e586:192d:9fef) has joined
    channel #haskell                                                    [09:43]
<tydeu> Why does the type `((':) a b)` give the error  "Operator applied to
        too few arguments: :"?                                          [09:45]
*** solonarv (~solonarv@astrasbourg-653-1-243-221.w109-217.abo.wanadoo.fr) has
    quit: Ping timeout: 248 seconds
*** isovector1_ (~isovector@173.239.198.35) has quit: Ping timeout: 244
    seconds                                                             [09:47]
<dmwit> % Proxy @((':) Int [Int])                                       [09:48]
<yahb> dmwit: ; <interactive>:37:10: error: Operator applied to too few
       arguments: :
<c_wraith> tydeu: sections aren't supported at the type level. 
<dmwit> heh
<c_wraith> they're a form of lambda, after all. 
<tydeu> c_wraith: it works with (->) and (~)
<dmwit> But prefix-form shouldn't run into any of the problems that make us
        want to avoid lambdas.
<Axman6> % Proxy @(Int ': [Int])                                        [09:49]
<yahb> Axman6: ; <interactive>:39:16: error:; * Expected kind `[*]', but
       `[Int]' has kind `*'; * In the second argument of `(:)', namely
       `[Int]'; In the type `(Int : [Int])'; In the expression: Proxy @(Int :
       [Int])
<Lears> % :k '(:)
<Axman6> % Proxy @(Int ': '[Int])
<yahb> Axman6: Proxy
<yahb> Lears: '(:) :: a -> [a] -> [a]
<dmwit> tydeu: It's gotta be `(:)
<dmwit> '(:) I mean
<dmwit> Not (':).
<Axman6> :o I had no idea that's how you'd do that. crazy
<dmwit> '(:) is the prefix form, ': is the infix form.
<dmwit> % Proxy @(Int ': '[Int])                                        [09:50]
<yahb> dmwit: Proxy
<dmwit> % Proxy @('(:) Int '[Int])
<yahb> dmwit: Proxy
<Axman6> % Proxy @(Int ': [Int,Char])
<yahb> Axman6: Proxy
<dmwit> % Proxy @((:) Int [Int,Char])                                   [09:51]
<yahb> dmwit: Proxy
<dmwit> tydeu: Or skip the quote entirely. =P
<dmwit> There is no non-DataKind type constructor named :, so no ambiguity.
                                                                        [09:52]
<tydeu> dmwit: cool, thanks for the help
*** urodna (~urodna@unaffiliated/urodna) has quit: Quit: urodna         [09:54]
*** remusqls2 (~brice@112.185.232.208) has joined channel #haskell      [09:55]
*** kleisli (~kleisli@64.78.253.199) has quit: Ping timeout: 248 seconds
*** nbloomf (~nbloomf@104-183-67-6.lightspeed.fyvlar.sbcglobal.net) has quit:
    Quit: My MacBook has gone to sleep. ZZZzzz…                        [09:58]
*** ericsagnes (~ericsagne@2400:7800:4def:9800:124a:7dff:feb2:75fa) has quit:
    Ping timeout: 252 seconds
*** remusqls2 (~brice@112.185.232.208) has left channel #haskell: #haskell
                                                                        [10:01]
*** max00 (~max@23-115-45-16.lightspeed.tpkaks.sbcglobal.net) has quit: Quit:
    This computer has gone to sleep
*** nineonine (~nineonine@216.81.48.202) has quit: Remote host closed the
    connection
*** _Theo_ (Theo66@gateway/vpn/protonvpn/theo66) has joined channel #haskell
                                                                        [10:02]
*** druidgreeneyes (~druidgree@97-116-118-233.mpls.qwest.net) has joined
    channel #haskell
*** kleisli (~kleisli@pool-141-149-32-236.nycmny.fios.verizon.net) has joined
    channel #haskell                                                    [10:03]
*** max00 (~max@2600:1700:3ab0:4e40:917:75e8:6aaa:bdd) has joined channel
    #haskell
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection                                                          [10:04]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
*** max00 (~max@2600:1700:3ab0:4e40:917:75e8:6aaa:bdd) has quit: Client Quit
                                                                        [10:05]
<turab> I was reading through the seq wiki and they use the following example:
        f !x !y = z
*** dramforever (~dramforev@unaffiliated/dramforever) has joined channel
    #haskell
<turab> Actually wait I should read the whole wiki first                [10:06]
*** pi1 (~pi@dslb-094-221-116-014.094.221.pools.vodafone-ip.de) has joined
    channel #haskell
<jusss> is that true we can get one function definition from its type
        signature?                                                      [10:08]
*** pi__ (~pi@dslb-088-077-207-002.088.077.pools.vodafone-ip.de) has quit:
    Ping timeout: 246 seconds                                           [10:09]
*** druidgreeneyes (~druidgree@97-116-118-233.mpls.qwest.net) has quit: Quit:
    Quit                                                                [10:10]
<jusss> add x = x,  add x = x+1, add x = x+2, all have type add :: Int -> Int
<dramforever> jusss: Not completely (otherwise why write function definitions
              :P), but you can certainly learn some important stuff about the
              function                                                  [10:11]
<jusss> dramforever: but we can get add x = x through its type add :: Int ->
        Int, right？
<jusss> at least
<dramforever> Oh sure, you can play 'type tetris' to get a function that fits
              the signature                                             [10:12]
*** tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io) has quit: Remote
    host closed the connection
<dramforever> Also the more polymorphic the type is, the more information you
              can get                                                   [10:13]
<dramforever> :t id
<lambdabot> a -> a
*** tinwood (~tinwood@general.default.akavanagh.uk0.bigv.io) has joined
    channel #haskell
<dramforever> From this you can get that id takes one argument, can't really
              do anything about it, and needs to return something of the same
              type                                                      [10:14]
<dramforever> And you really don't expect someone who just wrote  id x = error
              "this function is useless lol"
<Cale> If you want to be a bit of a troll about it, id can take as many
       arguments as you like though :D
<Cale> > id id id id id id id 5                                         [10:15]
<dramforever> So it's most likely id x = x
<lambdabot>  5
*** bifunctorial (cb8fafa6@203.143.175.166) has joined channel #haskell
<jusss> dramforever: can we think type as a parameter and function definition
        as results?
<jusss> oh no
<jusss> one type may have multiple functions
<dramforever> Type is like a shape
<dramforever> It describes how it fits into other stuff                 [10:16]
<Cale> jusss: right, any one type will have many values in general.
*** druidgreeneyes (~druidgree@97-116-118-233.mpls.qwest.net) has joined
    channel #haskell
<jusss> Cale: so that won't describe as  a function
<jusss> if we say functions are parameter and type is the result        [10:17]
<jusss> but that's pointless...
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has quit: Ping timeout:
    264 seconds                                                         [10:18]
<turab> Okay, if I understand seq correctly, then are the following two
        equivalent:                                                     [10:19]
<turab> do{ digits <- many1 baseDigit
<turab>             ; let n = foldl (\x d -> base*x + toInteger (digitToInt
        d)) 0 digits
<turab>             ; seq n (return n)
<turab>             }
<dramforever> jusss: Quite like when you put jigsaw pieces together, you fit
              the protruding bits into the slots
<dramforever> (I'm sure those have actual names but whatever)
<turab> vs: let n = foldl' (\x d -> ... )
<turab>       return n                                                  [10:20]
*** DTZUZU (~DTZUZU@S0106bcd165662a4d.vs.shawcable.net) has quit: Quit:
    WeeChat 2.2
*** davide (~flory@118.35.229.108) has joined channel #haskell          [10:21]
<jusss> dramforever: a way to describe the relation between types and its
        functions?
<dramforever> Typing rules?
<jusss> :t (>>=)
<lambdabot> Monad m => m a -> (a -> m b) -> m b
<dramforever> And...?                                                   [10:22]
*** DTZUZU (~DTZUZU@S0106bcd165662a4d.vs.shawcable.net) has joined channel
    #haskell
<jusss> dramforever: is there that rules?
*** freeman42x (~freeman42@2a02:8084:e80:9580:2ced:996b:ff9:6b84) has quit:
    Ping timeout: 252 seconds
<dramforever> I'm not sure what you're talking about                    [10:23]
<jusss> dramforever: Cale let's assume that m is Maybe, so >>= :: Maybe a ->
        (a -> Maybe b) -> Maybe b , and f :: Maybe a, g :: (a -> Maybe b) , so
        >>= f g = ?
<dramforever> 'a way to describe the relation between types and its
              functions?' <- what kind of 'way'?
<jusss> dramforever: don't mind,
<dramforever> (>>=) f g :: Maybe b                                      [10:24]
<jusss> dramforever: I mean function definition
<jusss> not type
*** ddellacosta (~dd@193.148.18.211) has quit: Ping timeout: 272 seconds
*** theDon (~td@94.134.91.24) has quit: Ping timeout: 244 seconds       [10:25]
<dramforever> ... Not quite sure what you're talking about
*** ericsagnes (~ericsagne@2400:7800:4def:9800:124a:7dff:feb2:75fa) has joined
    channel #haskell
<Axman6> :t id `asAppledTo` id id id id id id
<lambdabot> error:
<lambdabot>     • Variable not in scope:
<lambdabot>         asAppledTo :: (a0 -> a0) -> (a1 -> a1) -> t
<Axman6> :t id `asAppliedTo` id id id id id id
<lambdabot> (a -> a) -> a -> a
<jusss> dramforever: we got the >>='s type, can we get its function definition
        base on its type?
<jusss> at least one function fit that type                             [10:26]
*** theDon (~td@94.134.91.174) has joined channel #haskell              [10:27]
*** davide (~flory@118.35.229.108) has left channel #haskell: #haskell
<Axman6> @djinn a -> b -> a
<lambdabot> f a _ = a
<Axman6> for some types, you can get the definition from the type, but not
         always, if that's what you're asking                           [10:28]
<Axman6> @djinn Maybe a -> (a -> Maybe b) -> Maybe b
<lambdabot> f a b =
<lambdabot>     case a of
<lambdabot>     Nothing -> Nothing
<lambdabot>     Just c -> b c
<jusss> Axman6: and 'bout >>=? can we get its function from its type?   [10:29]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has joined
    channel #haskell                                                    [10:30]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
<Axman6> No, for two reason, m can be any Monad, so there isn't one
         definition. And for some types there may be multiple possible
         definitions for that type                                      [10:31]
*** max00 (~max@23-115-45-16.lightspeed.tpkaks.sbcglobal.net) has joined
    channel #haskell                                                    [10:32]
<jusss> Axman6: then make m as Maybe, can we get its function?          [10:34]
<Axman6> yes, I did it above
<Axman6> @djinn Maybe a -> (a -> Maybe b) -> Maybe b
<lambdabot> f a b =
<lambdabot>     case a of
<lambdabot>     Nothing -> Nothing
<lambdabot>     Just c -> b c
<jusss> Axman6: how you got that?
<Axman6> ... I just did it, you saw how I got that :P                   [10:35]
<jusss> I mean how you got by hand, by something inference stuff        [10:36]
<Axman6> djinn is a tool which can do that
<jusss> Axman6: and if there's no djinn?
*** Sgeo__ (~Sgeo@ool-18b98455.dyn.optonline.net) has quit: Read error:
    Connection reset by peer                                            [10:37]
<dramforever> jusss: There's no mechanical way to do generate from types
              function definitions that make sense
<Axman6> I don't understand the question
<Axman6> well, there is, in some cases
<dramforever> (Unlike the other way around, generating types for functions)
<dramforever> okay, *general mechanical                                 [10:38]
<bifunctorial> it's equivalent-ish to automated theorem proving
*** thunderrd (~thunderrd@159.192.196.79) has joined channel #haskell   [10:39]
<dramforever> I don't think there's a 'good' way other than trying to make
              sense of the type and writing a function based on that 'sense'
<dramforever> For example for '(>>=) Maybe a -> (a -> Maybe b) -> Maybe b',
              well you can just do '(>>=) f g = Nothing', but that's most
              likely not intended                                       [10:40]
<bifunctorial> in general your types don't carry enough information to pick
               the right thing
<bifunctorial> when the types do then you probably won't be able to pick
               anything automatically
<bifunctorial> except if you cheat and use undefined                    [10:41]
<dramforever> djinn and exference have certain heuristics that try to generate
              'good' definitions
<dramforever> exference: https://github.com/lspitzner/exference
*** max00 (~max@23-115-45-16.lightspeed.tpkaks.sbcglobal.net) has quit: Quit:
    This computer has gone to sleep                                     [10:42]
<bifunctorial> it's probably more useful in an interactive setting where you
               ask it to generate small parts of the function you ask for
<bifunctorial> thats just my intuition though
<dramforever> Like type-directed autocompletion on steroids?
<bifunctorial> yeah                                                     [10:43]
*** Sgeo (~Sgeo@ool-18b98455.dyn.optonline.net) has joined channel #haskell
<bifunctorial> agda can do a little bit of it iirc
*** bolichep (~bolichep@2802:8000:2707:5100:f8f1:13e5:d45b:872) has quit: Ping
    timeout: 252 seconds
*** catsup_ (d@ps38852.dreamhostps.com) has joined channel #haskell     [10:44]
*** catsup (d@ps38852.dreamhostps.com) has joined channel #haskell
*** shafox (~shafox@49.205.220.105) has quit: Ping timeout: 245 seconds
                                                                        [10:45]
* hackage symbolic-link 0.1.1.1 - Symlink functions
  https://hackage.haskell.org/package/symbolic-link-0.1.1.1 (fuzz)      [10:49]
<jusss> bifunctorial: dramforever ok, so it's impossible to get function
        definitions from its type...
*** lagothrix (~lagothrix@unaffiliated/lagothrix) is now known as Guest16850
                                                                        [10:50]
*** Guest16850 (~lagothrix@unaffiliated/lagothrix) has quit: Killed
    (tolkien.freenode.net (Nickname regained by services))
*** lagothrix (~lagothrix@unaffiliated/lagothrix) has joined channel #haskell
<jusss> in a general way
*** jao (~jao@pdpc/supporter/professional/jao) has quit: Ping timeout: 246
    seconds
*** abhixec (~abhixec@73.92.49.6) has quit: Remote host closed the connection
                                                                        [10:51]
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has quit: Remote host closed the
    connection                                                          [10:52]
*** dmitri (~dima14@cm-171-100-77-208.revip10.asianet.co.th) has quit: Quit:
    This computer has gone to sleep
<jusss> but when that m is e->,  and x :: e,  >>= f g x = g(f x) x , that's
        right?
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has joined channel #haskell
<Axman6> jusss: As an exercise, what is the function for the type [a] -> [a]?
<jusss> Axman6: make x::a, f [x] = [x]                                  [10:53]
<jusss> it fits                                                         [10:54]
<Axman6> but is it the only function?
*** slack1256 (~slack1256@186-78-3-62.baf.movistar.cl) has joined channel
    #haskell
<jusss> Axman6: of course not
*** mmfood (~mmfood@h-98-128-132-149.NA.cust.bahnhof.se) has quit: Ping
    timeout: 272 seconds
<jusss> Axman6: but hey, at least it does have one, right?              [10:55]
<Axman6> sure
<Axman6> what about a -> b -> c?
<slack1256> I remember a wiki page discussing how to make ghc compilation
            times shorter and reducing memory aloccation. Does anyone have a
            link?
<bifunctorial> every type is inhabited in haskell though
<jusss> Axman6: I assume that a->b->c is not right                      [10:56]
<DigitalKiwi> https://wiki.haskell.org/Performance/GHC
<jusss> I'm afraid that there's no a function have a->b->c              [10:57]
<DigitalKiwi> that might not be it hm
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has quit: Ping timeout: 272 seconds
*** Jeanne-Kamikaze (~Jeanne-Ka@205.234.124.69) has quit: Quit: Leaving
*** lastmanstanding (~arjoonn@111.92.48.255) has joined channel #haskell
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection                                                          [10:58]
<slack1256> DigitalKiwi: That isn't what I had in mind :-P .
*** zacts (~zacts@dragora/developer/zacts) has joined channel #haskell
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
*** xff0x (~fox@210.57.57.162) has joined channel #haskell
<slack1256> The ghc compiler itself is *slow* at compiling, plus it has 1G
            memory usage on certain setups.                             [10:59]
*** csharpsteen (~csharpste@184.75.223.219) has quit:                   [11:00]
<DigitalKiwi> there's some info here https://wiki.haskell.org/GHC/FAQ
<DigitalKiwi> dynamic vs static linking
<DigitalKiwi> is a big one I've seen matter a lot
<jusss> Axman6: there's?
*** nineonine (~nineonine@216-19-190-182.dyn.novuscom.net) has joined channel
    #haskell
<slack1256> Oh that can be, nixos default compiler mode for haskell programs
            is static.                                                  [11:01]
*** perrier-jouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) has
    quit: Quit: WeeChat 2.5                                             [11:02]
*** dmitri (~dima14@cm-171-100-77-208.revip10.asianet.co.th) has joined
    channel #haskell
*** rainmanjam (~rainmanja@97-120-26-121.ptld.qwest.net) has joined channel
    #haskell                                                            [11:03]
<Axman6> jusss: correct, there is no function with that type
*** nshepperd (~nshepperd@185.212.170.227) has quit: Quit: bye          [11:04]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 245
    seconds
*** rainmanj_ (~rainmanja@2601:1c0:6600:7479:b526:192e:8337:c799) has quit:
    Ping timeout: 264 seconds                                           [11:06]
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has joined channel
    #haskell
<bifunctorial> you can prove it to yourself by letting c = Void         [11:08]
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
*** monochrom (trebla@216.138.220.146) has quit: Quit: NO CARRIER       [11:11]
*** xkapastel (uid17782@gateway/web/irccloud.com/x-zgzeuntkzzdsoccd) has quit:
    Quit: Connection closed for inactivity                              [11:12]
*** fosterite (~fosterite@2601:445:447f:dd14:496a:f03d:1f18:de9b) has quit:
    Read error: Connection reset by peer
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 246
    seconds                                                             [11:13]
*** monochrom (trebla@216.138.220.146) has joined channel #haskell      [11:18]
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has joined
    channel #haskell
*** otto_s_ (~user@p4FF27CCF.dip0.t-ipconnect.de) has joined channel #haskell
                                                                        [11:20]
*** NinjaTrappeur (~ninja@unaffiliated/ninjatrappeur) has quit: Ping timeout:
    264 seconds                                                         [11:22]
*** recj (~recj@dailyprog.org) has quit: Ping timeout: 272 seconds      [11:23]
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has quit:
    Ping timeout: 250 seconds
*** fosterite (~fosterite@2601:445:447f:dd14:290f:2255:21c7:87ea) has joined
    channel #haskell
*** otto_s (~user@p4FF27B99.dip0.t-ipconnect.de) has quit: Ping timeout: 245
    seconds
*** recj (~recj@dailyprog.org) has joined channel #haskell              [11:24]
<Axman6> jusss: this question about whether you can generate a function from
         its type is related to out types being algebraic. We can talk about
         how many functions there are of a given type. There is exactly one
         function for the tyoe () -> (), there's also exactly one function of
         the type a -> a. There's two of the type a -> a -> a, which are const
         and flip const. How many functions do you thing there are of type
         Bool -> Bool?
*** NinjaTrappeur (~ninja@unaffiliated/ninjatrappeur) has joined channel
    #haskell                                                            [11:25]
<jusss> Axman6: four?                                                   [11:26]
<Axman6> sounds right to me
<Axman6> what about Bool -> Bool -> Bool?
*** nbloomf (~nbloomf@2600:1700:83e0:1f40:1473:f729:4735:bf68) has joined
    channel #haskell
<jusss> Axman6: I'm not good at maths, 2^3 ?                            [11:27]
*** rainmanj_ (~rainmanja@97-120-26-121.ptld.qwest.net) has joined channel
    #haskell
<Axman6> IIRC it's 2^(2^2)
*** elijahcgw3 (~dario@175.193.150.30) has joined channel #haskell      [11:28]
*** rainmanjam (~rainmanja@97-120-26-121.ptld.qwest.net) has quit: Read error:
    Connection reset by peer
*** Saukk (~Saukk@2001:998:e4:4a03:1c59:9bb5:b94c:3) has joined channel
    #haskell                                                            [11:32]
*** khorben1 (~khorben@185.5.172.148) has joined channel #haskell
*** elijahcgw3 (~dario@175.193.150.30) has left channel #haskell: #haskell
                                                                        [11:33]
*** ilikeheaps (~sushi@176.120.120.135.telemedia.pl) has quit: Ping timeout:
    272 seconds                                                         [11:34]
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has quit: Ping timeout:
    264 seconds                                                         [11:35]
<dmwit> turab: No, those are not equivalent.                            [11:36]
<dmwit> turab: foldl' calls seq at each recursive step; your foldl+seq version
        doesn't.
*** anohigisavay (~kj@101.95.188.242) has joined channel #haskell
*** tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has quit: Remote host
    closed the connection                                               [11:38]
*** tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has joined channel #haskell
<_Theo_> I'm curious about Haskell. How much of category theory is applicable
         to it? Not asking if it's necessary, just if Haskell and category
         theory complement each other well.                             [11:40]
<jusss> Axman6: another question, >>= f g x = g (f x) x , this can be turn to
        >>= f g = \x -> g (f x) x ?                                     [11:41]
*** lambda-11235 (~lambda-11@207.183.239.54) has joined channel #haskell
                                                                        [11:42]
<anohigisavay> hi, i'm trying to install cabal-install with cabal, and i got
               this error                                               [11:43]
<anohigisavay> http://dpaste.com/36ZQKVW
<dramforever> jusss: yes
<jusss> dramforever: through?
*** nshepperd (~nshepperd@185.212.170.227) has joined channel #haskell
*** nineonin_ (~nineonine@con08-vpn.calabrio.com) has joined channel #haskell
                                                                        [11:44]
<anohigisavay> dram大神泥壕啊
<dramforever> jusss: That's just syntax sugar
<dmwit> _Theo_: That's a pretty soft question. I don't think you're gonna get
        a very satisfying answer.
<jle`> _Theo_: it depends on what you mean by "applicable"              [11:45]
*** marcel (~philip@175.215.88.181) has joined channel #haskell
<Cale> _Theo_: A categorical way of thinking can be fairly fruitful
<jusss> dramforever: which has a name for it?
<jle`> do you mean how much category theory would help you in learning
       haskell?
<dmwit> jusss: `>>= f g x = ...` is defined to mean `>>= f g = \x -> ...`
        (and, therefore, to mean `>>= = \f -> \g -> \x -> ...`)
<jle`> or maybe in writing haskell?
<_Theo_> I'm pretty much new to both, and I'm finding what I'm learning about
         category theory interesting. In the same way, I'm finding Haskell
         interesting. So I guess my question is how much of category theory
         can be used in Haskell? Not sure if that's better rephrasing.  [11:46]
<jusss> dmwit: does this transformer or syntax sugar has a name?
<dmwit> Not one I know.
<jusss> ok then                                                         [11:47]
*** nineonine (~nineonine@216-19-190-182.dyn.novuscom.net) has quit: Ping
    timeout: 245 seconds
*** lastmanstanding (~arjoonn@111.92.48.255) has quit: Ping timeout: 245
    seconds
* dmwit puts his tongue in his cheek and says "10%" in _Theo_'s general
  direction
<Cale> _Theo_: here's one package you could look at
       http://hackage.haskell.org/package/categories-1.0.7              [11:48]
<jle`> _Theo_: do you mean, can you do CAS-type stuff with category theory in
       Haskell?
<dmwit> Category theory is huge, and for any domain X, most of it is not
        useful for X.
*** zacts (~zacts@dragora/developer/zacts) has quit: Quit: WeeChat 2.4
<jle`> _Theo_: like, do you want to use Haskell to help you with Category
       Theory problems
<dmwit> This includes the domain X = Haskell programming.               [11:49]
<_Theo_> jle`, Yes, pretty much.
<jle`> hm, yeah, i think haskell is well-suited for doing a lot of
       mathematical based programming
<Cale> Haskell provides some decent examples of categories here and there (the
       category of Haskell types and functions between them being primary
       among those), and a fair number of the definitions from category theory
       specialise into useful things to discuss.                        [11:50]
<jle`> if you, say, want to write a library that will help you solve category
       theory proofs and problems
<jle`> haskell gives you the tools to write such a library or program in a
       nice way
<dmwit> anohigisavay: Hm. Normally I would suggest running the proposed
        ghc-pkg check command, but that's... probably hard to do correctly
        with the way cabal v2-* stuff munges package databases.
*** marcel (~philip@175.215.88.181) has left channel #haskell: #haskell
                                                                        [11:51]
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
<_Theo_> I see, I will try to look into this more. Regardless, I do want to
         learn Haskell. It would add to the level of fun (?) if it paired
         nicely with learning category theory.                          [11:52]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
<jle`> _Theo_: but i think one neat thing about haskell is that you can often
       apply principles and proofs/equivalences in category theory to reason
       about your programs, and make program refactorings/rewritings based on
       the conclusions of cattheo and other abstract maths
<jle`> in general for all programs, not just numerical/mathematics based
       programs
<turab> dmwit: That makes sense. Is it better to call seq at each step or at
        the end?
<jle`> _Theo_: ah, you might be interested in "Category Theory for
       Programmers", which actually teaches CT using Haskell to demonstrate
       examples
<jle`> Haskell and C, I believe                                         [11:53]
<jle`> but, it's aimed for people who are already familiar with programming
       principles
<_Theo_> Oh, nice. Thank you. I'll search it up now.
<anohigisavay> dmwit: seems `ghc-pkg check` is done against the global
               database. it lists megaparsec as a broken package which was
               installed from my Arch package manager
<jle`> so maybe not the best if you are learning progrmaming, but maybe good
       if you are learning haskell as a second or third language
<_Theo_> I am. I know C, actually.
*** ericsagnes (~ericsagne@2400:7800:4def:9800:124a:7dff:feb2:75fa) has quit:
    Ping timeout: 250 seconds
*** fosterite (~fosterite@2601:445:447f:dd14:290f:2255:21c7:87ea) has quit:
    Remote host closed the connection                                   [11:54]
<_Theo_> Yeah, I know Java as well, so pretty intermediate as a programmer, I
         guess.
<jle`> you're probably right in the audience range for that book then :)
<jle`> it's available for free online as a series of blog posts but there is
       also a print version for sale
<anohigisavay> dmwit: not sure if it's related but i better not touch it since
               it will break my system dependencies
*** kleisli (~kleisli@pool-141-149-32-236.nycmny.fios.verizon.net) has quit:
    Ping timeout: 245 seconds                                           [11:55]
*** ericsagnes (~ericsagne@2400:7800:4def:9800:124a:7dff:feb2:75fa) has joined
    channel #haskell
<_Theo_> Hmm, I'd prefer something physical, but pdf or blog is okay.
<dmwit> turab: Of course the answer to any such question is "it depends" -- or
        else the compiler would do it for you, hey?
<dmwit> turab: However, in this case a rule of thumb applies: foldl' is almost
        always better than foldl.                                       [11:56]
<anohigisavay> actually i'm just trying to get a taste of liquidhaskell. but i
               can't install it successfully with either cabal or stack
<dmwit> anohigisavay: Oh, arch.                                         [11:57]
<dmwit> anohigisavay: Is GHC installed from the package manager?
<anohigisavay> dmwit: yes
<turab> dmwit: Thanks!                                                  [11:58]
<turab> anohigisavay: I highly recommend ghcup
<dmwit> anohigisavay: I suggest getting a copy of GHC from somewhere else.
<dramforever> Not GHC from Arch...
<dmwit> But see also the Arch wiki page on Haskell, which has instructions if
        you want to try to weather the pain of the package-manager-ghc.
<turab> I tried other alternatives in hopes to learn more (which I did), but
        installing ghc using ghcup was painless                         [11:59]
<anohigisavay> turab: dmwit: thanks i'll try it
<dmwit> anohigisavay: You can safely install a different GHC version from the
        official bindists alongside the one you currently have from the
        package manager; they won't fight or anything.
<anohigisavay> sounds something like rustup
<dmwit> ghcup was inspired by rustup, yes.                              [12:00]
<habbah>
         https://hackage.haskell.org/package/megaparsec-7.0.5/docs/Text-Megaparsec-Char-Lexer.html#v:charLiteral
<habbah> charLiteral :: (MonadParsec e s m, Token s ~ Char) => m Char
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
<habbah> what is this saying?
<habbah> there's an equality constraint between Token s and Char        [12:01]
<dmwit> It says that `charLiteral` is a parser which works whenever the token
        type is characters, and returns a character.
<dmwit> Presumably Token is a type family, though I haven't looked at your
        link.                                                           [12:02]
*** lastmanstanding (~arjoonn@103.79.223.74) has joined channel #haskell
                                                                        [12:03]
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has joined channel
    #haskell
<jle`> habbah: yes, it's that m has to be an instance of MonadParsec e s m,
       and Token s has to be equal to Char
<dmwit> So if your confusion is something like "Well, `Maybe s` can't possibly
        be a `Char`, so how could `Token s` be a `Char`?" then you'll want to
        read the documentation on the TypeFamilies extension.
*** nbloomf (~nbloomf@2600:1700:83e0:1f40:1473:f729:4735:bf68) has quit: Quit:
    My MacBook has gone to sleep. ZZZzzz…
<jle`> 'Token s' is a type family, which is sort of like a type-level function
       or "property" of 's'
<jle`> so basically you can pick charLiteral for any e, s, m....as long as you
       have an instance MonadParsec e s m, and whatever 's' is, 'Token s' is
       Char                                                             [12:04]
<dmwit> At a guess, for example `Token String ~ Char` is likely true.   [12:05]
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has joined channel
    #haskell
<dmwit> (Probably `Token [a] ~ a`.)
*** rruizt (~rruizt@83-84-23-124.cable.dynamic.v4.ziggo.nl) has quit: Ping
    timeout: 268 seconds                                                [12:07]
<rajivr___> I am new to Haskell. I wanted to confirm that there is no
            difference between `length :: forall {t :: * -> *} {a}. Foldable t
            => t a -> Int` and `length :: forall {t :: * -> *} {a ::
            *}. Foldable t => t a -> Int`. Basically is `{a}` is syntactic
            sugar for `{a :: *}`?
<habbah> thank you both. this makes sense. I can see that the m needs to
         MondParsec e s m, I can accept that Char needs to be a Token s. I do
         need to read about type families at some point though.
*** rruizt (~rruizt@83-84-23-124.cable.dynamic.v4.ziggo.nl) has joined channel
    #haskell                                                            [12:08]
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has quit: Remote
    host closed the connection
*** vlatkoB (~IRC_clien@unaffiliated/vlatkob) has joined channel #haskell
*** Saukk (~Saukk@2001:998:e4:4a03:1c59:9bb5:b94c:3) has quit: Remote host
    closed the connection
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell                                                    [12:09]
<dmwit> rajivr___: The two alternatives are identical, but the conclusion
        ("`{a}` is syntactic sugar for `{a :: *}`") does not follow.
<dmwit> rajivr___: Just like there is type inference, there is also kind
        inference.                                                      [12:10]
<dmwit> rajivr___: Kind inference tells us that because `t :: * -> *` and we
        have `t a` in the type, then `a :: *`.
<rajivr___> I see. Thanks Daniel! :-) 
*** Lycurgus (~niemand@98.4.103.219) has joined channel #haskell        [12:12]
<dmwit> rajivr___: Compare `lift :: forall {t :: (* -> *) -> * -> *} {m}
        {a}. (MonadTrans t, Monad m) => m a -> t m a`, which is equivalent to
        `lift :: forall { t :: (* -> *) -> * -> * } {m :: * -> *} {a ::
        *}. ...`.
<dmwit> rajivr___: There the `{m}` is expanded via kind inference to `{m :: *
        -> *}`, not `{m :: *}`.
*** keep_learning_M (~keep_lear@150.203.68.26) has joined channel #haskell
*** keep_learning_M (~keep_lear@150.203.68.26) has quit: Client Quit    [12:13]
*** keep_learning_M (~keep_lear@150.203.68.26) has joined channel #haskell
<rajivr___> Thanks again dmwit  . I really hadn't though of it that way.
                                                                        [12:14]
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    quit: Ping timeout: 245 seconds                                     [12:15]
*** clive (~leighton@175.215.88.181) has joined channel #haskell        [12:16]
*** rainmanj_ (~rainmanja@97-120-26-121.ptld.qwest.net) has quit: Ping
    timeout: 245 seconds                                                [12:20]
<anohigisavay> thank you! ghcup is cool
*** gehmehgeh (~ircuser1@gateway/tor-sasl/gehmehgeh) has quit: Remote host
    closed the connection
<turab> anohigisavay: I teared up a bit the first time I used it :)
*** rainmanjam (~rainmanja@97-120-26-121.ptld.qwest.net) has joined channel
    #haskell                                                            [12:21]
*** clive (~leighton@175.215.88.181) has quit: K-Lined                  [12:22]
*** arney (~devlin@211.208.224.44) has joined channel #haskell          [12:23]
*** tsaka_ (~torstein@dslb-178-004-036-111.178.004.pools.vodafone-ip.de) has
    joined channel #haskell                                             [12:25]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Read
    error: Connection reset by peer                                     [12:26]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [12:27]
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has quit: Ping timeout:
    250 seconds                                                         [12:29]
*** arney (~devlin@211.208.224.44) has left channel #haskell: #haskell
*** gehmehgeh (~ircuser1@gateway/tor-sasl/gehmehgeh) has joined channel
    #haskell                                                            [12:31]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** day__ (~Unknown@unaffiliated/day) has joined channel #haskell
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** turab (~turab@2001:18e8:2:28b7:f000::87e) has quit: Ping timeout: 250
    seconds                                                             [12:33]
*** ht_ (~Thunderbi@ip-213-127-90-221.ip.prioritytelecom.net) has joined
    channel #haskell                                                    [12:34]
*** anohigisavay (~kj@101.95.188.242) has quit: Remote host closed the
    connection
*** day (~Unknown@unaffiliated/day) has quit: Ping timeout: 245 seconds
*** day__ (~Unknown@unaffiliated/day) is now known as day
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 248
    seconds
*** anohigisavay (~kj@101.95.188.242) has joined channel #haskell
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [12:36]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection                                          [12:37]
*** nullifidian__ (~nullifidi@unaffiliated/nullifidian) has joined channel
    #haskell                                                            [12:41]
*** slack1256 (~slack1256@186-78-3-62.baf.movistar.cl) has quit: Remote host
    closed the connection                                               [12:43]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote host
    closed the connection
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [12:44]
*** nullifidian_ (~nullifidi@unaffiliated/nullifidian) has quit: Ping timeout:
    268 seconds                                                         [12:45]
* hackage fast-builder 0.1.0.2 - Fast ByteString Builder
  https://hackage.haskell.org/package/fast-builder-0.1.0.2 (AkioTakano)
                                                                        [12:47]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Quit:
    Going to… sle… ep.                                                [12:52]
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection                                                          [12:53]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
*** jefferson (~neron@59.23.157.72) has joined channel #haskell
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection                                                          [12:54]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell   [12:55]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [12:56]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote host
    closed the connection
*** isovector1_ (~isovector@173.239.198.35) has joined channel #haskell
*** jefferson (~neron@59.23.157.72) has left channel #haskell: #haskell
                                                                        [12:59]
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has joined channel
    #haskell
*** mnrmnaugh (~mnrmnaugh@unaffiliated/mnrmnaugh) has quit: Ping timeout: 258
    seconds                                                             [13:00]
*** ht_ (~Thunderbi@ip-213-127-90-221.ip.prioritytelecom.net) has quit: Read
    error: Connection reset by peer                                     [13:01]
*** ensyde (~ensyde@2600:1702:2e30:1a40:110b:e586:192d:9fef) has quit: Ping
    timeout: 250 seconds                                                [13:03]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection                                          [13:05]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [13:06]
*** fphilipe_ (~phil@81.6.34.65) has joined channel #haskell
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has quit: Ping timeout:
    250 seconds
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [13:09]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** fphilipe (~phil@2a02:168:f6c3:0:98cc:7b3a:f1f:3193) has quit: Ping
    timeout: 264 seconds
*** coldpress[m] (coldpressm@gateway/shell/matrix.org/x-jchlbpityayzyvqy) has
    joined channel #haskell                                             [13:10]
*** jgt (~jgt@2a02:a31b:8542:b480:7d8d:cea0:c119:5b31) has joined channel
    #haskell
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection                                                          [13:11]
*** dmitri (~dima14@cm-171-100-77-208.revip10.asianet.co.th) has quit: Quit:
    This computer has gone to sleep
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection                                                          [13:13]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [13:14]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Ping
    timeout: 252 seconds                                                [13:15]
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has joined
    channel #haskell                                                    [13:19]
*** mariatsji (~mariatsji@46.67.104.153.tmi.telenormobil.no) has joined
    channel #haskell                                                    [13:23]
<jle`> rajivr___: i'd think of it like kind inference
<jle`> rajivr___: so it's on the same level of difference as differences in
       explicitness for type inference                                  [13:24]
*** dmitri (~dima14@cm-171-100-77-208.revip10.asianet.co.th) has joined
    channel #haskell
<jle`> rajivr___: for example, (1 :: Int) + (2 :: Int) vs. (1 :: Int) + 2
<jle`> these two are equivalent, but we have the option to use a type
       annotation
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has quit:
    Ping timeout: 264 seconds
<jle`> usually type annotations are not necessary, but we sometimes use them
       to improve readability and as self-documentation                 [13:25]
<jle`> oh i basically just repeated what dmwit wrote
<jle`> i skimmed to quickly D:
<rajivr___> Thanks jle` :-) Yes, up until now I had not developed an intuition
            / realization for kind inference.
<jle`> yeah, :: is "annotation" syntax when used in a type or value expression
                                                                        [13:26]
*** bifunctorial (cb8fafa6@203.143.175.166) has quit: Remote host closed the
    connection
<rajivr___> Haskell continues to blow my mind.
<jle`> so you can think of it as 'decorating' an expression, to either help
       inference or readability
*** acyed (~acyed@65.204.148.68) has joined channel #haskell            [13:27]
<jle`> note that this is slightly different than the :: in 'length :: ...'
<jle`> in (1 :: Int) + (2 :: Int), the :: Int is a syntactically optional part
       of expression syntax, that decorates an expression to help inference or
       readability, or just for fun
<jle`> so as an expression you could always view it as syntactically optional,
       only sometimes necessary                                         [13:28]
<rajivr___> But isnt `...` in `length :: ...` also optional if type level
            inference can figure things out?                            [13:29]
<jle`> syntactically optional, semantically (sometimes) necessary       [13:30]
<jle`> rajivr___: it's a bit subtle depending on the context that we're seeing
       length :: ...
*** rainmanjam (~rainmanja@97-120-26-121.ptld.qwest.net) has quit: Ping
    timeout: 268 seconds
<jle`> when we type `myFunction :: Int -> Bool; myFunction = ...`, this is a
       part of "declaration syntax"
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
<jle`> so :: here is not decorating an expression, but is rather a rigid part
       of the syntax for declaring a named binding                      [13:31]
*** acyed (~acyed@65.204.148.68) has quit: Client Quit
<jle`> (... :: ...; ... = ...)
<jle`> but if you're using length as a value/expression, then yeah, the type
       annotation is usually optional                                   [13:32]
<rajivr___> I see. Thanks for for clarifying. 
<jle`> > (length :: forall t a. Foldable t => t a -> Int) [1,2,3]    -- it's
       optional here
<lambdabot>  3
*** petersen (~petersen@redhat/juhp) has joined channel #haskell        [13:33]
<jle`> well, it's optional as a declaration too. it's just that the two usages
       are slightly different to me, since they come from different parts of
       syntax                                                           [13:34]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection                                          [13:35]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** travis_ (~travis@cpe-108-185-149-115.socal.res.rr.com) has quit: Ping
    timeout: 245 seconds                                                [13:36]
*** gbowen (~gregb@101.164.163.88) has joined channel #haskell          [13:40]
*** Pausenbrot (~Pausenbro@dslb-094-220-029-240.094.220.pools.vodafone-ip.de)
    has joined channel #haskell                                         [13:42]
*** reactormonk (~tass@ip5f5bf7a2.dynamic.kabel-deutschland.de) has joined
    channel #haskell                                                    [13:43]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 268 seconds                                           [13:46]
*** alicemaz (~alice@ennoia.rheo.space) has quit: Read error: Connection reset
    by peer
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Quit:
    Going to… sle… ep.                                                [13:48]
*** alicemaz (~alice@ennoia.rheo.space) has joined channel #haskell
*** v01d4lph4 (~v01d4lph4@125.16.234.60) has joined channel #haskell    [13:49]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell                                                    [13:50]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Ping
    timeout: 252 seconds
*** dale (~dale@unaffiliated/dale) has quit: Quit: My computer has gone to
    sleep                                                               [13:51]
*** Lycurgus (~niemand@98.4.103.219) has quit: Quit: Exeunt             [13:52]
*** plutoniix (~q@175.176.222.7) has quit: Quit: Leaving                [13:53]
*** dmitri (~dima14@cm-171-100-77-208.revip10.asianet.co.th) has quit: Quit:
    This computer has gone to sleep                                     [13:54]
*** fosterite (~fosterite@c-68-46-86-159.hsd1.mn.comcast.net) has joined
    channel #haskell
*** Ariakenom (~Ariakenom@h-158-174-187-106.NA.cust.bahnhof.se) has joined
    channel #haskell                                                    [13:55]
<rsoeldner> If I want to ship my sql migration files with the executable
            (&nix) is the right way to go using `data-files` ?
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [13:56]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote host
    closed the connection
*** isovector1_ (~isovector@173.239.198.35) has quit: Remote host closed the
    connection                                                          [13:59]
*** fosterite (~fosterite@c-68-46-86-159.hsd1.mn.comcast.net) has quit: Ping
    timeout: 248 seconds
*** logzet_ (~quassel@unaffiliated/logzet) has quit: Quit:
    http://quassel-irc.org - Chat comfortably. Anywhere.
*** khorben1 (~khorben@185.5.172.148) has quit:                         [14:00]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [14:01]
*** Nta1e (~Nta1e@105.27.244.58) has joined channel #haskell            [14:02]
*** KeyJoo (~KeyJoo@46.249.4.107) has joined channel #haskell
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Quit:
    Going to… sle… ep.                                                [14:04]
*** tsaka_ (~torstein@dslb-178-004-036-111.178.004.pools.vodafone-ip.de) has
    quit: Ping timeout: 244 seconds
*** xff0x (~fox@210.57.57.162) has quit: Ping timeout: 272 seconds
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 245
    seconds                                                             [14:05]
*** gehmehgeh (~ircuser1@gateway/tor-sasl/gehmehgeh) has quit: Quit: Leaving
                                                                        [14:06]
*** mariatsji (~mariatsji@46.67.104.153.tmi.telenormobil.no) has quit: Remote
    host closed the connection                                          [14:07]
*** tsaka_ (~torstein@dslb-178-004-036-111.178.004.pools.vodafone-ip.de) has
    joined channel #haskell
*** slomo (~slomo@unaffiliated/slomo) has joined channel #haskell
*** Pausenbrot (~Pausenbro@dslb-094-220-029-240.094.220.pools.vodafone-ip.de)
    has quit: Quit: .oO(ZZZzz)                                          [14:08]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [14:10]
*** errst (~errst@213.43.174.1) has joined channel #haskell
<dmwit> If you need the files at runtime, yes. If they're used at
        compile-time, then extra-source-files is correct.
*** danvet (~Daniel@2a02:168:569e:0:3106:d637:d723:e855) has joined channel
    #haskell
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Ping
    timeout: 252 seconds                                                [14:12]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell
*** gbowen (~gregb@101.164.163.88) has left channel #haskell: #haskell
<dmwit> There are certain extensions that make certain type
        signatures... well, "mandatory" isn't the right word. But less
        optional.                                                       [14:13]
*** shiradz (~shiradz@197.255.156.29) has joined channel #haskell
<dmwit> ScopedTypeVariables and TypeApplications, specifically.
<dmwit> But that nuance can come later maybe.
*** nav2002_ (~nav2002@115.99.135.178) has joined channel #haskell      [14:14]
*** Pausenbrot (~Pausenbro@dslb-094-220-029-240.094.220.pools.vodafone-ip.de)
    has joined channel #haskell
*** ggole (~ggole@2001:8003:8119:7200:b1f9:f5c8:f4ed:2d24) has joined channel
    #haskell
*** Sheilong (uid293653@gateway/web/irccloud.com/x-pbfruzhzgblxkcmx) has quit: 
                                                                        [14:15]
*** shiradz (~shiradz@197.255.156.29) has quit: Client Quit             [14:16]
*** shiradz (~shiradz@197.255.156.29) has joined channel #haskell       [14:17]
*** doublex_ (~doublex@c-73-117-89-215.hsd1.oh.comcast.net) has joined channel
    #haskell
*** tadeo (~tadeo@89.249.74.218) has joined channel #haskell            [14:19]
*** doublex (~doublex@2601:542:c480:6ee0:1de2:ae8f:a7bf:82ab) has quit: Ping
    timeout: 264 seconds
*** jb55 (~jb55@gateway/tor-sasl/jb55) has quit: Remote host closed the
    connection                                                          [14:20]
*** jb55 (~jb55@gateway/tor-sasl/jb55) has joined channel #haskell      [14:21]
*** jsomedon (~jsomedon@123.122.64.147) has quit: Quit: jsomedon
*** Stanley00 (~Stanley00@unaffiliated/stanley00) has quit: Ping timeout: 272
    seconds                                                             [14:22]
*** shiradz (~shiradz@197.255.156.29) has quit: Quit: shiradz
*** mariatsji (~mariatsji@80.91.33.141) has joined channel #haskell     [14:25]
*** tromp (~tromp@ip-213-127-58-74.ip.prioritytelecom.net) has joined channel
    #haskell
*** BaneAliens (~BaneAlien@cpe-172-91-22-149.socal.res.rr.com) has joined
    channel #haskell                                                    [14:28]
*** tromp_ (~tromp@2a02:a210:1585:3200:508:3140:aa4d:83d6) has joined channel
    #haskell
*** Stanley00 (~Stanley00@unaffiliated/stanley00) has joined channel #haskell
*** tromp (~tromp@ip-213-127-58-74.ip.prioritytelecom.net) has quit: Read
    error: Connection reset by peer                                     [14:29]
*** cfricke (~cfricke@unaffiliated/cfricke) has joined channel #haskell
                                                                        [14:31]
<rsoeldner> dmwit, and how does it differ from using `data-dir` ?       [14:32]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Remote host closed the connection                                   [14:33]
*** cfricke (~cfricke@unaffiliated/cfricke) has quit: Client Quit       [14:34]
*** dansho (~dansho4@71-84-161-204.dhcp.astr.or.charter.com) has quit: Ping
    timeout: 244 seconds
*** ilikeheaps (~sushi@176.120.120.135.telemedia.pl) has joined channel
    #haskell
*** cfricke (~cfricke@unaffiliated/cfricke) has joined channel #haskell
                                                                        [14:35]
*** dansho (~dansho4@71-84-161-204.dhcp.astr.or.charter.com) has joined
    channel #haskell                                                    [14:36]
*** mnrmnaugh (~mnrmnaugh@unaffiliated/mnrmnaugh) has joined channel #haskell
                                                                        [14:37]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [14:38]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has joined channel #haskell
                                                                        [14:39]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Ping
    timeout: 250 seconds                                                [14:40]
<dmwit> data-files are installed in a place the executable can
        find. extra-source-files are not. data-dir gives a directory to copy
        the data-files out of.                                          [14:42]
<rsoeldner> dmwit, thanks                                               [14:43]
*** mountaingoat (~mountaing@unaffiliated/mountaingoat) has quit: Ping
    timeout: 268 seconds                                                [14:44]
*** zaquest (~notzaques@gw-mig-service.ll-nsk.zsttk.ru) has quit: Remote host
    closed the connection
*** mnrmnaugh (~mnrmnaugh@unaffiliated/mnrmnaugh) has quit: Ping timeout: 268
    seconds
*** Pausenbrot (~Pausenbro@dslb-094-220-029-240.094.220.pools.vodafone-ip.de)
    has quit: Quit: .oO(ZZZzz)
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection                                          [14:45]
*** errst (~errst@213.43.174.1) has quit: Read error: Connection reset by peer
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has quit:
    Ping timeout: 245 seconds
*** tsaka_ (~torstein@dslb-178-004-036-111.178.004.pools.vodafone-ip.de) has
    quit: Ping timeout: 245 seconds
*** dmitri (~dima14@cm-171-100-77-208.revip10.asianet.co.th) has joined
    channel #haskell                                                    [14:46]
<dminuoso> jusss: So I think you might have confused yourself too much, let's
           take the time and take a step backwards.
*** cynick (~worm@ec2-52-206-86-1.compute-1.amazonaws.com) has quit: Ping
    timeout: 272 seconds                                                [14:47]
<jusss> dminuoso: when m is e-> in >>=, I have got >>= f g x = g (f x ) x
*** jeltsch (~wolfgang@6558-df23-fa74-c9da-3e80-82b2-07d0-2001.dyn.estpak.ee)
    has joined channel #haskell                                         [14:48]
<dminuoso> jusss:  (>>=) is not somtehing you can just define on the spot.
<jusss> dminuoso: and only when m is e->, I think we can get its function
        definition from its type
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Read
    error: Connection reset by peer
<dminuoso> Ah.
*** cynick (~worm@ec2-52-206-86-1.compute-1.amazonaws.com) has joined channel
    #haskell
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
<dminuoso> jusss: I missed that there was some new talk today. :)       [14:49]
<jusss> dminuoso: yeah, can we get its function definition from its type
<jusss> dminuoso: the answer it seems no
<dminuoso> jusss: We generally can, actually.                           [14:50]
*** matsurago (~matsurago@240b:10:b3a1:1700:ccb8:d63:76d4:1753) has joined
    channel #haskell
<dminuoso> jusss: It's what sometimes called "type tetris"
<jusss> dminuoso: aha, so tell me, >>= :: m a -> (a -> m b) -> m b, what
        function definition you can get?                                [14:51]
*** dmitri (~dima14@cm-171-100-77-208.revip10.asianet.co.th) has quit: Ping
    timeout: 258 seconds
*** encod3 (~encod3@89.20.162.146.static.ef-service.nl) has joined channel
    #haskell
<jusss> dminuoso: just one will be good,
<dminuoso> jusss: The original excercise was about defining >=> in terms of
           >>=
<jusss> even one type may have multiple function definitions
<dminuoso> jusss: Sometimes there may only be one in fact.              [14:52]
*** mnrmnaugh (~mnrmnaugh@unaffiliated/mnrmnaugh) has joined channel #haskell
<dminuoso> jusss: The more general a function is (polymorphism), the less
           implementations it has.
<jusss> dminuoso: and what is >>= ?
<jusss> funtion definition
<dminuoso> jusss: Frequently you may have only one way or few ways to write a
           function that can even type check. It may not always give you a
           precise answer, but it wil tell you "it must be either one of these
           two" - then its just left to you to figure out which one the
           correct is.
<dminuoso> jusss: try implementing a definition for the following functoin:
                                                                        [14:53]
<dminuoso> % f :: a -> (a -> b) -> b; f x y = undefined
<yahb> dminuoso: 
*** Sgeo (~Sgeo@ool-18b98455.dyn.optonline.net) has quit: Ping timeout: 245
    seconds                                                             [14:54]
*** ltriant (~ltriant@210-10-238-100.cust.static-ipl.aapt.com.au) has quit:
    Quit: leaving                                                       [14:55]
<dmwit> For almost every monad I can think of off the top of my head, there is
        more than one implementation of (>>=)'s type that typechecks (though
        perhaps violates the monad laws).
<dminuoso> If you just stare at "what do I need to produce" and "what things
           do I have", there's only a single way you can achive your goal. In
           this particular example its so strong, that there's only one way
           this can type check - and that happens to be the correct
           implementation.
<jusss> dminuoso: l :: a, g :: a->b, so f l g = g l
<dminuoso> jusss: Right. Are you convinced that's the only definition you
           could supply?
<jusss> dminuoso: of course not
<dminuoso> (Note that any forms of undefined/bottom/infinite recursion do not
           count)
<dminuoso> jusss: Then convince yourself.
<jusss> dminuoso: add :: Int -> Int,  add x =x and add x = x+1 both have add
        :: Int -> Int                                                   [14:56]
*** Ariakenom (~Ariakenom@h-158-174-187-106.NA.cust.bahnhof.se) has quit: Ping
    timeout: 268 seconds
<dminuoso> jusss: You are absolutely correct.
<dminuoso> jusss: The key thing to understand is that ⌜add⌝ is specialized to
           some types.
*** mountaingoat (mountaingo@gateway/vpn/privateinternetaccess/mountaingoat)
    has joined channel #haskell                                         [14:57]
<jusss> dminuoso: like I said, one type may have multiple function definitions
*** dmitri (~dima14@ppp-58-11-25-121.revip2.asianet.co.th) has joined channel
    #haskell
<jusss> dminuoso: but the question is, can we get at least one fit function
        from its type
<dminuoso> jusss: How many implementations for ⌜Integer -> Integer⌝ do you
           think there exist?
<dmwit> I side with jusss: one type may have multiple definitions. I side with
        dminuoso: this does not imply that `a -> (a -> b) -> b` has multiple
        function definitions.                                           [14:58]
*** KeyJoo (~KeyJoo@46.249.4.107) has quit: Quit: KeyJoo
<dmwit> But mostly I side with myself: the whole discussion is weird, because
        dminuoso appears to care about proving uniqueness for a type that is
        not the one jusss asked about in the first place.
<dminuoso> dmwit: Well in honesty, the problem arised when I tasked them to
           implement (>=>) in terms of (>>=) by just using the types involved.
                                                                        [14:59]
<jusss> dminuoso: infinite
<dmwit> There are infinitely many type-correct implementations of (>=>).
                                                                        [15:00]
<dminuoso> dmwit: In terms of (>>=) too? 
<dmwit> Yes.
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
*** lastmanstanding (~arjoonn@103.79.223.74) has quit: Ping timeout: 244
    seconds
<jusss> dmwit: so I care about can we get at least one fit  function from its
        type                                                            [15:01]
<dminuoso> dmwit: How?
<dmwit> create :: Monad m => Positive -> (a -> m b) -> (b -> m c) -> (a -> m
        c); create 1 f g a = f a >>= g; create n f g a = f a >>= \_ -> create
        (n-1) f g a                                                     [15:02]
<dminuoso> dmwit: We were assuming it to be completely generalized.
<dmwit> That type is completely generalized.
*** tromp_ (~tromp@2a02:a210:1585:3200:508:3140:aa4d:83d6) has quit: Remote
    host closed the connection                                          [15:03]
*** chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499) has joined channel
    #haskell
<dminuoso> dmwit: But that's effectively still the same as the canonical
           definition, isnt it?
<dmwit> No.
<dmwit> create 2 f g a runs f a twice.
<dminuoso> Oh.                                                          [15:04]
<dmwit> There are more definitions, too.
<dminuoso> dmwit: fair enough, I can see what you are getting at
<dminuoso> dmwit: Anyway, uniqueness was not the point actually.
<dminuoso> dmwit: I was just building up to the intuition that you can rule
           out classes of "you cant do this" and "at the very least you have
           to do that"
<dminuoso> Anyway. This got sidetracked a lot.                          [15:05]
<dmwit> Like I said: the whole discussion is weird.
*** ilikeheaps (~sushi@176.120.120.135.telemedia.pl) has quit: Quit:
    Konversation terminated!
<dminuoso> dmwit: What do you propose instead?                          [15:06]
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
<dmwit> jusss: In the presence of RankNTypes or typeclasses I believe it is
        undecidable whether a given type signature is inhabited.
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection                                          [15:07]
<dminuoso> Because it is my stance that, using basic principles of
           parametricity, you can guide yourself to the correct implementation
           by "following the types"
<jusss> dmwit: and?
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
<dmwit> ...and that answers your question: "Can we get at least one fit
        function from its type?" "No, there is no algorithm which can reliably
        do that."                                                       [15:08]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
<jusss> dmwit: good, at least I got an answer
<MarcelineVQ> what is 'it' here?
<dminuoso> I understood jusss' question in the context of the discussions
           we've been having over the past few days. Yesterday they failed to
           implement (>>=) in terms of (>=>) (being told to follow the types),
           asking "how can I use the types to find the implementation"  [15:09]
*** acidjnk (~acid@i577BCAE8.versanet.de) has joined channel #haskell
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Read error: Connection
    reset by peer
*** acidjnk (~acid@i577BCAE8.versanet.de) has left channel #haskell: #haskell
*** acidjnk (~acid@i577BCAE8.versanet.de) has joined channel #haskell
<dmwit> MarcelineVQ: I think a fixed version of the question is "Is there an
        algorithm which takes a type as input and spits out an implementation
        of that type (or says it's unimplementable)?".
<jusss> dmwit: or in which conditions it is decidable whether a given type
        signature is inhabited?
<dminuoso> dmwit: You seem to have understood it as a more generalized
           question "can you do this in a strict sense at all"
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell   [15:10]
*** tromp (~tromp@2a02:a210:1585:3200:fce9:72fe:a621:4882) has joined channel
    #haskell
*** tromp_ (~tromp@2a02:a210:1585:3200:1da3:c66a:f0a2:1010) has joined channel
    #haskell                                                            [15:11]
<MarcelineVQ> dmwit: ok, just wanted to make sure that was the topic, since
              another 'it' could be "can we find one fit function from the
              type of >=>"                                              [15:12]
<jusss> dmwit: "Is there an algorithm which takes a type as input and spits
        out an implementation of that type (or says it's unimplementable)?"
        yeah, is there a way to describe the relation between type and
        function ?
<dminuoso> jusss: Anyway. The point I was getting at, is that (>>=) is
           universally quantified a lot, which greatly limits the ways you can
           implement it. So if you get something that typechecks, its likely
           to be correct or at the very least a good starting point.
*** lastmanstanding (~arjoonn@103.79.223.74) has joined channel #haskell
<dmwit> There is a relation between terms and types, and we have an algorithm
        for checking whether a particular pair is in the relation.
*** thjread (~thjread@173.213.233.35.bc.googleusercontent.com) has quit: Quit:
    ZNC - https://znc.in                                                [15:13]
<dminuoso> But perhaps I was wrong and you just care to understand type theory
           better. :)
*** thjread (~thjread@173.213.233.35.bc.googleusercontent.com) has joined
    channel #haskell
*** xff0x (~fox@210.57.57.162) has joined channel #haskell
<jusss> dminuoso: I have known nothing about type theory yet ...        [15:14]
*** tromp (~tromp@2a02:a210:1585:3200:fce9:72fe:a621:4882) has quit: Ping
    timeout: 252 seconds
*** reactormonk (~tass@ip5f5bf7a2.dynamic.kabel-deutschland.de) has quit: Ping
    timeout: 258 seconds
*** tromp_ (~tromp@2a02:a210:1585:3200:1da3:c66a:f0a2:1010) has quit: Ping
    timeout: 252 seconds                                                [15:15]
<jusss> dminuoso: the original question is can we get >>= through >=> and
        return, then I found I can't even implement for >>= ... 'cause when m
        is e->, I don't know how to implemnet                           [15:16]
*** tsaka_ (~torstein@dslb-178-004-036-111.178.004.pools.vodafone-ip.de) has
    joined channel #haskell
<jusss> when m is not e->
<dmwit> "in which conditions it is decidable whether a given type signature is
        inhabited?" For rank-1 types only and no typeclasses, djinn is such a
        decision procedure.
<dminuoso> jusss: Right! And that's what Im getting at, you cant know what m
           is because its quantified over.
<dmwit> Bute you were told this earlier and didn't like it, so...?      [15:17]
<dminuoso> jusss: Your implementation must work with *all* choices of m.
<jusss> if m is Maybe, then >>= :: Maybe a -> (a -> Maybe b) -> Mabye b, so
        how to implement a function for this type? the answer is no
<dmwit> jusss: But you are not being asked to implement >>=. You are being
        asked to implement >=> under the assumption that *somebody else* has
        implemented >>=.
<dmwit> Wait. The answer to that is not no. But the answer to that is also not
        relevant to dminuoso's exercise.                                [15:18]
*** nineonin_ (~nineonine@con08-vpn.calabrio.com) has quit: Remote host closed
    the connection
<jusss> aha
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell
<MarcelineVQ> just curiousity, it's not important, but who asked you to use
              >=> and return to write >>= or where did you see that as an
              exercise?                                                 [15:19]
<dminuoso> MarcelineVQ: I did, possibly under the assumption they were ready
           for it.
<dminuoso> Perhaps I was wrong.
<jusss> dmwit: my question was can we implement >>= by >=> and return ,  of
        course >>= is not implemented 
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has joined
    channel #haskell                                                    [15:20]
<jusss> dmwit: so how to implement for >>= :: Maybe a -> (a -> Maybe b) ->
        Mabye b
<jusss> you said "The answer to that is not no"                         [15:21]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
<dmwit> 1. The type Maybe a -> (a -> Maybe b) -> Maybe b is inhabited. 2. That
        isn't relevant for the exercise.
<dminuoso> jusss: Here's the thing: it doesnt matter 
*** tromp (~tromp@ip-213-127-58-74.ip.prioritytelecom.net) has joined channel
    #haskell
<dminuoso> jusss: The implementation is the same for m ~ Maybe, as it is for m
           ~ IO. It's not about what m could be.
<dminuoso> jusss: That's what the quantification over m means, you must
           provide a single implementation that works for all possible choices
           of m                                                         [15:22]
<jusss> dminuoso: wait a sec, when m is e->, we asssume x is e, so we f ::
        e->b   f x :: b can get b
<jusss> dminuoso: but when it's Maybe, how to get that a which is in Maybe a
                                                                        [15:23]
<dmwit> jusss: Instead of using e-> and Maybe-specific operations, you should
        use >=>.
*** sektor (~sektor@95.87.234.241) has joined channel #haskell
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
<jusss> :t >=>
<lambdabot> error: parse error on input ‘>=>’                         [15:24]
<dmwit> :t (>=>)
<lambdabot> Monad m => (a -> m b) -> (b -> m c) -> a -> m c
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
<jusss> wait a moment, I will try it
<jusss> but I can only assume m is e->
*** BaneAliens (~BaneAlien@cpe-172-91-22-149.socal.res.rr.com) has left
    channel #haskell: "WeeChat 1.7"
<dmwit> (The "e-> specific operation" you used in your previous implementation
        was you applied the function to an argument.)
<dminuoso> jusss: Don't assume it's anything!                           [15:25]
<dmwit> No. You may not assume that m is e->.
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has quit:
    Ping timeout: 250 seconds
<jusss> dminuoso: dmwit then I don't know how to get b in m b
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Ping
    timeout: 248 seconds
<dminuoso> You cant know what m is going to be picked, period. All you know is
           that it must satisfy ⌜Monad m⌝, nothing more.
<dminuoso> jusss: Good!
<dminuoso> jusss: That's the first step.
<dminuoso> You cant in genreal.
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Read error: Connection
    reset by peer
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell   [15:26]
<jusss> then I can't do implement  for it
<jusss> or can I?
<dminuoso> 09:24:17       dmwit | jusss: Instead of using e-> and
           Maybe-specific operations, you should use >=>.
<jusss> dminuoso: I don't understand                                    [15:27]
<jusss> use >=> as m ?
<dmwit> jusss: To avoid type variable name clashes, let's write the type
        signatures `(>>=) :: Monad m => m a -> (a -> m b) -> m b` and `(>=>)
        :: Monad n => (c -> n d) -> (d -> n e) -> (c -> n e)` instead. Okay?
<jusss> ok]
*** ralejs (~ralejs@2620:10d:c092:180::1:a40f) has quit: Quit: My MacBook has
    gone to sleep. ZZZzzz…
*** v01d4lph_ (~v01d4lph4@125.16.234.60) has joined channel #haskell    [15:28]
<dmwit> Okay. Then one way to get your hands on an `m b` would be to pick `n ~
        m` and `e ~ b`, then try to figure out what this means you would have
        to supply as the first three arguments to `(>=>)`.
<dmwit> (Do you know what I mean when I write the syntax `n ~ m`? If not, I
        can say it another less precise but more approachable way.)     [15:29]
*** bolichep (~bolichep@2802:8000:2707:5100:f8f1:13e5:d45b:872) has joined
    channel #haskell                                                    [15:30]
<jusss> n equal m?
*** v01d4lph4 (~v01d4lph4@125.16.234.60) has quit: Ping timeout: 248 seconds
<jusss> no                                                              [15:31]
<dmwit> yes
<dmwit> uh oh =)
*** xff0x (~fox@210.57.57.162) has quit: Ping timeout: 244 seconds
*** comerijn (~merijn@145.100.116.2) has joined channel #haskell        [15:32]
*** travis_ (~travis@cpe-108-185-149-115.socal.res.rr.com) has joined channel
    #haskell
<jusss> I think maybe I did this befor, but I forget the rules...       [15:33]
*** keep_learning_M (~keep_lear@150.203.68.26) has quit: Quit: This computer
    has gone to sleep
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has joined
    channel #haskell
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell
<jusss> I maybe eavl fmap . fmap's type                                 [15:34]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Remote
    host closed the connection
<jusss> :t (fmap . fmap)
*** merijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 245
    seconds
<lambdabot> (Functor f1, Functor f2) => (a -> b) -> f1 (f2 a) -> f1 (f2 b)
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has joined channel
    #haskell
<dminuoso> jusss: It has occured to me, that perhaps I overestimated your
           progress. We could simplify the task to a similar but simpler
           version of it.                                               [15:35]
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell   [15:36]
*** travis_ (~travis@cpe-108-185-149-115.socal.res.rr.com) has quit: Ping
    timeout: 248 seconds                                                [15:37]
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
<jusss> dminuoso: ok
*** zaquest (~notzaques@gw-mig-service.ll-nsk.zsttk.ru) has joined channel
    #haskell
*** cfricke (~cfricke@unaffiliated/cfricke) has quit: Quit: WeeChat 2.5
                                                                        [15:38]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Ping timeout: 264 seconds
<dminuoso> jusss: You could try to implement ⌜fmap⌝ in terms of ⌜<*>⌝ and
           ⌜pure⌝, perhaps.
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell
*** dansho (~dansho4@71-84-161-204.dhcp.astr.or.charter.com) has quit: Remote
    host closed the connection                                          [15:39]
*** pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit: Ping timeout: 252
    seconds
*** rsoeldner (~rsoeldner@195.145.101.20) has quit: Remote host closed the
    connection
*** sQVe (~sQVe@unaffiliated/sqve) has joined channel #haskell
<jusss> :t (<*>)
<lambdabot> Applicative f => f (a -> b) -> f a -> f b
<jusss> :t pure                                                         [15:40]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Ping
    timeout: 252 seconds
<lambdabot> Applicative f => a -> f a
<dminuoso> That is, implement a function that has the same type signature of
           fmap - it should also behave the same way as the original fmap, but
           we will cover that later.
<dminuoso> Using nothing but ⌜<*>⌝ and ⌜pure⌝                           [15:41]
<jusss> :t fmap
<dminuoso> Note there will be a slight difference because it will have a
           different constraint Applicative instead of Functor, we shall gloss
           over that.
<lambdabot> Functor f => (a -> b) -> f a -> f b
<dminuoso> So you must implement: ⌜myApplFmap :: Applicative f => (a -> b) ->
           f a -> f b⌝ using only ⌜<*>⌝ and ⌜pure⌝ as external tools.   [15:42]
<jusss> I need a little time                                            [15:43]
*** ___laika (~laika@99-0-83-18.lightspeed.sntcca.sbcglobal.net) has joined
    channel #haskell
*** Zer0xp (~chr15@106.51.73.242) has joined channel #haskell
*** petersen (~petersen@redhat/juhp) has quit: Ping timeout: 244 seconds
                                                                        [15:44]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote host
    closed the connection                                               [15:45]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has quit: Quit: My MacBook
    has gone to sleep. ZZZzzz…
<jusss> f :: a->b                                                       [15:50]
<jusss> a :: a->b                                                       [15:51]
<jusss> pure :: a -> b
*** wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has joined channel
    #haskell                                                            [15:52]
*** jose_zap (~jose_zap@176-20-96-236-dynamic.dk.customer.tdc.net) has joined
    channel #haskell
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [15:53]
<jusss> dminuoso: sorry, I don't know the way
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** ralejs (~ralejs@2620:10d:c092:180::1:a40f) has joined channel #haskell
                                                                        [15:54]
<Axman6> start with what you do know: myApplFmap :: Applicative f => (a -> b)
         -> f a -> f b. so we know it's going to look like: myApplFmap
         funcAtoB fOfA = ...                                            [15:55]
<Axman6> fOfA :: f a
<Axman6> funcuAtoB :: (a -> b)
*** reactormonk (~tass@185.85.220.200) has joined channel #haskell
*** dmitri (~dima14@ppp-58-11-25-121.revip2.asianet.co.th) has quit: Quit:
    This computer has gone to sleep
<Axman6> pure :: x -> f x                                               [15:56]
<jusss> Axman6: but that a or b , how I can get them from f a or f b
<Axman6> (<*>) :: f (i -> j) -> f i -> f j
*** wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) has quit: Ping
    timeout: 272 seconds
*** thc202 (~thc202@unaffiliated/thc202) has joined channel #haskell
<Axman6> what happens if you pass funcAtoB to pure? what is the type of the
         result?                                                        [15:57]
*** osa1_ (~omer@haskell/developer/osa1) has joined channel #haskell
<jusss> pass funcuAtoB to pure will get f (a -> b)                      [15:58]
<Axman6> yes!
*** comerijn (~merijn@145.100.116.2) is now known as merijn
<Axman6> does that look like something else we need?
<jusss> but I want get a or b from f a or f b
<Axman6> no, you want to get f b from f (a -> b) and f a                [15:59]
<jusss> no?
<Axman6> our goal is to get f b isn';t it?
<Axman6> myApplFmap :: Applicative f => (a -> b) -> f a -> f b          [16:00]
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has quit: Quit:
    Going to… sle… ep.
<jusss> ok                                                              [16:01]
<jusss> f fOfA funcuAtoB :: f b = ?                                     [16:02]
<jusss> pure funcuAtoB :: f (a->b)                                      [16:03]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has joined channel #haskell
                                                                        [16:05]
*** Pausenbrot (~Pausenbro@dslb-094-220-029-240.094.220.pools.vodafone-ip.de)
    has joined channel #haskell                                         [16:06]
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has joined channel
    #haskell
<jusss> when a is x, fOfA :: f x, pure x = f x = fOfA
<__Myst__> Is the `liftM` family of functions useful for anything? It seems to
           me like their job is already done by the Functor and Applicative
           side of things
*** ralejs_ (~ralejs@85.255.236.164) has joined channel #haskell
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has quit: Remote
    host closed the connection                                          [16:07]
*** ralejs (~ralejs@2620:10d:c092:180::1:a40f) has quit: Ping timeout: 250
    seconds
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell
<Rembane> __Myst__: They were more useful before Applicative was found. Now
          they are imo mostly a historical artifact.                    [16:09]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Client
    Quit
*** xff0x (~fox@210.57.57.162) has joined channel #haskell
<__Myst__> Rembane: Ah. In which temple was Applicative found?
*** whald (~whald@2a02:810a:8140:22f7:c97f:a8bd:408b:7c63) has quit: Quit:
    Leaving                                                             [16:10]
<MarcelineVQ> the mottled temple of mcbride and paterson
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [16:11]
<Rembane> __Myst__: What MarcelineVQ said. There's more about it here:
          http://www.staff.city.ac.uk/~ross/papers/Applicative.pdf
<Axman6> We knew about Monad before we knew that Applicative fit between it
         and Functor
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote host
    closed the connection
<merijn> __Myst__: In the past Applicative was not a superclass of Monad,
         therefore you weren't always allowed to use Applicative functions
         with any random Monad
*** jose_zap (~jose_zap@176-20-96-236-dynamic.dk.customer.tdc.net) has quit:
    Quit: My MacBook has gone to sleep. ZZZzzz…                        [16:12]
<merijn> __Myst__: A few years ago, this gigantic historical mistakes was
         rectified, but deleting all the liftM functions now would break old
         code using them for no real reason
<tdammers> or, a more practical problem, if you wanted to use Applicative
           methods in a function that you parametrized over some Monad m, you
           would have to add an Applicative constraint as well
<merijn> tdammers: That was what I meant, but was too lazy to write ;)  [16:13]
<tdammers> so you'd have a lot of functions with signatures like (Functor m,
           Applicative m, Monad m) => ... -> m a
<merijn> tdammers: Nuhuh :p
<mniip> applicative was always a subclass of functor
<tdammers> whereas today you can just write Monad m => ... -> m a
<merijn> tdammers: Functor was always a superclass of Applicative ;)
<tdammers> ah yes, right
* tdammers 's memory had a habit of exaggerating things for dramatic effect
                                                                        [16:14]
<merijn> __Myst__: So the answer to "are they useful for anything?" is "No,
         but we keep them around to avoid gratuitously breaking existing
         codebases"
*** acidjnk (~acid@i577BCAE8.versanet.de) has quit: Ping timeout: 245 seconds
<gentauro> anybody will be at ICFP upcoming week?                       [16:16]
<Axman6> One year I'll go to ICFP :(
<gentauro> Axman6: I had to go this year cos Berlin                     [16:17]
<gentauro> I mean, it's so close to CPH :D
<lihram> What are tickets like from CPH to Berlin?
<gentauro> lihram: Athas and me are going for the night train           [16:18]
<gentauro> so it's a bit more expensive that flying (you can get it as low as
           less than a 100 EUR)
<tdammers> depends on the flight though                                 [16:19]
<lihram> Oh, through Jylland?
<lihram> makes sense
<gentauro> yeah
<merijn> I was to busy to talk my boss into paying for me to go >.> But I hear
         carter is visiting NL after ICFP
<gentauro> I'm a bit "meh" cos I wanted to go over the "boat" to buy british
           sweets (<3 them)
<__Myst__> ty 
<tdammers> and at least to me, time on a train isn't lost the way time driving
           or flying is
<gentauro> tdammers: that's a good point                                [16:20]
*** darjeeling_ (~darjeelin@111.196.70.96) has quit: Ping timeout: 244 seconds
<gentauro> tdammers: we just thought that we have to sleep, so why not use
           that time on a train :)
*** darjeeling_ (~darjeelin@111.196.70.96) has joined channel #haskell
<tdammers> yeah, exactly
*** Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit: Ping
    timeout: 245 seconds
<tdammers> I'd want that to be a proper sleeper train though, trying to sleep
           in regular train seats is not fun                            [16:21]
<tdammers> did that for last year's zurihac, but ended up basically not
           sleeping at all that night
<gentauro> tdammers: yeah, that's what we are looking forward to tonight ...
<Rembane> gentauro: Bring a really boring, recorded lecture. 
<tdammers> this year I took a regular daytime train; the ride takes 8 hours,
           but those were 8 very productive hours, so that's fine by me
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection                                          [16:22]
<gentauro> tdammers: now with EU and romaing it's actually doable
<gentauro> Rembane: why? xD
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
<tdammers> gentauro: yeah, that's exactly what I did
<tdammers> except of course that Switzerland isn't EU, so I had to splurge a
           little                                                       [16:23]
<Rembane> gentauro: I sleep my best sitting at lectures, so I just assume that
          everyone else does too. :D
<tdammers> for munihac I will be flying, but it was a close call
*** Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined
    channel #haskell
<gentauro> tdammers: you live in NL right?                              [16:24]
<tdammers> yeah
*** liberiga (~liberiga@gateway/tor-sasl/liberiga) has joined channel #haskell
<lihram> Anyone know why stack complains about hidden packages when they've
         been added via stack.yaml's extra-deps?                        [16:25]
<gentauro> Rembane: xD (then I will bring some snooker from Eurosport)
<gentauro> lihram: it's normally dependencies that you haven't addded
<tdammers> what I hate the most about flying is that you spend so much time
           not flying, but also not doing any other useful things
<Rembane> gentauro: Sweet! Good luck! :)                                [16:26]
<merijn> tdammers: Word.                                                [16:27]
<lihram> gentauro: Right, so if I've included e.g. unordered-containers in my
         extra-deps, I should be able to import Data.HashMaps.Lazy, no?
<merijn> ICE to germany is pretty good, though
<tdammers> so for a 1-hour flight, you might actually be occupied for 5 hours
           straight, and there's hardly any of that time that can be used
           productively
<lihram> It says I should include the deps in my cabal file, but I thought the
         point of stack.yaml was so that you wouldn't have to manage
         dependencies via cabal
*** Ariakenom (~Ariakenom@h-208-40.A163.corp.bahnhof.se) has joined channel
    #haskell                                                            [16:28]
<Rembane> lihram: You still use the cabal file for adding dependencies. The
          stack.yaml file is very seldom touched. 
<merijn> lihram: No, stack.yaml means not having to manage *versions* of
         dependencies
<gentauro> lihram: have you tried to add it as a package dependency? I
           normally do that ...
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell
<merijn> lihram: My (the?) Stack/Cabal disambiguation guide:
         https://gist.github.com/merijn/8152d561fb8b011f9313c48d876ceb07
<lihram> in the .cabal file, then?                                      [16:29]
<tdammers> merijn: yeah, I like ICE. they have power outlets and somewhat
           working internet, and unlike regional trains, DB prioritizes the
           ICE business, so they tend to be somewhat reliable
<merijn> lihram: Stack is not independent of .cabal files (unless you use
         package.yaml, which 1) you shouldn't and 2) I guess it still depends
         on .cabal file, but an autogenerated one)
<gentauro> `power outlets` <- for the win !!!
<MarcelineVQ> in fact the stack docs relate the distinction
              https://docs.haskellstack.org/en/stable/stack_yaml_vs_cabal_package_file/
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
                                                                        [16:30]
<lihram> Ahhh... right. Okay, fair enough                               [16:31]
*** v01d4lph_ (~v01d4lph4@125.16.234.60) has quit: Remote host closed the
    connection
*** v01d4lph4 (~v01d4lph4@125.16.234.60) has joined channel #haskell    [16:32]
*** sQVe (~sQVe@unaffiliated/sqve) has quit: Quit: Bye!
<tdammers> stack does incentivize the use of pathological .cabal files though
           (ones without version bounds)                                [16:33]
<lihram> IT WORKS                                                       [16:34]
<lihram> thanks guys
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has joined
    channel #haskell
<merijn> tdammers: Yes, and that annoys me greatly >.<                  [16:35]
*** nullifidian_ (~nullifidi@unaffiliated/nullifidian) has joined channel
    #haskell
*** ralejs_ (~ralejs@85.255.236.164) has quit: Quit: My MacBook has gone to
    sleep. ZZZzzz…
*** nullifidian__ (~nullifidi@unaffiliated/nullifidian) has quit: Read error:
    Connection reset by peer
*** chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499) has quit: Remote host
    closed the connection                                               [16:36]
<merijn> tdammers: But I try and pick my battles, if I can just at least get
         people to stop using hpack my life will already be easier :)
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** lambda-11235 (~lambda-11@207.183.239.54) has quit: Quit: Bye
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has joined
    channel #haskell                                                    [16:37]
*** zacts (~zacts@dragora/developer/zacts) has joined channel #haskell
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Ping
    timeout: 252 seconds                                                [16:38]
<maerwald> merijn: hpack is fine if people commit their .cabal files
<merijn> maerwald: Yeah, but they don't and once you do that, hpack just
         becomes "cabal files with extra steps"                         [16:39]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Ping timeout: 250 seconds
<lortabac> to be fair, stack provides a command to generate the bounds before
           uploading a package to Hackage
<lortabac> the "pathological" .cabal files are not meant to be published
<merijn> lortabac: "aren't meant to be" and "what people actually do" are,
         unfortunately, mostly unrelated :)                             [16:40]
<lortabac> merijn: fair point :)
*** matsurago (~matsurago@240b:10:b3a1:1700:ccb8:d63:76d4:1753) has quit:
    Quit: Leaving                                                       [16:41]
*** sQVe (~sQVe@195.178.165.170) has joined channel #haskell
*** sQVe (~sQVe@195.178.165.170) has quit: Changing host
*** sQVe (~sQVe@unaffiliated/sqve) has joined channel #haskell
*** yyy- (~yyy@unaffiliated/tinnotl) has joined channel #haskell
<MarcelineVQ> merijn: are you telling me that author: Author name here
              maintainer: example@example.com aren't real people!?      [16:42]
<merijn> MarcelineVQ: :p
*** errst (~errst@188.58.217.24) has joined channel #haskell            [16:43]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote host
    closed the connection                                               [16:44]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** jakobhillerstrom (~jakobhill@h-74-117.A137.corp.bahnhof.se) has joined
    channel #haskell                                                    [16:45]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has quit: Quit: My MacBook
    has gone to sleep. ZZZzzz…                                         [16:46]
*** osa1_ (~omer@haskell/developer/osa1) is now known as osa1
*** ktonga (~quassel@gen-119-17-171-125.ptr4.otw.net.au) has quit: Ping
    timeout: 272 seconds                                                [16:47]
*** wonko7 (~wonko7@lfbn-1-12367-net.w90-91.abo.wanadoo.fr) has joined channel
    #haskell
<Rembane> MarcelineVQ: I must change my name to "Author name here" and start
          claiming packages. :D
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell                                                    [16:48]
*** nullifidian_ (~nullifidi@unaffiliated/nullifidian) has quit: Read error:
    Connection reset by peer                                            [16:50]
*** nullifidian_ (~nullifidi@unaffiliated/nullifidian) has joined channel
    #haskell
*** v01d4lph4 (~v01d4lph4@125.16.234.60) has quit: Remote host closed the
    connection                                                          [16:51]
*** dmitri (~dima14@ppp-58-11-25-121.revip2.asianet.co.th) has joined channel
    #haskell
*** p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has quit: Ping
    timeout: 252 seconds
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Remote
    host closed the connection                                          [16:52]
*** v01d4lph4 (~v01d4lph4@125.16.234.60) has joined channel #haskell
*** cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has joined
    channel #haskell
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has joined channel
    #haskell
*** p0lyph3m (~p0lyph3m@2a02:810d:640:776c:76d7:55f6:f85b:c889) has joined
    channel #haskell                                                    [16:53]
*** Fischmiep (~Fischmiep@2a04:4540:6506:ba00:6493:8054:e442:e96a) has quit:
    Quit: WeeChat 2.5
*** liberiga (~liberiga@gateway/tor-sasl/liberiga) has quit: Ping timeout: 260
    seconds                                                             [16:54]
*** t7 (~tommo@2a00:23c5:1284:fc00:1c1e:bedc:1871:1491) has joined channel
    #haskell
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [16:55]
* hackage fast-builder 0.1.1.0 - Fast ByteString Builder
  https://hackage.haskell.org/package/fast-builder-0.1.1.0 (AkioTakano)
                                                                        [16:56]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has joined channel #haskell
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Ping
    timeout: 252 seconds                                                [16:57]
*** qbeek (~qbeek@2a01:e35:2e27:320:a0b9:e76c:94c1:af88) has joined channel
    #haskell
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection                                          [16:58]
*** tadeo (~tadeo@89.249.74.218) has quit:                              [17:00]
*** Sgeo (~Sgeo@ool-18b98455.dyn.optonline.net) has joined channel #haskell
                                                                        [17:01]
*** huxing (~huxing@140.99.97.34.bc.googleusercontent.com) has quit: Remote
    host closed the connection                                          [17:02]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell
*** acidjnk (~acid@i577BCAE8.versanet.de) has joined channel #haskell   [17:03]
*** acidjnk (~acid@i577BCAE8.versanet.de) has left channel #haskell: #haskell
*** acidjnk (~acid@i577BCAE8.versanet.de) has joined channel #haskell
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 245
    seconds                                                             [17:05]
<jgt> Rembane: reminds me of this:
      https://www.wired.com/story/null-license-plate-landed-one-hacker-ticket-hell/
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has joined channel
    #haskell                                                            [17:06]
<Rembane> jgt: Ouch! :D                                                 [17:07]
*** chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499) has joined channel
    #haskell                                                            [17:08]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Quit:
    Going to… sle… ep.                                                [17:11]
*** v0d1ch (uid304491@gateway/web/irccloud.com/x-ctknjawzozuwgcef) has joined
    channel #haskell                                                    [17:12]
*** ubert (~ub@ip5b40e0e2.dynamic.kabel-deutschland.de) has joined channel
    #haskell
*** zacts (~zacts@dragora/developer/zacts) has quit: Quit: WeeChat 2.4  [17:13]
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has joined
    channel #haskell
*** huxing_ (~huxing@140.99.97.34.bc.googleusercontent.com) has joined channel
    #haskell                                                            [17:16]
*** smakarov (~user@217.12.249.74) has quit: Quit: Leaving
*** ravenous_
    (~ravenousm@ptr-cud5aqekwsjnpq19k5w.18120a2.ip6.access.telenet.be) has
    joined channel #haskell
*** huxing (~huxing@90.184.167.107.bc.googleusercontent.com) has quit: Ping
    timeout: 245 seconds                                                [17:17]
*** Pausenbrot (~Pausenbro@dslb-094-220-029-240.094.220.pools.vodafone-ip.de)
    has quit: Remote host closed the connection
*** acidjnk (~acid@i577BCAE8.versanet.de) has quit: Ping timeout: 245 seconds
*** smakarov (~user@217.12.249.74) has joined channel #haskell          [17:18]
*** enoq (~enoq@2a02:8388:6a87:b080:649f:9456:c1b1:28e4) has joined channel
    #haskell                                                            [17:19]
*** Philantrop1 (~Philantro@141.98.101.133) has joined channel #haskell
*** mnrmnaugh (~mnrmnaugh@unaffiliated/mnrmnaugh) has quit: Ping timeout: 244
    seconds                                                             [17:21]
*** ravenous_
    (~ravenousm@ptr-cud5aqekwsjnpq19k5w.18120a2.ip6.access.telenet.be) has
    quit: Ping timeout: 264 seconds
*** sQVe (~sQVe@unaffiliated/sqve) has quit: Quit: Bye!                 [17:22]
*** sQVe (~sQVe@unaffiliated/sqve) has joined channel #haskell          [17:23]
*** mnrmnaugh (~mnrmnaugh@unaffiliated/mnrmnaugh) has joined channel #haskell
                                                                        [17:24]
*** tsaka_ (~torstein@dslb-178-004-036-111.178.004.pools.vodafone-ip.de) has
    quit: Ping timeout: 272 seconds
*** oish (~charlie@host81-130-206-144.in-addr.btopenworld.com) has joined
    channel #haskell                                                    [17:27]
*** plutoniix (~q@175.176.222.7) has joined channel #haskell
*** xff0x (~fox@210.57.57.162) has quit: Quit: xff0x                    [17:30]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** travis_ (~travis@cpe-108-185-149-115.socal.res.rr.com) has joined channel
    #haskell                                                            [17:32]
*** pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined channel #haskell
                                                                        [17:34]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has joined
    channel #haskell                                                    [17:35]
*** travis_ (~travis@cpe-108-185-149-115.socal.res.rr.com) has quit: Ping
    timeout: 248 seconds                                                [17:37]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has quit: Quit: My MacBook
    has gone to sleep. ZZZzzz…
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** catsup (d@ps38852.dreamhostps.com) has quit: Read error: Connection reset
    by peer
*** catsup_ (d@ps38852.dreamhostps.com) has quit: Read error: Connection reset
    by peer
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [17:38]
*** catsup (d@ps38852.dreamhostps.com) has joined channel #haskell
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has joined channel #haskell
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Ping timeout: 250 seconds                                           [17:39]
*** o1lo01ol1o (~o1lo01ol1@152.80.136.95.rev.vodafone.pt) has quit: Remote
    host closed the connection                                          [17:40]
*** vonfry (~vonfry@85.203.46.214) has joined channel #haskell
*** vonfry (~vonfry@85.203.46.214) has quit: Client Quit                [17:41]
<tdammers> with hpack, committing cabal files to source control would be
           morally wrong - the whole point of hpack is to turn the .cabal file
           into an intermediate build artifact, and those don't go into source
           control
<merijn> tdammers: Not committing .cabal files is also morally wrong, ergo
         hpack is morally wrong ;)
<jgt> tdammers: I like merijn's line of reasoning on hpack vs cabal     [17:42]
*** kritzefitz (~kritzefit@2003:5b:203b:100:6e0b:84ff:feb4:9eaf) has joined
    channel #haskell
<jgt> hpack has fewer features, and less of the market
<tdammers> jgt: a guy I worked with had 8 given names, because his father knew
           the administrative software used for official purposes had 7 fields
           for given names, but the law doesn't put any limits on the number
           of given names
*** oleks (~oleks@188.166.34.97) has joined channel #haskell            [17:43]
<tdammers> merijn: commit whatever you want, as long as the hackage entry has
           a proper .cabal file
*** kritzefitz (~kritzefit@2003:5b:203b:100:6e0b:84ff:feb4:9eaf) has quit:
    Client Quit
<tdammers> but frankly, one way or another I agree on the "don't use hpack"
           sentiment
*** kritzefitz (~kritzefit@2003:5b:203b:100:6e0b:84ff:feb4:9eaf) has joined
    channel #haskell
*** ralejs (~ralejs@2620:10d:c092:200::1:dbcc) has joined channel #haskell
<merijn> tdammers: A number of times I've wanted to patch/fix something in a
         package only to find out the repo didn't have a cabal file and I am,
         frankly, too lazy to install stack or hpack                    [17:44]
<tdammers> IME it doesn't add anything of actual value, just needlessly
           complicates things and fractures the audience (or the ecosystem)
<jgt> tdammers: I'm not sure what the motivation is there. Is it to protect
      his son from law enforcement? Or was it just to be a troll?
<tdammers> jgt: the latter
<jgt> ah. I think we need more of those in the world.
<tdammers> the son was an accident anyway, so maybe the idea was even to
           punish him for existing
<jgt> …ouch!
<tdammers> for that reason, his first name, pronounced like "michael", is
           actually spelled "maycel"                                    [17:45]
<tdammers> you know, just to make his life a little bit less convenient
<jgt> I sympathise somewhat… My name is Jezen
<jgt> everyone else in my family has a normal name
<tdammers> basically everyone would first pronounce it "my-cell", and then
           he'd have to correct them
<merijn> tdammers: Similarly, someone has asked me to add my package to
         stackage, but they want you to test it builds with stack before
         submitting a PR, so I haven't bothered yet, because that sounds like
         work >.>
<tdammers> "Jezen", pronounced like "jazzin'"? I'm guessing probably not?
<merijn> jgt: Normal names don't save you :p                            [17:46]
<tdammers> merijn: yeah, my yeshql package is still held back from stackage
           due to depending on optparse-applicative < 0.15
<jgt> tdammers: I guess? Except e sounds, rather than a or i.
<tdammers> fwiw, the correct pronunciation of my last name, "Dammers", sounds
           like "dumbass"
<merijn> jgt: I have a perfectly name, but no one outside of the country can
         pronounce it or even spell it right >.>
<tdammers> "merĳn"                                                      [17:47]
<jgt> merijn: I'm imagining a cross between "merry" and "marine"
<tdammers> technically, hardly anyone inside the country spells it correctly
           either
<merijn> jgt: And you'd be very wrong ;)
<jgt> merijn: and I think you probably come from the land of 'Stroop Wafels'
<Taneb> I have an uncommon (in this country) surname that's way too easy to
        misread and assume I'm a supervillain
<jgt> met roomboter bereid
<merijn> tdammers: Yeah, all these damn sloppy programmers and poor support
         for unicode results in stupid things like people thinking my name is
         6 letters long >.>                                             [17:48]
<jgt> oh right! I didn't know that was only one character
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Read
    error: Connection reset by peer
*** dmitri (~dima14@ppp-58-11-25-121.revip2.asianet.co.th) has quit: Quit:
    This computer has gone to sleep
<merijn> It's been 5 all my life and I'll be damned if I'm going to revise my
         opinion to appease shitty software and a bunch of foreigners!
<tdammers> nah, it's those pesky non-English languages insisting on using
           nonexistent letters and putting dots and dashes everywhere
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [17:49]
<tdammers> but seriously, even Dutch culture doesn't agree on whether "ĳ" is
           one letter or two. it's supposed to be one, but routinely gets
           treated as two even in official contexts
*** jose_zap (~jose_zap@office.expressional.com) has joined channel #haskell
<merijn> tdammers: I did get Paradox Interactive to patch Crusader Kings so
         that all Dutch names starting with Ĳ are properly capitalised ;)
                                                                        [17:50]
<tdammers> hmm, now I'm wondering where the ĳ grapheme originated - is it an
           amalgamation of i and j, or is it a dotted y?
<tdammers> ah yes, initial Ĳ... even official government documents and
           websites get this wrong
<merijn> tdammers: That's mostly due to people adopting to the cultural
         hegemony of US software
<tdammers> yeah, I guess                                                [17:51]
<merijn> At least text gets it right
<merijn> Char too, I suppose
<merijn> > text $ toUpper 'ĳ'
<lambdabot>  error:
<lambdabot>      • Couldn't match type ‘Char’ with ‘[Char]’
<lambdabot>        Expected type: String
<merijn> > text . pure $ toUpper 'ĳ'
<lambdabot>  Ĳ
<tdammers> at least German ß can't easily fall prey to that because 1) it
           never occurs in word-initial position, so the capitalization
           question never occurs, and 2) one of the two letters it was
           originally composed of (tall "s") no longer exists in the German
           alphabet
<tdammers> OTOH, I heard learners of German as a second language are routinely
           taught to just use B for ß, which is, frankly, plain wrong and
           looks weird to German eyes                                   [17:52]
<merijn> I tried setting my IRC name right, but freenode only allows ascii
         nicknames :\
<tdammers> "meryn" then
<tdammers> if it's good enough for Afrikaans, then sure it must be good enough
           for English                                                  [17:53]
<merijn> If we're compromosing then at least merÿn :p
<tdammers> that ain't ascii though
<jgt> "merijn (THE IJ IS ACTUALLY ONE CHARACTER YOU FOOLS)"
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Read
    error: Connection reset by peer
<jgt> although that might not fit in my nick sidebar
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [17:54]
<tdammers> I think freenode also has a limit on nick length
<merijn> tdammers: I don't care, I will insist on crashing everyone's shitty
         software until they fix it >.<
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has joined channel #haskell
<tdammers> I love how that article quotes a guy whose legit last name is Null
<merijn> tdammers: I considered adopting merĳn as my email address, but it'd
         make emailing me a bit tricky, I suppose xD
*** inflationova[m] (inflationo@gateway/shell/matrix.org/x-hwiewqvtvwdmrjjv)
    has joined channel #haskell                                         [17:55]
<tdammers> register "ĳn" as a TLD, then you can have me@r.ĳn
<tdammers> I'm sure this will lead to absolutely no problems whatsoever
                                                                        [17:56]
<tdammers> or what about those poor sods who have nothing but a first name
<tdammers> IIRC there are a few thousand people in Brazil alone, whose full
           name is just "João"
*** huxing_ (~huxing@140.99.97.34.bc.googleusercontent.com) has quit: Ping
    timeout: 272 seconds                                                [17:57]
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has quit: Remote host closed the
    connection
<tdammers> or how about those people in backcountry China, whose names contain
           Chinese characters that nobody else (especially not the Unicode
           consortium) even knew existed anymore, so you can't even enter them
           anywhere, let alone get them past validation
<jgt> tdammers: that name sounds more like onomatopoeia than a name
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has joined channel #haskell
<tdammers> jgt: it's the portuguese version of "John", and it's about as
           popular                                                      [17:58]
<jgt> tdammers: like, if you're out surfing and you see a whale breach the
      surface, and you exclaim 'JWOW!!!!"
<jgt> tdammers: I know :P
*** winkill (winkill@to1.hashbang.sh) has quit: Quit: leaving
<tdammers> but yeah, it's kind of a strange combination of sounds
<tdammers> especially the nasalized vowel between two non-nasalized ones
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has joined channel #haskell
                                                                        [18:00]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection                                          [18:01]
*** jose_zap (~jose_zap@office.expressional.com) has quit: Quit: My MacBook
    has gone to sleep. ZZZzzz…
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** Kundry_Wag (~Kundry_Wa@152.249.108.22) has quit: Ping timeout: 258 seconds
                                                                        [18:02]
*** mmfood (~mmfood@h-98-128-132-149.NA.cust.bahnhof.se) has joined channel
    #haskell                                                            [18:04]
*** cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has quit: Ping
    timeout: 264 seconds
*** eiGHttt (~eiGHttt@115.231.100.106) has quit: Ping timeout: 248 seconds
*** fphilipe_ (~phil@81.6.34.65) has quit: Ping timeout: 246 seconds
*** cosimone (~cosimone@2001:b07:ae5:db26:9520:741c:a5e9:2223) has joined
    channel #haskell                                                    [18:05]
<sicklorkin> is there a lens setting that works like fromMaybe i.e. data Foo {
             fooInt :: Int }; let x = Foo 1 ; x & fooInt ??? (Nothing) == 1;
             fooInt ??? (Just 2) == 2                                   [18:07]
<sicklorkin> s/setting/setter
*** Lycurgus (~niemand@98.4.103.219) has joined channel #haskell        [18:08]
*** zerotech (~zerotech@BSN-210-226-244.dynamic.siol.net) has joined channel
    #haskell                                                            [18:09]
*** qbeek (~qbeek@2a01:e35:2e27:320:a0b9:e76c:94c1:af88) has quit: Remote host
    closed the connection                                               [18:10]
*** dmitri (~dima14@ppp-58-11-25-121.revip2.asianet.co.th) has joined channel
    #haskell                                                            [18:11]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Read
    error: Connection reset by peer                                     [18:12]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** m0rphism (~m0rphism@149.172.82.115) has joined channel #haskell
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has quit: Quit: My MacBook
    has gone to sleep. ZZZzzz…
<sicklorkin> `over l (flip fromMaybe m'fooInt)` is what i'm aiming for  [18:13]
<sicklorkin> `over fooInt (flip fromMaybe m'fooInt)`
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Read
    error: Connection reset by peer                                     [18:16]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell
*** equbit[m] (equazenmat@gateway/shell/matrix.org/x-ljdouraissohnlsj) has
    joined channel #haskell                                             [18:24]
*** liberiga (~liberiga@gateway/tor-sasl/liberiga) has joined channel #haskell
                                                                        [18:25]
*** tsaka_ (~torstein@dslb-178-004-036-111.178.004.pools.vodafone-ip.de) has
    joined channel #haskell                                             [18:28]
*** involans (~involans@cpc108959-cmbg20-2-0-cust162.5-4.cable.virginm.net)
    has joined channel #haskell                                         [18:30]
*** cur8or (~cur8or@72canterbury.cybersmart.co.za) has joined channel #haskell
                                                                        [18:31]
<jusss> Axman6: dminuoso I got it, <*> (pure funcuAtoB) fOfA = fmap fOfA
        funcuAtoB                                                       [18:33]
*** comerijn (~merijn@83-160-49-249.ip.xs4all.nl) has quit: Ping timeout: 244
    seconds                                                             [18:34]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has joined
    channel #haskell                                                    [18:36]
*** merijn (~merijn@145.100.116.2) has quit: Ping timeout: 245 seconds
*** acidjnk (~acid@i577BCAE8.versanet.de) has joined channel #haskell
*** acidjnk (~acid@i577BCAE8.versanet.de) has left channel #haskell: #haskell
*** acidjnk (~acid@i577BCAE8.versanet.de) has joined channel #haskell
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [18:38]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** sQVe (~sQVe@unaffiliated/sqve) has quit: Quit: Bye!
*** sQVe (~sQVe@unaffiliated/sqve) has joined channel #haskell          [18:39]
*** heatsink (~heatsink@2600:1700:bef1:5e10:d997:d580:6357:50a4) has quit:
    Ping timeout: 264 seconds                                           [18:40]
*** OnkelTem (~onkeltem@unaffiliated/fantomas) has joined channel #haskell
                                                                        [18:44]
*** Lycurgus (~niemand@98.4.103.219) has quit: Quit: Exeunt             [18:45]
*** nil (~n@monade.li) has quit: Quit: Fairfarren.                      [18:46]
*** laem (~laem@unaffiliated/laem) has quit: Quit: quit
*** laem_ (~laem@unaffiliated/laem) has joined channel #haskell
*** tydeu (4bbd8d92@cpe-75-189-141-146.nc.res.rr.com) has quit: Remote host
    closed the connection                                               [18:50]
*** nil (~n@monade.li) has joined channel #haskell
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [18:51]
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    joined channel #haskell                                             [18:52]
*** Neo--- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Ping
    timeout: 252 seconds
<jusss> j <$> i = (pure j) <*> i                                        [18:53]
*** jose_zap (~jose_zap@office.expressional.com) has joined channel #haskell
                                                                        [18:54]
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    quit: Ping timeout: 245 seconds                                     [18:56]
*** merijn (~merijn@145.100.116.2) has joined channel #haskell          [18:57]
<MarcelineVQ> yes                                                       [18:58]
*** guest278776 (~u@cpc103056-sgyl39-2-0-cust1952.18-2.cable.virginm.net) has
    joined channel #haskell
<jusss> MarcelineVQ: :)
<jusss> :t (>=>)                                                        [19:00]
<lambdabot> Monad m => (a -> m b) -> (b -> m c) -> a -> m c
<jusss> :t (>>=)
<lambdabot> Monad m => m a -> (a -> m b) -> m b
<jusss> :t return
<lambdabot> Monad m => a -> m a
*** ensyde (~ensyde@2600:1702:2e30:1a40:1db:9580:402f:581f) has joined channel
    #haskell                                                            [19:01]
*** rsoeldner (~rsoeldner@195.145.101.20) has joined channel #haskell   [19:03]
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has quit: Remote
    host closed the connection
*** Neo---- (~neo@2a00:ee2:2201:fc00:39d7:2027:cbe5:88a0) has joined channel
    #haskell                                                            [19:04]
*** ravenous_
    (~ravenousm@ptr-cud5aqekwsjnpq19k5w.18120a2.ip6.access.telenet.be) has
    joined channel #haskell                                             [19:05]
<jusss> :t (<=<)
<lambdabot> Monad m => (b -> m c) -> (a -> m b) -> a -> m c
<rsoeldner> Currently I do the db migration while starting my main app which I
            deploy with nixops. Is adding `data-files` to cabal the way to go
            or is there an alternative ?                                [19:06]
<merijn> rsoeldner: What would you add to "data-files"?
*** travis_ (~travis@cpe-108-185-149-115.socal.res.rr.com) has joined channel
    #haskell                                                            [19:07]
<rsoeldner> merijn, sql files so that the `postgresql-simple-migration` can
            pick them                                                   [19:08]
<jusss> MarcelineVQ: but >=> and >>= with return, there's no equal part like
        <$> and <*> have f b, so how to make this equal ?
<merijn> rsoeldner: Are these files static?
*** yyy- (~yyy@unaffiliated/tinnotl) has quit: Ping timeout: 245 seconds
<rsoeldner> merijn, basically it is a directory containing several sql files,
            but the content is static for a build                       [19:09]
*** ravenous_
    (~ravenousm@ptr-cud5aqekwsjnpq19k5w.18120a2.ip6.access.telenet.be) has
    quit: Ping timeout: 264 seconds
<merijn> rsoeldner: data-files is fine as long as they're read only     [19:10]
*** jusss (~user@unaffiliated/jusss) has quit: Quit: ERC (IRC client for Emacs
    26.1)
ERC> 