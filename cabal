
mkdir new_project
cd new_project
cabal v2-init # generate cabal config file
if you package depends on ohter missing packages,
use cabal v2-install them then write them into depends option in your cabal file

copy you_code.hs Main.hs
cabal v2-configure
cabal v2-build
ghc -optl-static Main.hs # to statically linked on alpine, fuck glibc
now you have Main this executable file, you can copy it and run it on
other amd64 linux distro, don't worry about that glibc dynamic linked libraries

cabal install # now install this executable to you system like other commands
or
ln -s /root/.cabal/bin/new_cmd /usr/bin/new_cmd
but those both are dynamic linked version,
so just ln -s ./Main /usr/bin/new_cmd
you can check it with ldd or file, to see if it's statically linked


---------------------------------------


cabal v2-install http-client-tls
then you found
 Could not load module ‘Network.HTTP.Client.TLS’
    It is a member of the hidden package ‘http-client-tls-0.3.5.3’.
    You can run ‘:set -package http-client-tls’ to expose it.
    (Note: this unloads all the modules in the current scope.)
    Use -v to see a list of the files searched for.

so you run `ghc I2T15.hs -package http-client-tls -optl-static`

or make .cabal config file to describe that depends package

vim ./telegram-api.cabal
append 'http-client-tls' into 'build-depends' section,
then cabal v2-build
now you can `ghc -optl-static I2T15.hs` without error
this would output a binary file static linked, 
I ghc this on alpine on docker, use musl to instead of glibc
so this static linked binary file can run on archlinux or debian
it doesn't use glibc, so it doesn't care about glibc version on them

into repl with depend packages

cabal v2-repl --build-depends http-client-tls
cabal v2-repl -b http-client-tls
---------------------------------------------

pacman -S cabal-install
for i in $(pacman -Ss haskell|grep 'community/haskell-'|grep -v 'installed'); do sudo pacman -S $i --noconfirm; done;

mkdir ~/.cabal/store/ghc-8.6.5/package.db
cabal v2-update
cabal install slack-api

ghc need static libraries, but archlinux only contain dynamic libraries,
so ghc won't work on archlinux, and cabal can't install slack-api 
