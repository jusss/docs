on iOS

tap shortcuts app -> < Shortcuts -> Share Sheet -> +
Accepts will get app shared with msg, Shortcut Input will be that msg
Web -> Get Contents of URL can do post/get
and the next action can get the response "Contents of URL" of the post 

so iOS post url, server get the url and download video then use video url as response to iOS
and iOS get contents of contents of url then save contents of url to recents

get contents of from "Web"
save contents of url to recents from "app" -> "photos"



on server

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ScopedTypeVariables #-}
import Network.Wai
import Network.Wai.Parse
import Network.Wai.Handler.Warp (run)
import Web.Scotty
import Control.Monad
import Control.Monad.IO.Class
import System.IO
import System.Process
import Data.Time.Clock
import Data.Time.Clock.POSIX
import qualified Data.List as DL
import qualified Data.Text.Lazy as DTL
import qualified Data.ByteString.Char8 as BSC

addr = ""
rootPath = "/root/web_plain"
{- assume download file in /root/web_plain/video/ -}

main :: IO ()
main = do
    scotty 6000 $ do

        post "/url" $ do
            url <- param "/url"
            let urlData = BSC.unpack url
            liftIO $ print urlData
            _d <- liftIO $ getCurrentTime
            let _t = addUTCTime (60*60*8 :: NominalDiffTime) _d
            let _date = fmap (\x -> if x == ' ' then '.' else x) $ DL.take 19 $ show _t
            text $ DTL.pack $ addr <> "/video/" <> _date <> ".mp4"
            liftIO $ callCommand ("cd video; youtube-dl --no-mtime -o '" <> _date <> ".%(ext)s' " <> urlData)

        get "/video/:file" $ do
            _file <- param "file"
            file $ rootPath <> "/video/" <> _file

        return ()
