https://www.linode.com/docs/networking/vpn/set-up-a-hardened-openvpn-server
https://www.linode.com/docs/networking/vpn/configuring-openvpn-client-devices
https://www.linode.com/docs/networking/vpn/tunnel-your-internet-traffic-through-an-openvpn-server

https://www.linode.com/docs/networking/vpn/secure-communications-with-openvpn-on-ubuntu-12-04-precise-and-debian-7

记得把ta.key放到/etc/openvpn/  因为/etc/openvpn/server.conf tls-auth ta.key 0所以要放到/etc/openvpn/下
生成或许是在/etc/openvpn/easy-rsa/keys/

journalctl |grep vpn 查看vpn log
systemctl start openvpn
systemctl enable openvpn

client need five files: ca.crt client1.crt client1.key client.ovpn ta.key
this five files should stored in sdcard root path
手机 setting-security-install certificates from sdcard, install ca.crt
open openvpn and import client.ovpen then click connect will be ok


https://www.linode.com/docs/networking/vpn/set-up-a-hardened-openvpn-server

apt-get install openvpn
gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz > /etc/openvpn/server.conf
make-cadir /etc/openvpn/easy-rsa && cd /etc/openvpn/easy-rsa/
ln -s openssl-1.0.0.cnf openssl.cnf

/etc/openvpn/server.conf
ca /etc/openvpn/easy-rsa/keys/ca.crt
cert /etc/openvpn/easy-rsa/keys/server.crt
key /etc/openvpn/easy-rsa/keys/server.key  # This file should be kept secret
dh /etc/openvpn/dh4096.pem

/etc/openvpn/easy-rsa/vars
export KEY_COUNTRY="US"
export KEY_PROVINCE="CA"
export KEY_CITY="SanFrancisco"
export KEY_ORG="Fort-Funston"
export KEY_EMAIL="me@myhost.mydomain"
export KEY_OU="MyOrganizationalUnit"

cd /etc/openvpn/easy-rsa && source ./vars
./clean-all
openssl dhparam 4096 > /etc/openvpn/dh4096.pem

/etc/openvpn/server.conf
tls-auth /etc/openvpn/easy-rsa/keys/ta.key 0 # This file is secret

openvpn --genkey --secret /etc/openvpn/easy-rsa/keys/ta.key
adduser --system --shell /usr/sbin/nologin --no-create-home openvpn_server

cp /etc/openvpn/easy-rsa/keys/ta.key to /etc/openvpn/  #because in server.conf, it's tls-auth ta.key it will find it on /etc/openvpn/

/etc/openvpn/server.conf
user openvpn_server
group nogroup

echo 'cipher AES-256-CBC' >> /etc/openvpn/server.conf
echo 'auth SHA512' >> /etc/openvpn/server.conf
echo 'tls-cipher TLS-DHE-RSA-WITH-AES-256-GCM-SHA384:TLS-DHE-RSA-WITH-AES-128-GCM-SHA256:TLS-DHE-RSA-WITH-AES-256-CBC-SHA:TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA:TLS-DHE-RSA-WITH-AES-128-CBC-SHA:TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA' >> /etc/openvpn/server.conf        

cd /etc/openvpn/easy-rsa
./build-ca
./build-key-server server
cd /etc/openvpn/easy-rsa && source ./vars && ./build-key client1

cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf /etc/openvpn/easy-rsa/keys/client.ovpn
/etc/openvpn/easy-rsa/keys/client.ovpn
remote your-server-ip 1194

/etc/openvpn/easy-rsa/keys/client.ovpn
user nobody
group nogroup

ca /path/to/ca.crt
cert /path/to/client1.crt
key /path/to/client1.key
tls-auth /path/to/ta.key 1
cipher AES-256-CBC
auth SHA512
tls-cipher TLS-DHE-RSA-WITH-AES-256-GCM-SHA384:TLS-DHE-RSA-WITH-AES-128-GCM-SHA256:TLS-DHE-RSA-WITH-AES-256-CBC-SHA:TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA:TLS-DHE-RSA-WITH-AES-128-CBC-SHA:TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA

now, get these five files to your android phone: 
/etc/openvpn/easy-rsa/keys/ca.crt
/etc/openvpn/easy-rsa/keys/client1.crt
/etc/openvpn/easy-rsa/keys/client1.key
/etc/openvpn/easy-rsa/keys/client.ovpn
/etc/openvpn/easy-rsa/keys/ta.key

systemctl start openvpn


install ca.crt on phone , settings-security-install certificates from sdcard
install openvpn from google play, open it and import client.ovpn 

----------------------------------------------------------------------------------------------------------------
搞完上面这些发现可以连到openvpn server,但不进行网络转发，需要配置下iptables

cat /dev/net/tun 如果返回File descriptor in bad state说明tun/tap已经可以使用
如果是No such device就说明没有被正确配置，发ticket给客服联系开头tun/tap

https://www.linode.com/docs/networking/vpn/secure-communications-with-openvpn-on-ubuntu-12-04-precise-and-debian-7

vim /etc/openvpn/server.conf
push "redirect-gateway def1 bypass-dhcp"

开启ip转发
nano /etc/sysctl.conf
net.ipv4.ip_forward=1

echo 1 > /proc/sys/net/ipv4/ip_forward

用ifconfig可知tun0接口是10.8.0.1 

iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -s 10.8.0.0/24 -j ACCEPT
iptables -A FORWARD -j REJECT
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE
iptables -A INPUT -i tun+ -j ACCEPT
iptables -A FORWARD -i tun+ -j ACCEPT
iptables -A INPUT -i tap+ -j ACCEPT
iptables -A FORWARD -i tap+ -j ACCEPT

把上面这段iptables保存成openvpn.iptables.sh方便重新后运行

服务器上装个dnsmasq，开启dns server功能,登录你的linode从remote access查到你的dns resolvers,比如是1.1.1.1, 2.2.2.2
参考http://www.knowsky.com/888297.html
apt-get install dnsmasq resolvconf
nano /etc/dnsmasq.conf
server=1.1.1.1
resolv-file=/etc/resolv.dnsmasq.conf
strict-order
listen-address=10.8.0.1
bind-interfaces

vim /etc/resolv.dnsmasq.conf
nameserver 1.1.1.1
nameserver 2.2.2.2
nameserver 8.8.8.8

systemctl restart dnsmasq
systemctl enable dnsmasq
systemctl enable openvpn

服务器给客户端指定dns为10.8.0.1即服务器自身，而服务器开着dnsmasq监听自身，这样就会由服务器来当客户端的dns服务器
nano /etc/openvpn/server.conf
push "dhcp-option DNS 10.8.0.1"

systemctl restart openvpn

从服务器上把/etc/openvpn/easy-rsa/keys/里的ca.crt client1.crt client1.key client.ovpn ta.key
都下载到手机sdcard根目录里，设置-安全-安装证书 安装ca.crt然后用openvpn导入client.ovpn文件,点击connect即可连接成功并转发

-------------------------------------------------------------------------------------------
run openvpn client on Debian
copy ca.crt client.ovpn client1.crt client1.key ta.key to the same directory

sudo openvpn --script-security 2 --config ./client.ovpn

--------------------------------------------------------------------------------------------------------
there's also the openvpn-client@.service unit for openvpn client, not just network-manager-gnome stuff gui.
OpenVPN is an extremely versatile piece of software and many configurations are possible, in fact machines can be both "servers" and "clients", blurring the distinction between server and client.
With the release of v2.4, server configurations are stored in /etc/openvpn/server and client configurations are stored in /etc/openvpn/client and each mode has its own respective systemd unit, namely,  openvpn-client@.service and openvpn-server@.service.

the default server port is udp 1194, and you can change it in server.conf, and 
remember change the client.conf at the same time, try port 443 proto tcp maybe is a better idea because it confused some sniffers, but tpc is really slowly, so use udp
the config files are not same path in Debian and Archlinux, it's /etc/openvpn/server.conf on Debian, but /etc/openvpn/server/server.conf on Archlinux

/etc/openvpn/server.conf
    port 1194
    proto udp
    server 10.8.0.0 255.255.255.0
push "redirect-gateway def1 bypass-dhcp"
 push "dhcp-option DNS 10.8.0.1"

https://wiki.debian.org/openvpn%20for%20server%20and%20client
https://wiki.archlinux.org/index.php/Openvpn


iptables
In order to allow VPN traffic through your iptables firewall of your server, first create an iptables rule for NAT forwarding [3] on the server, assuming the interface you want to forward to is named eth0:
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE
If you have difficulty pinging the server through the VPN, you may need to add explicit rules to open up TUN/TAP interfaces to all traffic. If that is the case, do the following [4]:
Warning: There are security implications for the following rules if you do not trust all clients which connect to the server. Refer to the OpenVPN documentation on this topic for more details.
iptables -A INPUT -i tun+ -j ACCEPT
iptables -A FORWARD -i tun+ -j ACCEPT
iptables -A INPUT -i tap+ -j ACCEPT
iptables -A FORWARD -i tap+ -j ACCEPT
---------------------------------------------------------------
run openvpn via systemctl start openvpn or openvpn /etc/openvpn/server.conf
for ip forward run 'echo 1 > /proc/sys/net/ipv4/ip_forward'
or change it 'net.ipv4.ip_forward = 1' in /etc/sysctl.conf
then do the NAT
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE
This assumes you have set up your openvpn server with the IP 10.8.0.0 in the server.conf file as described above.
----------------------------------------------------------------------
run the client on Debian
aptitude install openvpn resolvconf
/etc/openvpn/easy-rsa/keys/client.ovpn
up /etc/openvpn/update-resolv-conf
down /etc/openvpn/update-resolv-conf

then run openvpn --script-security 2 --config /etc/openvpn/client.conf &
-------------------------------------------------------------------
cp ca.crt client.ovpn client1.crt client1.key ta.key to the same directory
sudo openvpn --script-security 2 --config ./client.ovpn 
it works!

You'll need the --script-security setting to get the update-resolv-conf script to execute. You can place this setting in the client.conf file if you like.
